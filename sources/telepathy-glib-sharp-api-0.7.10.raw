<?xml version="1.0"?>
<api>
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Tp" library="telepathy-glib-1.0-0.dll">
    <enum name="CMInfoSource" cname="TpCMInfoSource" type="enum">
      <member cname="TP_CM_INFO_SOURCE_NONE" name="None" />
      <member cname="TP_CM_INFO_SOURCE_FILE" name="File" />
      <member cname="TP_CM_INFO_SOURCE_LIVE" name="Live" />
    </enum>
    <enum name="ChannelCallStateFlags" cname="TpChannelCallStateFlags" type="enum">
      <member cname="TP_CHANNEL_CALL_STATE_RINGING" name="Ringing" value="1" />
      <member cname="TP_CHANNEL_CALL_STATE_QUEUED" name="Queued" value="2" />
      <member cname="TP_CHANNEL_CALL_STATE_HELD" name="Held" value="4" />
    </enum>
    <enum name="ChannelChatState" cname="TpChannelChatState" type="enum">
      <member cname="TP_CHANNEL_CHAT_STATE_GONE" name="Gone" />
      <member cname="TP_CHANNEL_CHAT_STATE_INACTIVE" name="Inactive" value="1" />
      <member cname="TP_CHANNEL_CHAT_STATE_ACTIVE" name="Active" value="2" />
      <member cname="TP_CHANNEL_CHAT_STATE_PAUSED" name="Paused" value="3" />
      <member cname="TP_CHANNEL_CHAT_STATE_COMPOSING" name="Composing" value="4" />
    </enum>
    <enum name="ChannelFactoryRequestStatus" cname="TpChannelFactoryRequestStatus" type="enum">
      <member cname="TP_CHANNEL_FACTORY_REQUEST_STATUS_NOT_IMPLEMENTED" name="NotImplemented" />
      <member cname="TP_CHANNEL_FACTORY_REQUEST_STATUS_NOT_AVAILABLE" name="NotAvailable" />
      <member cname="TP_CHANNEL_FACTORY_REQUEST_STATUS_INVALID_HANDLE" name="InvalidHandle" />
      <member cname="TP_CHANNEL_FACTORY_REQUEST_STATUS_ERROR" name="Error" />
      <member cname="TP_CHANNEL_FACTORY_REQUEST_STATUS_CREATED" name="Created" />
      <member cname="TP_CHANNEL_FACTORY_REQUEST_STATUS_QUEUED" name="Queued" />
      <member cname="TP_CHANNEL_FACTORY_REQUEST_STATUS_EXISTING" name="Existing" />
    </enum>
    <enum name="ChannelGroupChangeReason" cname="TpChannelGroupChangeReason" type="enum">
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_NONE" name="None" />
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_OFFLINE" name="Offline" value="1" />
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_KICKED" name="Kicked" value="2" />
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_BUSY" name="Busy" value="3" />
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_INVITED" name="Invited" value="4" />
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_BANNED" name="Banned" value="5" />
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_ERROR" name="Error" value="6" />
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_INVALID_CONTACT" name="InvalidContact" value="7" />
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_NO_ANSWER" name="NoAnswer" value="8" />
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_RENAMED" name="Renamed" value="9" />
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_PERMISSION_DENIED" name="PermissionDenied" value="10" />
      <member cname="TP_CHANNEL_GROUP_CHANGE_REASON_SEPARATED" name="Separated" value="11" />
    </enum>
    <enum name="ChannelGroupFlags" cname="TpChannelGroupFlags" type="enum">
      <member cname="TP_CHANNEL_GROUP_FLAG_CAN_ADD" name="CanAdd" value="1" />
      <member cname="TP_CHANNEL_GROUP_FLAG_CAN_REMOVE" name="CanRemove" value="2" />
      <member cname="TP_CHANNEL_GROUP_FLAG_CAN_RESCIND" name="CanRescind" value="4" />
      <member cname="TP_CHANNEL_GROUP_FLAG_MESSAGE_ADD" name="MessageAdd" value="8" />
      <member cname="TP_CHANNEL_GROUP_FLAG_MESSAGE_REMOVE" name="MessageRemove" value="16" />
      <member cname="TP_CHANNEL_GROUP_FLAG_MESSAGE_ACCEPT" name="MessageAccept" value="32" />
      <member cname="TP_CHANNEL_GROUP_FLAG_MESSAGE_REJECT" name="MessageReject" value="64" />
      <member cname="TP_CHANNEL_GROUP_FLAG_MESSAGE_RESCIND" name="MessageRescind" value="128" />
      <member cname="TP_CHANNEL_GROUP_FLAG_CHANNEL_SPECIFIC_HANDLES" name="ChannelSpecificHandles" value="256" />
      <member cname="TP_CHANNEL_GROUP_FLAG_ONLY_ONE_GROUP" name="OnlyOneGroup" value="512" />
      <member cname="TP_CHANNEL_GROUP_FLAG_HANDLE_OWNERS_NOT_AVAILABLE" name="HandleOwnersNotAvailable" value="1024" />
      <member cname="TP_CHANNEL_GROUP_FLAG_PROPERTIES" name="Properties" value="2048" />
    </enum>
    <enum name="ChannelMediaCapabilities" cname="TpChannelMediaCapabilities" type="enum">
      <member cname="TP_CHANNEL_MEDIA_CAPABILITY_AUDIO" name="Audio" value="1" />
      <member cname="TP_CHANNEL_MEDIA_CAPABILITY_VIDEO" name="Video" value="2" />
      <member cname="TP_CHANNEL_MEDIA_CAPABILITY_NAT_TRAVERSAL_STUN" name="NatTraversalStun" value="4" />
      <member cname="TP_CHANNEL_MEDIA_CAPABILITY_NAT_TRAVERSAL_GTALK_P2P" name="NatTraversalGtalkP2p" value="8" />
    </enum>
    <enum name="ChannelPasswordFlags" cname="TpChannelPasswordFlags" type="enum">
      <member cname="TP_CHANNEL_PASSWORD_FLAG_PROVIDE" name="Provide" value="8" />
    </enum>
    <enum name="ChannelTextMessageFlags" cname="TpChannelTextMessageFlags" type="enum">
      <member cname="TP_CHANNEL_TEXT_MESSAGE_FLAG_TRUNCATED" name="Truncated" value="1" />
      <member cname="TP_CHANNEL_TEXT_MESSAGE_FLAG_NON_TEXT_CONTENT" name="NonTextContent" value="2" />
    </enum>
    <enum name="ChannelTextMessageType" cname="TpChannelTextMessageType" type="enum">
      <member cname="TP_CHANNEL_TEXT_MESSAGE_TYPE_NORMAL" name="Normal" />
      <member cname="TP_CHANNEL_TEXT_MESSAGE_TYPE_ACTION" name="Action" value="1" />
      <member cname="TP_CHANNEL_TEXT_MESSAGE_TYPE_NOTICE" name="Notice" value="2" />
      <member cname="TP_CHANNEL_TEXT_MESSAGE_TYPE_AUTO_REPLY" name="AutoReply" value="3" />
      <member cname="TP_CHANNEL_TEXT_MESSAGE_TYPE_DELIVERY_REPORT" name="DeliveryReport" value="4" />
    </enum>
    <enum name="ChannelTextSendError" cname="TpChannelTextSendError" type="enum">
      <member cname="TP_CHANNEL_TEXT_SEND_ERROR_UNKNOWN" name="Unknown" />
      <member cname="TP_CHANNEL_TEXT_SEND_ERROR_OFFLINE" name="Offline" value="1" />
      <member cname="TP_CHANNEL_TEXT_SEND_ERROR_INVALID_CONTACT" name="InvalidContact" value="2" />
      <member cname="TP_CHANNEL_TEXT_SEND_ERROR_PERMISSION_DENIED" name="PermissionDenied" value="3" />
      <member cname="TP_CHANNEL_TEXT_SEND_ERROR_TOO_LONG" name="TooLong" value="4" />
      <member cname="TP_CHANNEL_TEXT_SEND_ERROR_NOT_IMPLEMENTED" name="NotImplemented" value="5" />
    </enum>
    <enum name="ConnMgrParamFlags" cname="TpConnMgrParamFlags" type="enum">
      <member cname="TP_CONN_MGR_PARAM_FLAG_REQUIRED" name="Required" value="1" />
      <member cname="TP_CONN_MGR_PARAM_FLAG_REGISTER" name="Register" value="2" />
      <member cname="TP_CONN_MGR_PARAM_FLAG_HAS_DEFAULT" name="HasDefault" value="4" />
      <member cname="TP_CONN_MGR_PARAM_FLAG_SECRET" name="Secret" value="8" />
    </enum>
    <enum name="ConnectionAliasFlags" cname="TpConnectionAliasFlags" type="enum">
      <member cname="TP_CONNECTION_ALIAS_FLAG_USER_SET" name="Set" value="1" />
    </enum>
    <enum name="ConnectionCapabilityFlags" cname="TpConnectionCapabilityFlags" type="enum">
      <member cname="TP_CONNECTION_CAPABILITY_FLAG_CREATE" name="Create" value="1" />
      <member cname="TP_CONNECTION_CAPABILITY_FLAG_INVITE" name="Invite" value="2" />
    </enum>
    <enum name="ConnectionPresenceType" cname="TpConnectionPresenceType" type="enum">
      <member cname="TP_CONNECTION_PRESENCE_TYPE_UNSET" name="Unset" />
      <member cname="TP_CONNECTION_PRESENCE_TYPE_OFFLINE" name="Offline" value="1" />
      <member cname="TP_CONNECTION_PRESENCE_TYPE_AVAILABLE" name="Available" value="2" />
      <member cname="TP_CONNECTION_PRESENCE_TYPE_AWAY" name="Away" value="3" />
      <member cname="TP_CONNECTION_PRESENCE_TYPE_EXTENDED_AWAY" name="ExtendedAway" value="4" />
      <member cname="TP_CONNECTION_PRESENCE_TYPE_HIDDEN" name="Hidden" value="5" />
      <member cname="TP_CONNECTION_PRESENCE_TYPE_BUSY" name="Busy" value="6" />
      <member cname="TP_CONNECTION_PRESENCE_TYPE_UNKNOWN" name="Unknown" value="7" />
      <member cname="TP_CONNECTION_PRESENCE_TYPE_ERROR" name="Error" value="8" />
    </enum>
    <enum name="ConnectionStatus" cname="TpConnectionStatus" type="enum">
      <member cname="TP_CONNECTION_STATUS_CONNECTED" name="Connected" />
      <member cname="TP_CONNECTION_STATUS_CONNECTING" name="Connecting" value="1" />
      <member cname="TP_CONNECTION_STATUS_DISCONNECTED" name="Disconnected" value="2" />
    </enum>
    <enum name="ConnectionStatusReason" cname="TpConnectionStatusReason" type="enum">
      <member cname="TP_CONNECTION_STATUS_REASON_NONE_SPECIFIED" name="NoneSpecified" />
      <member cname="TP_CONNECTION_STATUS_REASON_REQUESTED" name="Requested" value="1" />
      <member cname="TP_CONNECTION_STATUS_REASON_NETWORK_ERROR" name="NetworkError" value="2" />
      <member cname="TP_CONNECTION_STATUS_REASON_AUTHENTICATION_FAILED" name="AuthenticationFailed" value="3" />
      <member cname="TP_CONNECTION_STATUS_REASON_ENCRYPTION_ERROR" name="EncryptionError" value="4" />
      <member cname="TP_CONNECTION_STATUS_REASON_NAME_IN_USE" name="NameInUse" value="5" />
      <member cname="TP_CONNECTION_STATUS_REASON_CERT_NOT_PROVIDED" name="CertNotProvided" value="6" />
      <member cname="TP_CONNECTION_STATUS_REASON_CERT_UNTRUSTED" name="CertUntrusted" value="7" />
      <member cname="TP_CONNECTION_STATUS_REASON_CERT_EXPIRED" name="CertExpired" value="8" />
      <member cname="TP_CONNECTION_STATUS_REASON_CERT_NOT_ACTIVATED" name="CertNotActivated" value="9" />
      <member cname="TP_CONNECTION_STATUS_REASON_CERT_HOSTNAME_MISMATCH" name="CertHostnameMismatch" value="10" />
      <member cname="TP_CONNECTION_STATUS_REASON_CERT_FINGERPRINT_MISMATCH" name="CertFingerprintMismatch" value="11" />
      <member cname="TP_CONNECTION_STATUS_REASON_CERT_SELF_SIGNED" name="CertSelfSigned" value="12" />
      <member cname="TP_CONNECTION_STATUS_REASON_CERT_OTHER_ERROR" name="CertOtherError" value="13" />
    </enum>
    <enum name="DBusError" cname="TpDBusError" type="enum">
      <member cname="TP_DBUS_ERROR_UNKNOWN_REMOTE_ERROR" name="ErrorUnknownRemoteError" />
      <member cname="TP_DBUS_ERROR_PROXY_UNREFERENCED" name="ErrorProxyUnreferenced" value="1" />
      <member cname="TP_DBUS_ERROR_NO_INTERFACE" name="ErrorNoInterface" value="2" />
      <member cname="TP_DBUS_ERROR_NAME_OWNER_LOST" name="ErrorNameOwnerLost" value="3" />
      <member cname="TP_DBUS_ERROR_INVALID_BUS_NAME" name="ErrorInvalidBusName" value="4" />
      <member cname="TP_DBUS_ERROR_INVALID_INTERFACE_NAME" name="ErrorInvalidInterfaceName" value="5" />
      <member cname="TP_DBUS_ERROR_INVALID_OBJECT_PATH" name="ErrorInvalidObjectPath" value="6" />
      <member cname="TP_DBUS_ERROR_INVALID_MEMBER_NAME" name="ErrorInvalidMemberName" value="7" />
      <member cname="TP_DBUS_ERROR_OBJECT_REMOVED" name="ErrorObjectRemoved" value="8" />
      <member cname="TP_DBUS_ERROR_CANCELLED" name="ErrorCancelled" value="9" />
      <member cname="TP_DBUS_ERRORS" name="Errors" />
    </enum>
    <enum name="DBusNameType" cname="TpDBusNameType" type="enum">
      <member cname="TP_DBUS_NAME_TYPE_UNIQUE" name="Unique" value="1" />
      <member cname="TP_DBUS_NAME_TYPE_WELL_KNOWN" name="WellKnown" value="2" />
      <member cname="TP_DBUS_NAME_TYPE_BUS_DAEMON" name="BusDaemon" value="4" />
      <member cname="TP_DBUS_NAME_TYPE_NOT_BUS_DAEMON" name="NotBusDaemon" value="TP_DBUS_NAME_TYPE_UNIQUE | TP_DBUS_NAME_TYPE_WELL_KNOWN" />
      <member cname="TP_DBUS_NAME_TYPE_ANY" name="Any" value="TP_DBUS_NAME_TYPE_NOT_BUS_DAEMON | TP_DBUS_NAME_TYPE_BUS_DAEMON" />
    </enum>
    <enum name="DBusPropertiesMixinFlags" cname="TpDBusPropertiesMixinFlags" type="enum">
      <member cname="TP_DBUS_PROPERTIES_MIXIN_FLAG_READ" name="Read" value="1" />
      <member cname="TP_DBUS_PROPERTIES_MIXIN_FLAG_WRITE" name="Write" value="2" />
    </enum>
    <enum name="DTMFEvent" cname="TpDTMFEvent" type="enum">
      <member cname="TP_DTMF_EVENT_DIGIT_0" name="Digit0" />
      <member cname="TP_DTMF_EVENT_DIGIT_1" name="Digit1" value="1" />
      <member cname="TP_DTMF_EVENT_DIGIT_2" name="Digit2" value="2" />
      <member cname="TP_DTMF_EVENT_DIGIT_3" name="Digit3" value="3" />
      <member cname="TP_DTMF_EVENT_DIGIT_4" name="Digit4" value="4" />
      <member cname="TP_DTMF_EVENT_DIGIT_5" name="Digit5" value="5" />
      <member cname="TP_DTMF_EVENT_DIGIT_6" name="Digit6" value="6" />
      <member cname="TP_DTMF_EVENT_DIGIT_7" name="Digit7" value="7" />
      <member cname="TP_DTMF_EVENT_DIGIT_8" name="Digit8" value="8" />
      <member cname="TP_DTMF_EVENT_DIGIT_9" name="Digit9" value="9" />
      <member cname="TP_DTMF_EVENT_ASTERISK" name="Asterisk" value="10" />
      <member cname="TP_DTMF_EVENT_HASH" name="Hash" value="11" />
      <member cname="TP_DTMF_EVENT_LETTER_A" name="LetterA" value="12" />
      <member cname="TP_DTMF_EVENT_LETTER_B" name="LetterB" value="13" />
      <member cname="TP_DTMF_EVENT_LETTER_C" name="LetterC" value="14" />
      <member cname="TP_DTMF_EVENT_LETTER_D" name="LetterD" value="15" />
    </enum>
    <enum name="Error" cname="TpError" gtype="tp_error_get_type" type="enum">
      <member cname="TP_ERROR_NETWORK_ERROR" name="NetworkError" />
      <member cname="TP_ERROR_NOT_IMPLEMENTED" name="NotImplemented" />
      <member cname="TP_ERROR_INVALID_ARGUMENT" name="InvalidArgument" />
      <member cname="TP_ERROR_NOT_AVAILABLE" name="NotAvailable" />
      <member cname="TP_ERROR_PERMISSION_DENIED" name="PermissionDenied" />
      <member cname="TP_ERROR_DISCONNECTED" name="Disconnected" />
      <member cname="TP_ERROR_INVALID_HANDLE" name="InvalidHandle" />
      <member cname="TP_ERROR_CHANNEL_BANNED" name="ChannelBanned" />
      <member cname="TP_ERROR_CHANNEL_FULL" name="ChannelFull" />
      <member cname="TP_ERROR_CHANNEL_INVITE_ONLY" name="ChannelInviteOnly" />
    </enum>
    <enum name="HandleType" cname="TpHandleType" type="enum">
      <member cname="TP_HANDLE_TYPE_NONE" name="None" />
      <member cname="TP_HANDLE_TYPE_CONTACT" name="Contact" value="1" />
      <member cname="TP_HANDLE_TYPE_ROOM" name="Room" value="2" />
      <member cname="TP_HANDLE_TYPE_LIST" name="List" value="3" />
      <member cname="TP_HANDLE_TYPE_GROUP" name="Group" value="4" />
    </enum>
    <enum name="LocalHoldState" cname="TpLocalHoldState" type="enum">
      <member cname="TP_LOCAL_HOLD_STATE_UNHELD" name="Unheld" />
      <member cname="TP_LOCAL_HOLD_STATE_HELD" name="Held" value="1" />
      <member cname="TP_LOCAL_HOLD_STATE_PENDING_HOLD" name="PendingHold" value="2" />
      <member cname="TP_LOCAL_HOLD_STATE_PENDING_UNHOLD" name="PendingUnhold" value="3" />
    </enum>
    <enum name="LocalHoldStateReason" cname="TpLocalHoldStateReason" type="enum">
      <member cname="TP_LOCAL_HOLD_STATE_REASON_NONE" name="None" />
      <member cname="TP_LOCAL_HOLD_STATE_REASON_REQUESTED" name="Requested" value="1" />
      <member cname="TP_LOCAL_HOLD_STATE_REASON_RESOURCE_NOT_AVAILABLE" name="ResourceNotAvailable" value="2" />
    </enum>
    <enum name="MediaStreamBaseProto" cname="TpMediaStreamBaseProto" type="enum">
      <member cname="TP_MEDIA_STREAM_BASE_PROTO_UDP" name="Udp" />
      <member cname="TP_MEDIA_STREAM_BASE_PROTO_TCP" name="Tcp" value="1" />
    </enum>
    <enum name="MediaStreamDirection" cname="TpMediaStreamDirection" type="enum">
      <member cname="TP_MEDIA_STREAM_DIRECTION_NONE" name="None" />
      <member cname="TP_MEDIA_STREAM_DIRECTION_SEND" name="Send" value="1" />
      <member cname="TP_MEDIA_STREAM_DIRECTION_RECEIVE" name="Receive" value="2" />
      <member cname="TP_MEDIA_STREAM_DIRECTION_BIDIRECTIONAL" name="Bidirectional" value="3" />
    </enum>
    <enum name="MediaStreamError" cname="TpMediaStreamError" type="enum">
      <member cname="TP_MEDIA_STREAM_ERROR_UNKNOWN" name="Unknown" />
      <member cname="TP_MEDIA_STREAM_ERROR_EOS" name="Eos" value="1" />
    </enum>
    <enum name="MediaStreamPendingSend" cname="TpMediaStreamPendingSend" type="enum">
      <member cname="TP_MEDIA_STREAM_PENDING_LOCAL_SEND" name="LocalSend" value="1" />
      <member cname="TP_MEDIA_STREAM_PENDING_REMOTE_SEND" name="RemoteSend" value="2" />
    </enum>
    <enum name="MediaStreamState" cname="TpMediaStreamState" type="enum">
      <member cname="TP_MEDIA_STREAM_STATE_DISCONNECTED" name="Disconnected" />
      <member cname="TP_MEDIA_STREAM_STATE_CONNECTING" name="Connecting" value="1" />
      <member cname="TP_MEDIA_STREAM_STATE_CONNECTED" name="Connected" value="2" />
    </enum>
    <enum name="MediaStreamTransportType" cname="TpMediaStreamTransportType" type="enum">
      <member cname="TP_MEDIA_STREAM_TRANSPORT_TYPE_LOCAL" name="Local" />
      <member cname="TP_MEDIA_STREAM_TRANSPORT_TYPE_DERIVED" name="Derived" value="1" />
      <member cname="TP_MEDIA_STREAM_TRANSPORT_TYPE_RELAY" name="Relay" value="2" />
    </enum>
    <enum name="MediaStreamType" cname="TpMediaStreamType" type="enum">
      <member cname="TP_MEDIA_STREAM_TYPE_AUDIO" name="Audio" />
      <member cname="TP_MEDIA_STREAM_TYPE_VIDEO" name="Video" value="1" />
    </enum>
    <enum name="PropertyFlags" cname="TpPropertyFlags" type="enum">
      <member cname="TP_PROPERTY_FLAG_READ" name="Read" value="1" />
      <member cname="TP_PROPERTY_FLAG_WRITE" name="Write" value="2" />
    </enum>
    <enum name="SocketAccessControl" cname="TpSocketAccessControl" type="enum">
      <member cname="TP_SOCKET_ACCESS_CONTROL_LOCALHOST" name="Localhost" />
      <member cname="TP_SOCKET_ACCESS_CONTROL_PORT" name="Port" value="1" />
      <member cname="TP_SOCKET_ACCESS_CONTROL_NETMASK" name="Netmask" value="2" />
      <member cname="TP_SOCKET_ACCESS_CONTROL_CREDENTIALS" name="Credentials" value="3" />
    </enum>
    <enum name="SocketAddressType" cname="TpSocketAddressType" type="enum">
      <member cname="TP_SOCKET_ADDRESS_TYPE_UNIX" name="Unix" />
      <member cname="TP_SOCKET_ADDRESS_TYPE_ABSTRACT_UNIX" name="AbstractUnix" value="1" />
      <member cname="TP_SOCKET_ADDRESS_TYPE_IPV4" name="Ipv4" value="2" />
      <member cname="TP_SOCKET_ADDRESS_TYPE_IPV6" name="Ipv6" value="3" />
    </enum>
    <enum name="TubeState" cname="TpTubeState" type="enum">
      <member cname="TP_TUBE_STATE_LOCAL_PENDING" name="LocalPending" />
      <member cname="TP_TUBE_STATE_REMOTE_PENDING" name="RemotePending" value="1" />
      <member cname="TP_TUBE_STATE_OPEN" name="Open" value="2" />
    </enum>
    <enum name="TubeType" cname="TpTubeType" type="enum">
      <member cname="TP_TUBE_TYPE_DBUS" name="Dbus" />
      <member cname="TP_TUBE_TYPE_STREAM" name="Stream" value="1" />
    </enum>
    <callback name="BaseConnectionCreateChannelFactoriesImpl" cname="TpBaseConnectionCreateChannelFactoriesImpl">
      <return-type type="GPtrArray*" />
      <parameters>
        <parameter type="TpBaseConnection*" name="self" />
      </parameters>
    </callback>
    <callback name="BaseConnectionCreateHandleReposImpl" cname="TpBaseConnectionCreateHandleReposImpl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpBaseConnection*" name="self" />
        <parameter type="TpHandleRepoIface*" array="true" name="repos" />
      </parameters>
    </callback>
    <callback name="BaseConnectionGetUniqueConnectionNameImpl" cname="TpBaseConnectionGetUniqueConnectionNameImpl">
      <return-type type="gchar*" />
      <parameters>
        <parameter type="TpBaseConnection*" name="self" />
      </parameters>
    </callback>
    <callback name="BaseConnectionManagerNewConnFunc" cname="TpBaseConnectionManagerNewConnFunc">
      <return-type type="TpBaseConnection*" />
      <parameters>
        <parameter type="TpBaseConnectionManager*" name="self" />
        <parameter type="const-gchar*" name="proto" />
        <parameter type="TpIntSet*" name="params_present" />
        <parameter type="void*" name="parsed_params" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="BaseConnectionProc" cname="TpBaseConnectionProc">
      <return-type type="void" />
      <parameters>
        <parameter type="TpBaseConnection*" name="self" />
      </parameters>
    </callback>
    <callback name="BaseConnectionStartConnectingImpl" cname="TpBaseConnectionStartConnectingImpl">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="TpBaseConnection*" name="self" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="CMParamFilter" cname="TpCMParamFilter">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="const-TpCMParamSpec*" name="paramspec" />
        <parameter type="GValue*" name="value" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="CMParamSetter" cname="TpCMParamSetter">
      <return-type type="void" />
      <parameters>
        <parameter type="const-TpCMParamSpec*" name="paramspec" />
        <parameter type="const-GValue*" name="value" />
        <parameter type="gpointer" name="params" />
      </parameters>
    </callback>
    <callback name="ChannelFactoryIfaceForeachImpl" cname="TpChannelFactoryIfaceForeachImpl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannelFactoryIface*" name="self" />
        <parameter type="TpChannelFunc" name="func" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ChannelFactoryIfaceProc" cname="TpChannelFactoryIfaceProc">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannelFactoryIface*" name="self" />
      </parameters>
    </callback>
    <callback name="ChannelFactoryIfaceRequestImpl" cname="TpChannelFactoryIfaceRequestImpl">
      <return-type type="TpChannelFactoryRequestStatus" />
      <parameters>
        <parameter type="TpChannelFactoryIface*" name="self" />
        <parameter type="const-gchar*" name="chan_type" />
        <parameter type="TpHandleType" name="handle_type" />
        <parameter type="guint" name="handle" />
        <parameter type="gpointer" name="request" />
        <parameter type="TpChannelIface**" name="ret" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="ChannelFunc" cname="TpChannelFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannelIface*" name="self" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <callback name="ChannelWhenReadyCb" cname="TpChannelWhenReadyCb">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="channel" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="ConnectionManagerListCb" cname="TpConnectionManagerListCb">
      <return-type type="void" />
      <parameters>
        <parameter type="const-TpConnectionManager*" name="cms" />
        <parameter type="gsize" name="n_cms" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="ConnectionNameListCb" cname="TpConnectionNameListCb">
      <return-type type="void" />
      <parameters>
        <parameter type="const-gchar*" name="names" />
        <parameter type="gsize" name="n" />
        <parameter type="const-gchar*" name="cms" />
        <parameter type="const-gchar*" name="protocols" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="ConnectionWhenReadyCb" cname="TpConnectionWhenReadyCb">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="connection" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="DBusDaemonNameOwnerChangedCb" cname="TpDBusDaemonNameOwnerChangedCb">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="daemon" />
        <parameter type="const-gchar*" name="name" />
        <parameter type="const-gchar*" name="new_owner" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="DBusPropertiesMixinGetter" cname="TpDBusPropertiesMixinGetter">
      <return-type type="void" />
      <parameters>
        <parameter type="GObject*" name="object" />
        <parameter type="GQuark" name="interface" />
        <parameter type="GQuark" name="name" />
        <parameter type="GValue*" name="value" />
        <parameter type="gpointer" name="getter_data" />
      </parameters>
    </callback>
    <callback name="DBusPropertiesMixinSetter" cname="TpDBusPropertiesMixinSetter">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GObject*" name="object" />
        <parameter type="GQuark" name="interface" />
        <parameter type="GQuark" name="name" />
        <parameter type="const-GValue*" name="value" />
        <parameter type="gpointer" name="setter_data" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="DynamicHandleRepoNormalizeFunc" cname="TpDynamicHandleRepoNormalizeFunc">
      <return-type type="gchar*" />
      <parameters>
        <parameter type="TpHandleRepoIface*" name="repo" />
        <parameter type="const-gchar*" name="id" />
        <parameter type="gpointer" name="context" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="GroupMixinAddMemberFunc" cname="TpGroupMixinAddMemberFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GObject*" name="obj" />
        <parameter type="TpHandle" name="handle" />
        <parameter type="const-gchar*" name="message" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="GroupMixinRemMemberFunc" cname="TpGroupMixinRemMemberFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GObject*" name="obj" />
        <parameter type="TpHandle" name="handle" />
        <parameter type="const-gchar*" name="message" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="GroupMixinRemMemberWithReasonFunc" cname="TpGroupMixinRemMemberWithReasonFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GObject*" name="obj" />
        <parameter type="TpHandle" name="handle" />
        <parameter type="const-gchar*" name="message" />
        <parameter type="guint" name="reason" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="HandleSetMemberFunc" cname="TpHandleSetMemberFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="TpHandleSet*" name="set" />
        <parameter type="TpHandle" name="handle" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <callback name="IntFunc" cname="TpIntFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="guint" name="i" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <callback name="PresenceMixinGetContactStatusesFunc" cname="TpPresenceMixinGetContactStatusesFunc">
      <return-type type="GHashTable*" />
      <parameters>
        <parameter type="GObject*" name="obj" />
        <parameter type="const-GArray*" name="contacts" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="PresenceMixinSetOwnStatusFunc" cname="TpPresenceMixinSetOwnStatusFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GObject*" name="obj" />
        <parameter type="const-TpPresenceStatus*" name="status" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="PresenceMixinStatusAvailableFunc" cname="TpPresenceMixinStatusAvailableFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GObject*" name="obj" />
        <parameter type="guint" name="which" />
      </parameters>
    </callback>
    <callback name="PropertiesSetFunc" cname="TpPropertiesSetFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GObject*" name="obj" />
        <parameter type="TpPropertiesContext*" name="ctx" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="ProxyInterfaceAddedCb" cname="TpProxyInterfaceAddedCb">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="self" />
        <parameter type="guint" name="quark" />
        <parameter type="DBusGProxy*" name="proxy" />
        <parameter type="gpointer" name="unused" />
      </parameters>
    </callback>
    <callback name="ProxyInvokeFunc" cname="TpProxyInvokeFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="self" />
        <parameter type="GError*" name="error" />
        <parameter type="GValueArray*" name="args" />
        <parameter type="GCallback" name="callback" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelCallbackForClose" cname="tp_cli_channel_callback_for_close">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelCallbackForGetChannelType" cname="tp_cli_channel_callback_for_get_channel_type">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-gchar*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelCallbackForGetHandle" cname="tp_cli_channel_callback_for_get_handle">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="guint" name="out1" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelCallbackForGetInterfaces" cname="tp_cli_channel_callback_for_get_interfaces">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-gchar**" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceCallStateCallbackForGetCallStates" cname="tp_cli_channel_interface_call_state_callback_for_get_call_states">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="GHashTable*" name="out_States" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceCallStateSignalCallbackCallStateChanged" cname="tp_cli_channel_interface_call_state_signal_callback_call_state_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_contact" />
        <parameter type="guint" name="arg_state" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceChatStateCallbackForSetChatState" cname="tp_cli_channel_interface_chat_state_callback_for_set_chat_state">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceChatStateSignalCallbackChatStateChanged" cname="tp_cli_channel_interface_chat_state_signal_callback_chat_state_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_contact" />
        <parameter type="guint" name="arg_state" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceDtmfCallbackForStartTone" cname="tp_cli_channel_interface_dtmf_callback_for_start_tone">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceDtmfCallbackForStopTone" cname="tp_cli_channel_interface_dtmf_callback_for_stop_tone">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupCallbackForAddMembers" cname="tp_cli_channel_interface_group_callback_for_add_members">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupCallbackForGetAllMembers" cname="tp_cli_channel_interface_group_callback_for_get_all_members">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GArray*" name="out0" />
        <parameter type="const-GArray*" name="out1" />
        <parameter type="const-GArray*" name="out2" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupCallbackForGetGroupFlags" cname="tp_cli_channel_interface_group_callback_for_get_group_flags">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupCallbackForGetHandleOwners" cname="tp_cli_channel_interface_group_callback_for_get_handle_owners">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupCallbackForGetLocalPendingMembers" cname="tp_cli_channel_interface_group_callback_for_get_local_pending_members">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupCallbackForGetLocalPendingMembersWithInfo" cname="tp_cli_channel_interface_group_callback_for_get_local_pending_members_with_info">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupCallbackForGetMembers" cname="tp_cli_channel_interface_group_callback_for_get_members">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupCallbackForGetRemotePendingMembers" cname="tp_cli_channel_interface_group_callback_for_get_remote_pending_members">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupCallbackForGetSelfHandle" cname="tp_cli_channel_interface_group_callback_for_get_self_handle">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupCallbackForRemoveMembers" cname="tp_cli_channel_interface_group_callback_for_remove_members">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupCallbackForRemoveMembersWithReason" cname="tp_cli_channel_interface_group_callback_for_remove_members_with_reason">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupSignalCallbackGroupFlagsChanged" cname="tp_cli_channel_interface_group_signal_callback_group_flags_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_added" />
        <parameter type="guint" name="arg_removed" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupSignalCallbackHandleOwnersChanged" cname="tp_cli_channel_interface_group_signal_callback_handle_owners_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="GHashTable*" name="arg_Added" />
        <parameter type="const-GArray*" name="arg_Removed" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupSignalCallbackMembersChanged" cname="tp_cli_channel_interface_group_signal_callback_members_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-gchar*" name="arg_message" />
        <parameter type="const-GArray*" name="arg_added" />
        <parameter type="const-GArray*" name="arg_removed" />
        <parameter type="const-GArray*" name="arg_local_pending" />
        <parameter type="const-GArray*" name="arg_remote_pending" />
        <parameter type="guint" name="arg_actor" />
        <parameter type="guint" name="arg_reason" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceGroupSignalCallbackSelfHandleChanged" cname="tp_cli_channel_interface_group_signal_callback_self_handle_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_Self_Handle" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceHoldCallbackForGetHoldState" cname="tp_cli_channel_interface_hold_callback_for_get_hold_state">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="out_HoldState" />
        <parameter type="guint" name="out_Reason" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceHoldCallbackForRequestHold" cname="tp_cli_channel_interface_hold_callback_for_request_hold">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceHoldSignalCallbackHoldStateChanged" cname="tp_cli_channel_interface_hold_signal_callback_hold_state_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_HoldState" />
        <parameter type="guint" name="arg_Reason" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceMediaSignallingCallbackForGetSessionHandlers" cname="tp_cli_channel_interface_media_signalling_callback_for_get_session_handlers">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfaceMediaSignallingSignalCallbackNewSessionHandler" cname="tp_cli_channel_interface_media_signalling_signal_callback_new_session_handler">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-gchar*" name="arg_Session_Handler" />
        <parameter type="const-gchar*" name="arg_Session_Type" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfacePasswordCallbackForGetPasswordFlags" cname="tp_cli_channel_interface_password_callback_for_get_password_flags">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfacePasswordCallbackForProvidePassword" cname="tp_cli_channel_interface_password_callback_for_provide_password">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="gboolean" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelInterfacePasswordSignalCallbackPasswordFlagsChanged" cname="tp_cli_channel_interface_password_signal_callback_password_flags_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_added" />
        <parameter type="guint" name="arg_removed" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelSignalCallbackClosed" cname="tp_cli_channel_signal_callback_closed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeRoomListCallbackForGetListingRooms" cname="tp_cli_channel_type_room_list_callback_for_get_listing_rooms">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="gboolean" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeRoomListCallbackForListRooms" cname="tp_cli_channel_type_room_list_callback_for_list_rooms">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeRoomListCallbackForStopListing" cname="tp_cli_channel_type_room_list_callback_for_stop_listing">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeRoomListSignalCallbackGotRooms" cname="tp_cli_channel_type_room_list_signal_callback_got_rooms">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GPtrArray*" name="arg_rooms" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeRoomListSignalCallbackListingRooms" cname="tp_cli_channel_type_room_list_signal_callback_listing_rooms">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="gboolean" name="arg_listing" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeStreamedMediaCallbackForListStreams" cname="tp_cli_channel_type_streamed_media_callback_for_list_streams">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeStreamedMediaCallbackForRemoveStreams" cname="tp_cli_channel_type_streamed_media_callback_for_remove_streams">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeStreamedMediaCallbackForRequestStreamDirection" cname="tp_cli_channel_type_streamed_media_callback_for_request_stream_direction">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeStreamedMediaCallbackForRequestStreams" cname="tp_cli_channel_type_streamed_media_callback_for_request_streams">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeStreamedMediaSignalCallbackStreamAdded" cname="tp_cli_channel_type_streamed_media_signal_callback_stream_added">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_stream_id" />
        <parameter type="guint" name="arg_contact_handle" />
        <parameter type="guint" name="arg_stream_type" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeStreamedMediaSignalCallbackStreamDirectionChanged" cname="tp_cli_channel_type_streamed_media_signal_callback_stream_direction_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_stream_id" />
        <parameter type="guint" name="arg_stream_direction" />
        <parameter type="guint" name="arg_pending_flags" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeStreamedMediaSignalCallbackStreamError" cname="tp_cli_channel_type_streamed_media_signal_callback_stream_error">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_stream_id" />
        <parameter type="guint" name="arg_errno" />
        <parameter type="const-gchar*" name="arg_message" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeStreamedMediaSignalCallbackStreamRemoved" cname="tp_cli_channel_type_streamed_media_signal_callback_stream_removed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_stream_id" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeStreamedMediaSignalCallbackStreamStateChanged" cname="tp_cli_channel_type_streamed_media_signal_callback_stream_state_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_stream_id" />
        <parameter type="guint" name="arg_stream_state" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTextCallbackForAcknowledgePendingMessages" cname="tp_cli_channel_type_text_callback_for_acknowledge_pending_messages">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTextCallbackForGetMessageTypes" cname="tp_cli_channel_type_text_callback_for_get_message_types">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTextCallbackForListPendingMessages" cname="tp_cli_channel_type_text_callback_for_list_pending_messages">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTextCallbackForSend" cname="tp_cli_channel_type_text_callback_for_send">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTextSignalCallbackLostMessage" cname="tp_cli_channel_type_text_signal_callback_lost_message">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTextSignalCallbackReceived" cname="tp_cli_channel_type_text_signal_callback_received">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_id" />
        <parameter type="guint" name="arg_timestamp" />
        <parameter type="guint" name="arg_sender" />
        <parameter type="guint" name="arg_type" />
        <parameter type="guint" name="arg_flags" />
        <parameter type="const-gchar*" name="arg_text" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTextSignalCallbackSendError" cname="tp_cli_channel_type_text_signal_callback_send_error">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_error" />
        <parameter type="guint" name="arg_timestamp" />
        <parameter type="guint" name="arg_type" />
        <parameter type="const-gchar*" name="arg_text" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTextSignalCallbackSent" cname="tp_cli_channel_type_text_signal_callback_sent">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_timestamp" />
        <parameter type="guint" name="arg_type" />
        <parameter type="const-gchar*" name="arg_text" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesCallbackForAcceptDBusTube" cname="tp_cli_channel_type_tubes_callback_for_accept_d_bus_tube">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-gchar*" name="out_address" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesCallbackForAcceptStreamTube" cname="tp_cli_channel_type_tubes_callback_for_accept_stream_tube">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GValue*" name="out_address" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesCallbackForCloseTube" cname="tp_cli_channel_type_tubes_callback_for_close_tube">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesCallbackForGetAvailableStreamTubeTypes" cname="tp_cli_channel_type_tubes_callback_for_get_available_stream_tube_types">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="GHashTable*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesCallbackForGetAvailableTubeTypes" cname="tp_cli_channel_type_tubes_callback_for_get_available_tube_types">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesCallbackForGetDBusNames" cname="tp_cli_channel_type_tubes_callback_for_get_d_bus_names">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesCallbackForGetDBusTubeAddress" cname="tp_cli_channel_type_tubes_callback_for_get_d_bus_tube_address">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-gchar*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesCallbackForGetStreamTubeSocketAddress" cname="tp_cli_channel_type_tubes_callback_for_get_stream_tube_socket_address">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="out_address_type" />
        <parameter type="const-GValue*" name="out_address" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesCallbackForListTubes" cname="tp_cli_channel_type_tubes_callback_for_list_tubes">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesCallbackForOfferDBusTube" cname="tp_cli_channel_type_tubes_callback_for_offer_d_bus_tube">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesCallbackForOfferStreamTube" cname="tp_cli_channel_type_tubes_callback_for_offer_stream_tube">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesSignalCallbackDBusNamesChanged" cname="tp_cli_channel_type_tubes_signal_callback_d_bus_names_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_id" />
        <parameter type="const-GPtrArray*" name="arg_added" />
        <parameter type="const-GArray*" name="arg_removed" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesSignalCallbackNewTube" cname="tp_cli_channel_type_tubes_signal_callback_new_tube">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_id" />
        <parameter type="guint" name="arg_initiator" />
        <parameter type="guint" name="arg_type" />
        <parameter type="const-gchar*" name="arg_service" />
        <parameter type="GHashTable*" name="arg_parameters" />
        <parameter type="guint" name="arg_state" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesSignalCallbackStreamTubeNewConnection" cname="tp_cli_channel_type_tubes_signal_callback_stream_tube_new_connection">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_id" />
        <parameter type="guint" name="arg_handle" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesSignalCallbackTubeClosed" cname="tp_cli_channel_type_tubes_signal_callback_tube_closed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_id" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliChannelTypeTubesSignalCallbackTubeStateChanged" cname="tp_cli_channel_type_tubes_signal_callback_tube_state_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpChannel*" name="proxy" />
        <parameter type="guint" name="arg_id" />
        <parameter type="guint" name="arg_state" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForConnect" cname="tp_cli_connection_callback_for_connect">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForDisconnect" cname="tp_cli_connection_callback_for_disconnect">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForGetInterfaces" cname="tp_cli_connection_callback_for_get_interfaces">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-gchar**" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForGetProtocol" cname="tp_cli_connection_callback_for_get_protocol">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-gchar*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForGetSelfHandle" cname="tp_cli_connection_callback_for_get_self_handle">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForGetStatus" cname="tp_cli_connection_callback_for_get_status">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForHoldHandles" cname="tp_cli_connection_callback_for_hold_handles">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForInspectHandles" cname="tp_cli_connection_callback_for_inspect_handles">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-gchar**" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForListChannels" cname="tp_cli_connection_callback_for_list_channels">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForReleaseHandles" cname="tp_cli_connection_callback_for_release_handles">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForRequestChannel" cname="tp_cli_connection_callback_for_request_channel">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-gchar*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionCallbackForRequestHandles" cname="tp_cli_connection_callback_for_request_handles">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAliasingCallbackForGetAliasFlags" cname="tp_cli_connection_interface_aliasing_callback_for_get_alias_flags">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAliasingCallbackForRequestAliases" cname="tp_cli_connection_interface_aliasing_callback_for_request_aliases">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-gchar**" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAliasingCallbackForSetAliases" cname="tp_cli_connection_interface_aliasing_callback_for_set_aliases">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAliasingSignalCallbackAliasesChanged" cname="tp_cli_connection_interface_aliasing_signal_callback_aliases_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GPtrArray*" name="arg_aliases" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAvatarsCallbackForClearAvatar" cname="tp_cli_connection_interface_avatars_callback_for_clear_avatar">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAvatarsCallbackForGetAvatarRequirements" cname="tp_cli_connection_interface_avatars_callback_for_get_avatar_requirements">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-gchar**" name="out0" />
        <parameter type="guint" name="out1" />
        <parameter type="guint" name="out2" />
        <parameter type="guint" name="out3" />
        <parameter type="guint" name="out4" />
        <parameter type="guint" name="out5" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAvatarsCallbackForGetAvatarTokens" cname="tp_cli_connection_interface_avatars_callback_for_get_avatar_tokens">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-gchar**" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAvatarsCallbackForGetKnownAvatarTokens" cname="tp_cli_connection_interface_avatars_callback_for_get_known_avatar_tokens">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="GHashTable*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAvatarsCallbackForRequestAvatar" cname="tp_cli_connection_interface_avatars_callback_for_request_avatar">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GArray*" name="out0" />
        <parameter type="const-gchar*" name="out1" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAvatarsCallbackForRequestAvatars" cname="tp_cli_connection_interface_avatars_callback_for_request_avatars">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAvatarsCallbackForSetAvatar" cname="tp_cli_connection_interface_avatars_callback_for_set_avatar">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-gchar*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAvatarsSignalCallbackAvatarRetrieved" cname="tp_cli_connection_interface_avatars_signal_callback_avatar_retrieved">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="guint" name="arg_contact" />
        <parameter type="const-gchar*" name="arg_token" />
        <parameter type="const-GArray*" name="arg_avatar" />
        <parameter type="const-gchar*" name="arg_type" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceAvatarsSignalCallbackAvatarUpdated" cname="tp_cli_connection_interface_avatars_signal_callback_avatar_updated">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="guint" name="arg_contact" />
        <parameter type="const-gchar*" name="arg_new_avatar_token" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceCapabilitiesCallbackForAdvertiseCapabilities" cname="tp_cli_connection_interface_capabilities_callback_for_advertise_capabilities">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceCapabilitiesCallbackForGetCapabilities" cname="tp_cli_connection_interface_capabilities_callback_for_get_capabilities">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceCapabilitiesSignalCallbackCapabilitiesChanged" cname="tp_cli_connection_interface_capabilities_signal_callback_capabilities_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GPtrArray*" name="arg_caps" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfacePresenceCallbackForAddStatus" cname="tp_cli_connection_interface_presence_callback_for_add_status">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfacePresenceCallbackForClearStatus" cname="tp_cli_connection_interface_presence_callback_for_clear_status">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfacePresenceCallbackForGetPresence" cname="tp_cli_connection_interface_presence_callback_for_get_presence">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="GHashTable*" name="out_presence" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfacePresenceCallbackForGetStatuses" cname="tp_cli_connection_interface_presence_callback_for_get_statuses">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="GHashTable*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfacePresenceCallbackForRemoveStatus" cname="tp_cli_connection_interface_presence_callback_for_remove_status">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfacePresenceCallbackForRequestPresence" cname="tp_cli_connection_interface_presence_callback_for_request_presence">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfacePresenceCallbackForSetLastActivityTime" cname="tp_cli_connection_interface_presence_callback_for_set_last_activity_time">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfacePresenceCallbackForSetStatus" cname="tp_cli_connection_interface_presence_callback_for_set_status">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfacePresenceSignalCallbackPresenceUpdate" cname="tp_cli_connection_interface_presence_signal_callback_presence_update">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="GHashTable*" name="arg_presence" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceSimplePresenceCallbackForGetPresences" cname="tp_cli_connection_interface_simple_presence_callback_for_get_presences">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="GHashTable*" name="out_presence" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceSimplePresenceCallbackForSetPresence" cname="tp_cli_connection_interface_simple_presence_callback_for_set_presence">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionInterfaceSimplePresenceSignalCallbackPresencesChanged" cname="tp_cli_connection_interface_simple_presence_signal_callback_presences_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="GHashTable*" name="arg_presence" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionManagerCallbackForGetParameters" cname="tp_cli_connection_manager_callback_for_get_parameters">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnectionManager*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionManagerCallbackForListProtocols" cname="tp_cli_connection_manager_callback_for_list_protocols">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnectionManager*" name="proxy" />
        <parameter type="const-gchar**" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionManagerCallbackForRequestConnection" cname="tp_cli_connection_manager_callback_for_request_connection">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnectionManager*" name="proxy" />
        <parameter type="const-gchar*" name="out0" />
        <parameter type="const-gchar*" name="out1" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionManagerSignalCallbackNewConnection" cname="tp_cli_connection_manager_signal_callback_new_connection">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnectionManager*" name="proxy" />
        <parameter type="const-gchar*" name="arg_bus_name" />
        <parameter type="const-gchar*" name="arg_object_path" />
        <parameter type="const-gchar*" name="arg_proto" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionSignalCallbackNewChannel" cname="tp_cli_connection_signal_callback_new_channel">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="const-gchar*" name="arg_object_path" />
        <parameter type="const-gchar*" name="arg_channel_type" />
        <parameter type="guint" name="arg_handle_type" />
        <parameter type="guint" name="arg_handle" />
        <parameter type="gboolean" name="arg_suppress_handler" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliConnectionSignalCallbackStatusChanged" cname="tp_cli_connection_signal_callback_status_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpConnection*" name="proxy" />
        <parameter type="guint" name="arg_status" />
        <parameter type="guint" name="arg_reason" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForAddMatch" cname="tp_cli_dbus_daemon_callback_for_add_match">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForGetConnectionSeLinuxSecurityContext" cname="tp_cli_dbus_daemon_callback_for_get_connection_se_linux_security_context">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-GArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForGetConnectionUnixProcessId" cname="tp_cli_dbus_daemon_callback_for_get_connection_unix_process_id">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForGetConnectionUnixUser" cname="tp_cli_dbus_daemon_callback_for_get_connection_unix_user">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForGetId" cname="tp_cli_dbus_daemon_callback_for_get_id">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-gchar*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForGetNameOwner" cname="tp_cli_dbus_daemon_callback_for_get_name_owner">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-gchar*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForHello" cname="tp_cli_dbus_daemon_callback_for_hello">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-gchar*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForListActivatableNames" cname="tp_cli_dbus_daemon_callback_for_list_activatable_names">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-gchar**" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForListNames" cname="tp_cli_dbus_daemon_callback_for_list_names">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-gchar**" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForListQueuedOwners" cname="tp_cli_dbus_daemon_callback_for_list_queued_owners">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-gchar**" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForNameHasOwner" cname="tp_cli_dbus_daemon_callback_for_name_has_owner">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="gboolean" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForReleaseName" cname="tp_cli_dbus_daemon_callback_for_release_name">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForReloadConfig" cname="tp_cli_dbus_daemon_callback_for_reload_config">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForRemoveMatch" cname="tp_cli_dbus_daemon_callback_for_remove_match">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForRequestName" cname="tp_cli_dbus_daemon_callback_for_request_name">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonCallbackForStartServiceByName" cname="tp_cli_dbus_daemon_callback_for_start_service_by_name">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="guint" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonSignalCallbackNameAcquired" cname="tp_cli_dbus_daemon_signal_callback_name_acquired">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-gchar*" name="arg0" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonSignalCallbackNameLost" cname="tp_cli_dbus_daemon_signal_callback_name_lost">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-gchar*" name="arg0" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusDaemonSignalCallbackNameOwnerChanged" cname="tp_cli_dbus_daemon_signal_callback_name_owner_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpDBusDaemon*" name="proxy" />
        <parameter type="const-gchar*" name="arg0" />
        <parameter type="const-gchar*" name="arg1" />
        <parameter type="const-gchar*" name="arg2" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusIntrospectableCallbackForIntrospect" cname="tp_cli_dbus_introspectable_callback_for_introspect">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="proxy" />
        <parameter type="const-gchar*" name="out_XML_Data" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusPeerCallbackForGetMachineId" cname="tp_cli_dbus_peer_callback_for_get_machine_id">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="proxy" />
        <parameter type="const-gchar*" name="out_Machine_UUID" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusPeerCallbackForPing" cname="tp_cli_dbus_peer_callback_for_ping">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusPropertiesCallbackForGet" cname="tp_cli_dbus_properties_callback_for_get">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="proxy" />
        <parameter type="const-GValue*" name="out_Value" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusPropertiesCallbackForGetAll" cname="tp_cli_dbus_properties_callback_for_get_all">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="proxy" />
        <parameter type="GHashTable*" name="out_Properties" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliDbusPropertiesCallbackForSet" cname="tp_cli_dbus_properties_callback_for_set">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaSessionHandlerCallbackForError" cname="tp_cli_media_session_handler_callback_for_error">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaSessionHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaSessionHandlerCallbackForReady" cname="tp_cli_media_session_handler_callback_for_ready">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaSessionHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaSessionHandlerSignalCallbackNewStreamHandler" cname="tp_cli_media_session_handler_signal_callback_new_stream_handler">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaSessionHandler*" name="proxy" />
        <parameter type="const-gchar*" name="arg_stream_handler" />
        <parameter type="guint" name="arg_id" />
        <parameter type="guint" name="arg_media_type" />
        <parameter type="guint" name="arg_direction" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerCallbackForCodecChoice" cname="tp_cli_media_stream_handler_callback_for_codec_choice">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerCallbackForError" cname="tp_cli_media_stream_handler_callback_for_error">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerCallbackForHoldState" cname="tp_cli_media_stream_handler_callback_for_hold_state">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerCallbackForNativeCandidatesPrepared" cname="tp_cli_media_stream_handler_callback_for_native_candidates_prepared">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerCallbackForNewActiveCandidatePair" cname="tp_cli_media_stream_handler_callback_for_new_active_candidate_pair">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerCallbackForNewNativeCandidate" cname="tp_cli_media_stream_handler_callback_for_new_native_candidate">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerCallbackForReady" cname="tp_cli_media_stream_handler_callback_for_ready">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerCallbackForSetLocalCodecs" cname="tp_cli_media_stream_handler_callback_for_set_local_codecs">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerCallbackForStreamState" cname="tp_cli_media_stream_handler_callback_for_stream_state">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerCallbackForSupportedCodecs" cname="tp_cli_media_stream_handler_callback_for_supported_codecs">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerCallbackForUnholdFailure" cname="tp_cli_media_stream_handler_callback_for_unhold_failure">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerSignalCallbackAddRemoteCandidate" cname="tp_cli_media_stream_handler_signal_callback_add_remote_candidate">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-gchar*" name="arg_candidate_id" />
        <parameter type="const-GPtrArray*" name="arg_transports" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerSignalCallbackClose" cname="tp_cli_media_stream_handler_signal_callback_close">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerSignalCallbackRemoveRemoteCandidate" cname="tp_cli_media_stream_handler_signal_callback_remove_remote_candidate">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-gchar*" name="arg_candidate_id" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerSignalCallbackSetActiveCandidatePair" cname="tp_cli_media_stream_handler_signal_callback_set_active_candidate_pair">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-gchar*" name="arg_native_candidate_id" />
        <parameter type="const-gchar*" name="arg_remote_candidate_id" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerSignalCallbackSetRemoteCandidateList" cname="tp_cli_media_stream_handler_signal_callback_set_remote_candidate_list">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GPtrArray*" name="arg_remote_candidates" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerSignalCallbackSetRemoteCodecs" cname="tp_cli_media_stream_handler_signal_callback_set_remote_codecs">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="const-GPtrArray*" name="arg_codecs" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerSignalCallbackSetStreamHeld" cname="tp_cli_media_stream_handler_signal_callback_set_stream_held">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="gboolean" name="arg_Held" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerSignalCallbackSetStreamPlaying" cname="tp_cli_media_stream_handler_signal_callback_set_stream_playing">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="gboolean" name="arg_playing" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerSignalCallbackSetStreamSending" cname="tp_cli_media_stream_handler_signal_callback_set_stream_sending">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="gboolean" name="arg_sending" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerSignalCallbackStartTelephonyEvent" cname="tp_cli_media_stream_handler_signal_callback_start_telephony_event">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="guchar" name="arg_event" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliMediaStreamHandlerSignalCallbackStopTelephonyEvent" cname="tp_cli_media_stream_handler_signal_callback_stop_telephony_event">
      <return-type type="void" />
      <parameters>
        <parameter type="TpMediaStreamHandler*" name="proxy" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliPropertiesInterfaceCallbackForGetProperties" cname="tp_cli_properties_interface_callback_for_get_properties">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliPropertiesInterfaceCallbackForListProperties" cname="tp_cli_properties_interface_callback_for_list_properties">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="proxy" />
        <parameter type="const-GPtrArray*" name="out0" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliPropertiesInterfaceCallbackForSetProperties" cname="tp_cli_properties_interface_callback_for_set_properties">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="proxy" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliPropertiesInterfaceSignalCallbackPropertiesChanged" cname="tp_cli_properties_interface_signal_callback_properties_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="proxy" />
        <parameter type="const-GPtrArray*" name="arg_properties" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpCliPropertiesInterfaceSignalCallbackPropertyFlagsChanged" cname="tp_cli_properties_interface_signal_callback_property_flags_changed">
      <return-type type="void" />
      <parameters>
        <parameter type="TpProxy*" name="proxy" />
        <parameter type="const-GPtrArray*" name="arg_properties" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GObject*" name="weak_object" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelCloseImpl" cname="tp_svc_channel_close_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannel*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelGetChannelTypeImpl" cname="tp_svc_channel_get_channel_type_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannel*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelGetHandleImpl" cname="tp_svc_channel_get_handle_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannel*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelGetInterfacesImpl" cname="tp_svc_channel_get_interfaces_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannel*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceCallStateGetCallStatesImpl" cname="tp_svc_channel_interface_call_state_get_call_states_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceCallState*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceChatStateSetChatStateImpl" cname="tp_svc_channel_interface_chat_state_set_chat_state_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceChatState*" name="self" />
        <parameter type="guint" name="in_state" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceDtmfStartToneImpl" cname="tp_svc_channel_interface_dtmf_start_tone_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceDTMF*" name="self" />
        <parameter type="guint" name="in_stream_id" />
        <parameter type="guchar" name="in_event" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceDtmfStopToneImpl" cname="tp_svc_channel_interface_dtmf_stop_tone_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceDTMF*" name="self" />
        <parameter type="guint" name="in_stream_id" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceGroupAddMembersImpl" cname="tp_svc_channel_interface_group_add_members_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceGroup*" name="self" />
        <parameter type="const-GArray*" name="in_contacts" />
        <parameter type="const-gchar*" name="in_message" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceGroupGetAllMembersImpl" cname="tp_svc_channel_interface_group_get_all_members_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceGroup*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceGroupGetGroupFlagsImpl" cname="tp_svc_channel_interface_group_get_group_flags_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceGroup*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceGroupGetHandleOwnersImpl" cname="tp_svc_channel_interface_group_get_handle_owners_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceGroup*" name="self" />
        <parameter type="const-GArray*" name="in_handles" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceGroupGetLocalPendingMembersImpl" cname="tp_svc_channel_interface_group_get_local_pending_members_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceGroup*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceGroupGetLocalPendingMembersWithInfoImpl" cname="tp_svc_channel_interface_group_get_local_pending_members_with_info_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceGroup*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceGroupGetMembersImpl" cname="tp_svc_channel_interface_group_get_members_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceGroup*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceGroupGetRemotePendingMembersImpl" cname="tp_svc_channel_interface_group_get_remote_pending_members_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceGroup*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceGroupGetSelfHandleImpl" cname="tp_svc_channel_interface_group_get_self_handle_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceGroup*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceGroupRemoveMembersImpl" cname="tp_svc_channel_interface_group_remove_members_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceGroup*" name="self" />
        <parameter type="const-GArray*" name="in_contacts" />
        <parameter type="const-gchar*" name="in_message" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceGroupRemoveMembersWithReasonImpl" cname="tp_svc_channel_interface_group_remove_members_with_reason_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceGroup*" name="self" />
        <parameter type="const-GArray*" name="in_contacts" />
        <parameter type="const-gchar*" name="in_message" />
        <parameter type="guint" name="in_reason" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceHoldGetHoldStateImpl" cname="tp_svc_channel_interface_hold_get_hold_state_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceHold*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceHoldRequestHoldImpl" cname="tp_svc_channel_interface_hold_request_hold_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceHold*" name="self" />
        <parameter type="gboolean" name="in_Hold" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfaceMediaSignallingGetSessionHandlersImpl" cname="tp_svc_channel_interface_media_signalling_get_session_handlers_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfaceMediaSignalling*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfacePasswordGetPasswordFlagsImpl" cname="tp_svc_channel_interface_password_get_password_flags_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfacePassword*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelInterfacePasswordProvidePasswordImpl" cname="tp_svc_channel_interface_password_provide_password_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelInterfacePassword*" name="self" />
        <parameter type="const-gchar*" name="in_password" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeRoomListGetListingRoomsImpl" cname="tp_svc_channel_type_room_list_get_listing_rooms_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeRoomList*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeRoomListListRoomsImpl" cname="tp_svc_channel_type_room_list_list_rooms_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeRoomList*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeRoomListStopListingImpl" cname="tp_svc_channel_type_room_list_stop_listing_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeRoomList*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeStreamedMediaListStreamsImpl" cname="tp_svc_channel_type_streamed_media_list_streams_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeStreamedMedia*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeStreamedMediaRemoveStreamsImpl" cname="tp_svc_channel_type_streamed_media_remove_streams_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeStreamedMedia*" name="self" />
        <parameter type="const-GArray*" name="in_streams" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeStreamedMediaRequestStreamDirectionImpl" cname="tp_svc_channel_type_streamed_media_request_stream_direction_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeStreamedMedia*" name="self" />
        <parameter type="guint" name="in_stream_id" />
        <parameter type="guint" name="in_stream_direction" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeStreamedMediaRequestStreamsImpl" cname="tp_svc_channel_type_streamed_media_request_streams_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeStreamedMedia*" name="self" />
        <parameter type="guint" name="in_contact_handle" />
        <parameter type="const-GArray*" name="in_types" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTextAcknowledgePendingMessagesImpl" cname="tp_svc_channel_type_text_acknowledge_pending_messages_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeText*" name="self" />
        <parameter type="const-GArray*" name="in_ids" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTextGetMessageTypesImpl" cname="tp_svc_channel_type_text_get_message_types_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeText*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTextListPendingMessagesImpl" cname="tp_svc_channel_type_text_list_pending_messages_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeText*" name="self" />
        <parameter type="gboolean" name="in_clear" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTextSendImpl" cname="tp_svc_channel_type_text_send_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeText*" name="self" />
        <parameter type="guint" name="in_type" />
        <parameter type="const-gchar*" name="in_text" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTubesAcceptDBusTubeImpl" cname="tp_svc_channel_type_tubes_accept_d_bus_tube_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeTubes*" name="self" />
        <parameter type="guint" name="in_id" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTubesAcceptStreamTubeImpl" cname="tp_svc_channel_type_tubes_accept_stream_tube_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeTubes*" name="self" />
        <parameter type="guint" name="in_id" />
        <parameter type="guint" name="in_address_type" />
        <parameter type="guint" name="in_access_control" />
        <parameter type="const-GValue*" name="in_access_control_param" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTubesCloseTubeImpl" cname="tp_svc_channel_type_tubes_close_tube_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeTubes*" name="self" />
        <parameter type="guint" name="in_id" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTubesGetAvailableStreamTubeTypesImpl" cname="tp_svc_channel_type_tubes_get_available_stream_tube_types_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeTubes*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTubesGetAvailableTubeTypesImpl" cname="tp_svc_channel_type_tubes_get_available_tube_types_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeTubes*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTubesGetDBusNamesImpl" cname="tp_svc_channel_type_tubes_get_d_bus_names_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeTubes*" name="self" />
        <parameter type="guint" name="in_id" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTubesGetDBusTubeAddressImpl" cname="tp_svc_channel_type_tubes_get_d_bus_tube_address_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeTubes*" name="self" />
        <parameter type="guint" name="in_id" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTubesGetStreamTubeSocketAddressImpl" cname="tp_svc_channel_type_tubes_get_stream_tube_socket_address_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeTubes*" name="self" />
        <parameter type="guint" name="in_id" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTubesListTubesImpl" cname="tp_svc_channel_type_tubes_list_tubes_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeTubes*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTubesOfferDBusTubeImpl" cname="tp_svc_channel_type_tubes_offer_d_bus_tube_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeTubes*" name="self" />
        <parameter type="const-gchar*" name="in_service" />
        <parameter type="GHashTable*" name="in_parameters" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcChannelTypeTubesOfferStreamTubeImpl" cname="tp_svc_channel_type_tubes_offer_stream_tube_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcChannelTypeTubes*" name="self" />
        <parameter type="const-gchar*" name="in_service" />
        <parameter type="GHashTable*" name="in_parameters" />
        <parameter type="guint" name="in_address_type" />
        <parameter type="const-GValue*" name="in_address" />
        <parameter type="guint" name="in_access_control" />
        <parameter type="const-GValue*" name="in_access_control_param" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionConnectImpl" cname="tp_svc_connection_connect_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionDisconnectImpl" cname="tp_svc_connection_disconnect_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionGetInterfacesImpl" cname="tp_svc_connection_get_interfaces_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionGetProtocolImpl" cname="tp_svc_connection_get_protocol_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionGetSelfHandleImpl" cname="tp_svc_connection_get_self_handle_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionGetStatusImpl" cname="tp_svc_connection_get_status_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionHoldHandlesImpl" cname="tp_svc_connection_hold_handles_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="guint" name="in_handle_type" />
        <parameter type="const-GArray*" name="in_handles" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInspectHandlesImpl" cname="tp_svc_connection_inspect_handles_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="guint" name="in_handle_type" />
        <parameter type="const-GArray*" name="in_handles" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceAliasingGetAliasFlagsImpl" cname="tp_svc_connection_interface_aliasing_get_alias_flags_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceAliasing*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceAliasingRequestAliasesImpl" cname="tp_svc_connection_interface_aliasing_request_aliases_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceAliasing*" name="self" />
        <parameter type="const-GArray*" name="in_contacts" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceAliasingSetAliasesImpl" cname="tp_svc_connection_interface_aliasing_set_aliases_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceAliasing*" name="self" />
        <parameter type="GHashTable*" name="in_aliases" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceAvatarsClearAvatarImpl" cname="tp_svc_connection_interface_avatars_clear_avatar_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceAvatars*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceAvatarsGetAvatarRequirementsImpl" cname="tp_svc_connection_interface_avatars_get_avatar_requirements_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceAvatars*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceAvatarsGetAvatarTokensImpl" cname="tp_svc_connection_interface_avatars_get_avatar_tokens_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceAvatars*" name="self" />
        <parameter type="const-GArray*" name="in_contacts" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceAvatarsGetKnownAvatarTokensImpl" cname="tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceAvatars*" name="self" />
        <parameter type="const-GArray*" name="in_contacts" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceAvatarsRequestAvatarImpl" cname="tp_svc_connection_interface_avatars_request_avatar_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceAvatars*" name="self" />
        <parameter type="guint" name="in_contact" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceAvatarsRequestAvatarsImpl" cname="tp_svc_connection_interface_avatars_request_avatars_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceAvatars*" name="self" />
        <parameter type="const-GArray*" name="in_contacts" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceAvatarsSetAvatarImpl" cname="tp_svc_connection_interface_avatars_set_avatar_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceAvatars*" name="self" />
        <parameter type="const-GArray*" name="in_avatar" />
        <parameter type="const-gchar*" name="in_mime_type" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceCapabilitiesAdvertiseCapabilitiesImpl" cname="tp_svc_connection_interface_capabilities_advertise_capabilities_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceCapabilities*" name="self" />
        <parameter type="const-GPtrArray*" name="in_add" />
        <parameter type="const-gchar**" name="in_remove" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceCapabilitiesGetCapabilitiesImpl" cname="tp_svc_connection_interface_capabilities_get_capabilities_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceCapabilities*" name="self" />
        <parameter type="const-GArray*" name="in_handles" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfacePresenceAddStatusImpl" cname="tp_svc_connection_interface_presence_add_status_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfacePresence*" name="self" />
        <parameter type="const-gchar*" name="in_status" />
        <parameter type="GHashTable*" name="in_parms" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfacePresenceClearStatusImpl" cname="tp_svc_connection_interface_presence_clear_status_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfacePresence*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfacePresenceGetPresenceImpl" cname="tp_svc_connection_interface_presence_get_presence_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfacePresence*" name="self" />
        <parameter type="const-GArray*" name="in_contacts" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfacePresenceGetStatusesImpl" cname="tp_svc_connection_interface_presence_get_statuses_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfacePresence*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfacePresenceRemoveStatusImpl" cname="tp_svc_connection_interface_presence_remove_status_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfacePresence*" name="self" />
        <parameter type="const-gchar*" name="in_status" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfacePresenceRequestPresenceImpl" cname="tp_svc_connection_interface_presence_request_presence_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfacePresence*" name="self" />
        <parameter type="const-GArray*" name="in_contacts" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfacePresenceSetLastActivityTimeImpl" cname="tp_svc_connection_interface_presence_set_last_activity_time_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfacePresence*" name="self" />
        <parameter type="guint" name="in_time" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfacePresenceSetStatusImpl" cname="tp_svc_connection_interface_presence_set_status_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfacePresence*" name="self" />
        <parameter type="GHashTable*" name="in_statuses" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceSimplePresenceGetPresencesImpl" cname="tp_svc_connection_interface_simple_presence_get_presences_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceSimplePresence*" name="self" />
        <parameter type="const-GArray*" name="in_contacts" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionInterfaceSimplePresenceSetPresenceImpl" cname="tp_svc_connection_interface_simple_presence_set_presence_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionInterfaceSimplePresence*" name="self" />
        <parameter type="const-gchar*" name="in_status" />
        <parameter type="const-gchar*" name="in_status_message" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionListChannelsImpl" cname="tp_svc_connection_list_channels_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionManagerGetParametersImpl" cname="tp_svc_connection_manager_get_parameters_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionManager*" name="self" />
        <parameter type="const-gchar*" name="in_proto" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionManagerListProtocolsImpl" cname="tp_svc_connection_manager_list_protocols_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionManager*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionManagerRequestConnectionImpl" cname="tp_svc_connection_manager_request_connection_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnectionManager*" name="self" />
        <parameter type="const-gchar*" name="in_proto" />
        <parameter type="GHashTable*" name="in_parameters" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionReleaseHandlesImpl" cname="tp_svc_connection_release_handles_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="guint" name="in_handle_type" />
        <parameter type="const-GArray*" name="in_handles" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionRequestChannelImpl" cname="tp_svc_connection_request_channel_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="const-gchar*" name="in_type" />
        <parameter type="guint" name="in_handle_type" />
        <parameter type="guint" name="in_handle" />
        <parameter type="gboolean" name="in_suppress_handler" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcConnectionRequestHandlesImpl" cname="tp_svc_connection_request_handles_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcConnection*" name="self" />
        <parameter type="guint" name="in_handle_type" />
        <parameter type="const-gchar**" name="in_names" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcDbusIntrospectableIntrospectImpl" cname="tp_svc_dbus_introspectable_introspect_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcDBusIntrospectable*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcDbusPropertiesGetAllImpl" cname="tp_svc_dbus_properties_get_all_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcDBusProperties*" name="self" />
        <parameter type="const-gchar*" name="in_Interface_Name" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcDbusPropertiesGetImpl" cname="tp_svc_dbus_properties_get_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcDBusProperties*" name="self" />
        <parameter type="const-gchar*" name="in_Interface_Name" />
        <parameter type="const-gchar*" name="in_Property_Name" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcDbusPropertiesSetImpl" cname="tp_svc_dbus_properties_set_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcDBusProperties*" name="self" />
        <parameter type="const-gchar*" name="in_Interface_Name" />
        <parameter type="const-gchar*" name="in_Property_Name" />
        <parameter type="const-GValue*" name="in_Value" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaSessionHandlerErrorImpl" cname="tp_svc_media_session_handler_error_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaSessionHandler*" name="self" />
        <parameter type="guint" name="in_errno" />
        <parameter type="const-gchar*" name="in_message" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaSessionHandlerReadyImpl" cname="tp_svc_media_session_handler_ready_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaSessionHandler*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaStreamHandlerCodecChoiceImpl" cname="tp_svc_media_stream_handler_codec_choice_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaStreamHandler*" name="self" />
        <parameter type="guint" name="in_codec_id" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaStreamHandlerErrorImpl" cname="tp_svc_media_stream_handler_error_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaStreamHandler*" name="self" />
        <parameter type="guint" name="in_errno" />
        <parameter type="const-gchar*" name="in_message" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaStreamHandlerHoldStateImpl" cname="tp_svc_media_stream_handler_hold_state_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaStreamHandler*" name="self" />
        <parameter type="gboolean" name="in_Held" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaStreamHandlerNativeCandidatesPreparedImpl" cname="tp_svc_media_stream_handler_native_candidates_prepared_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaStreamHandler*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaStreamHandlerNewActiveCandidatePairImpl" cname="tp_svc_media_stream_handler_new_active_candidate_pair_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaStreamHandler*" name="self" />
        <parameter type="const-gchar*" name="in_native_candidate_id" />
        <parameter type="const-gchar*" name="in_remote_candidate_id" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaStreamHandlerNewNativeCandidateImpl" cname="tp_svc_media_stream_handler_new_native_candidate_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaStreamHandler*" name="self" />
        <parameter type="const-gchar*" name="in_candidate_id" />
        <parameter type="const-GPtrArray*" name="in_transports" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaStreamHandlerReadyImpl" cname="tp_svc_media_stream_handler_ready_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaStreamHandler*" name="self" />
        <parameter type="const-GPtrArray*" name="in_codecs" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaStreamHandlerSetLocalCodecsImpl" cname="tp_svc_media_stream_handler_set_local_codecs_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaStreamHandler*" name="self" />
        <parameter type="const-GPtrArray*" name="in_codecs" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaStreamHandlerStreamStateImpl" cname="tp_svc_media_stream_handler_stream_state_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaStreamHandler*" name="self" />
        <parameter type="guint" name="in_state" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaStreamHandlerSupportedCodecsImpl" cname="tp_svc_media_stream_handler_supported_codecs_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaStreamHandler*" name="self" />
        <parameter type="const-GPtrArray*" name="in_codecs" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcMediaStreamHandlerUnholdFailureImpl" cname="tp_svc_media_stream_handler_unhold_failure_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcMediaStreamHandler*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcPropertiesInterfaceGetPropertiesImpl" cname="tp_svc_properties_interface_get_properties_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcPropertiesInterface*" name="self" />
        <parameter type="const-GArray*" name="in_properties" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcPropertiesInterfaceListPropertiesImpl" cname="tp_svc_properties_interface_list_properties_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcPropertiesInterface*" name="self" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <callback name="TpSvcPropertiesInterfaceSetPropertiesImpl" cname="tp_svc_properties_interface_set_properties_impl">
      <return-type type="void" />
      <parameters>
        <parameter type="TpSvcPropertiesInterface*" name="self" />
        <parameter type="const-GPtrArray*" name="in_properties" />
        <parameter type="DBusGMethodInvocation*" name="context" />
      </parameters>
    </callback>
    <interface name="ChannelFactoryIface" cname="TpChannelFactoryIface">
      <signal name="NewChannel" cname="new-channel" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="TpChannelFactoryIface*" />
          <parameter name="p0" type="GObject*" />
          <parameter name="p1" type="gpointer" />
        </parameters>
      </signal>
      <signal name="ChannelError" cname="channel-error" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="TpChannelFactoryIface*" />
          <parameter name="p0" type="GObject*" />
          <parameter name="p1" type="gpointer" />
          <parameter name="p2" type="gpointer" />
        </parameters>
      </signal>
      <method name="CloseAll" cname="tp_channel_factory_iface_close_all">
        <return-type type="void" />
      </method>
      <method name="Connected" cname="tp_channel_factory_iface_connected">
        <return-type type="void" />
      </method>
      <method name="Connecting" cname="tp_channel_factory_iface_connecting">
        <return-type type="void" />
      </method>
      <method name="Disconnected" cname="tp_channel_factory_iface_disconnected">
        <return-type type="void" />
      </method>
      <method name="EmitChannelError" cname="tp_channel_factory_iface_emit_channel_error" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="TpChannelIface*" name="channel" />
          <parameter type="GError*" name="error" />
          <parameter type="gpointer" name="request" />
        </parameters>
      </method>
      <method name="EmitNewChannel" cname="tp_channel_factory_iface_emit_new_channel" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="TpChannelIface*" name="channel" />
          <parameter type="gpointer" name="request" />
        </parameters>
      </method>
      <method name="Foreach" cname="tp_channel_factory_iface_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="TpChannelFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_channel_factory_iface_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Request" cname="tp_channel_factory_iface_request">
        <return-type type="TpChannelFactoryRequestStatus" />
        <parameters>
          <parameter type="const-gchar*" name="chan_type" />
          <parameter type="TpHandleType" name="handle_type" />
          <parameter type="guint" name="handle" />
          <parameter type="gpointer" name="request" />
          <parameter type="TpChannelIface**" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </interface>
    <interface name="ChannelIface" cname="TpChannelIface">
      <property name="" cname="" type="ginterface" />
      <property name="" cname="" type="ginterface" />
      <property name="" cname="" type="ginterface" />
      <property name="" cname="" type="ginterface" />
      <method name="GetType" cname="tp_channel_iface_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </interface>
    <interface name="HandleRepoIface" cname="TpHandleRepoIface">
      <virtual_method name="HandleIsValid" cname="handle_is_valid">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="TpHandle" name="handle" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="HandlesAreValid" cname="handles_are_valid">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-GArray*" name="handles" />
          <parameter type="gboolean" name="allow_zero" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="RefHandle" cname="ref_handle">
        <return-type type="void" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="TpHandle" name="handle" />
        </parameters>
      </virtual_method>
      <virtual_method name="UnrefHandle" cname="unref_handle">
        <return-type type="void" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="TpHandle" name="handle" />
        </parameters>
      </virtual_method>
      <virtual_method name="ClientHoldHandle" cname="client_hold_handle">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-gchar*" name="client" />
          <parameter type="TpHandle" name="handle" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="ClientReleaseHandle" cname="client_release_handle">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-gchar*" name="client" />
          <parameter type="TpHandle" name="handle" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="EnsureHandle" cname="ensure_handle">
        <return-type type="TpHandle" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-char*" name="id" />
          <parameter type="gpointer" name="context" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="LookupHandle" cname="lookup_handle">
        <return-type type="TpHandle" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-char*" name="id" />
          <parameter type="gpointer" name="context" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetQdata" cname="set_qdata">
        <return-type type="void" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="repo" />
          <parameter type="TpHandle" name="handle" />
          <parameter type="GQuark" name="key_id" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetQdata" cname="get_qdata">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="repo" />
          <parameter type="TpHandle" name="handle" />
          <parameter type="GQuark" name="key_id" />
        </parameters>
      </virtual_method>
      <method name="GetType" cname="tp_handle_repo_iface_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </interface>
    <interface name="SvcChannel" cname="TpSvcChannel">
      <method name="GetType" cname="tp_svc_channel_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementClose" cname="tp_svc_channel_implement_close" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelClass*" name="klass" />
          <parameter type="tp_svc_channel_close_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetChannelType" cname="tp_svc_channel_implement_get_channel_type" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelClass*" name="klass" />
          <parameter type="tp_svc_channel_get_channel_type_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetHandle" cname="tp_svc_channel_implement_get_handle" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelClass*" name="klass" />
          <parameter type="tp_svc_channel_get_handle_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetInterfaces" cname="tp_svc_channel_implement_get_interfaces" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelClass*" name="klass" />
          <parameter type="tp_svc_channel_get_interfaces_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcChannelInterfaceCallState" cname="TpSvcChannelInterfaceCallState">
      <method name="GetType" cname="tp_svc_channel_interface_call_state_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementGetCallStates" cname="tp_svc_channel_interface_call_state_implement_get_call_states" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceCallStateClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_call_state_get_call_states_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcChannelInterfaceChatState" cname="TpSvcChannelInterfaceChatState">
      <method name="GetType" cname="tp_svc_channel_interface_chat_state_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementSetChatState" cname="tp_svc_channel_interface_chat_state_implement_set_chat_state" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceChatStateClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_chat_state_set_chat_state_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcChannelInterfaceDTMF" cname="TpSvcChannelInterfaceDTMF">
      <method name="GetType" cname="tp_svc_channel_interface_dtmf_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementStartTone" cname="tp_svc_channel_interface_dtmf_implement_start_tone" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceDTMFClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_dtmf_start_tone_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementStopTone" cname="tp_svc_channel_interface_dtmf_implement_stop_tone" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceDTMFClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_dtmf_stop_tone_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcChannelInterfaceGroup" cname="TpSvcChannelInterfaceGroup">
      <method name="EmitGroupFlagsChanged" cname="tp_svc_channel_interface_group_emit_group_flags_changed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_added" />
          <parameter type="guint" name="arg_removed" />
        </parameters>
      </method>
      <method name="EmitMembersChanged" cname="tp_svc_channel_interface_group_emit_members_changed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="const-gchar*" name="arg_message" />
          <parameter type="const-GArray*" name="arg_added" />
          <parameter type="const-GArray*" name="arg_removed" />
          <parameter type="const-GArray*" name="arg_local_pending" />
          <parameter type="const-GArray*" name="arg_remote_pending" />
          <parameter type="guint" name="arg_actor" />
          <parameter type="guint" name="arg_reason" />
        </parameters>
      </method>
      <method name="EmitSelfHandleChanged" cname="tp_svc_channel_interface_group_emit_self_handle_changed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_Self_Handle" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_svc_channel_interface_group_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementAddMembers" cname="tp_svc_channel_interface_group_implement_add_members" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceGroupClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_group_add_members_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetAllMembers" cname="tp_svc_channel_interface_group_implement_get_all_members" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceGroupClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_group_get_all_members_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetGroupFlags" cname="tp_svc_channel_interface_group_implement_get_group_flags" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceGroupClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_group_get_group_flags_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetHandleOwners" cname="tp_svc_channel_interface_group_implement_get_handle_owners" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceGroupClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_group_get_handle_owners_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetLocalPendingMembers" cname="tp_svc_channel_interface_group_implement_get_local_pending_members" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceGroupClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_group_get_local_pending_members_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetLocalPendingMembersWithInfo" cname="tp_svc_channel_interface_group_implement_get_local_pending_members_with_info" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceGroupClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_group_get_local_pending_members_with_info_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetMembers" cname="tp_svc_channel_interface_group_implement_get_members" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceGroupClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_group_get_members_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetRemotePendingMembers" cname="tp_svc_channel_interface_group_implement_get_remote_pending_members" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceGroupClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_group_get_remote_pending_members_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetSelfHandle" cname="tp_svc_channel_interface_group_implement_get_self_handle" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceGroupClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_group_get_self_handle_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRemoveMembers" cname="tp_svc_channel_interface_group_implement_remove_members" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceGroupClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_group_remove_members_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRemoveMembersWithReason" cname="tp_svc_channel_interface_group_implement_remove_members_with_reason" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceGroupClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_group_remove_members_with_reason_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcChannelInterfaceHold" cname="TpSvcChannelInterfaceHold">
      <method name="GetType" cname="tp_svc_channel_interface_hold_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementGetHoldState" cname="tp_svc_channel_interface_hold_implement_get_hold_state" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceHoldClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_hold_get_hold_state_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRequestHold" cname="tp_svc_channel_interface_hold_implement_request_hold" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceHoldClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_hold_request_hold_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcChannelInterfaceMediaSignalling" cname="TpSvcChannelInterfaceMediaSignalling">
      <method name="GetType" cname="tp_svc_channel_interface_media_signalling_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementGetSessionHandlers" cname="tp_svc_channel_interface_media_signalling_implement_get_session_handlers" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfaceMediaSignallingClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_media_signalling_get_session_handlers_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcChannelInterfacePassword" cname="TpSvcChannelInterfacePassword">
      <method name="GetType" cname="tp_svc_channel_interface_password_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementGetPasswordFlags" cname="tp_svc_channel_interface_password_implement_get_password_flags" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfacePasswordClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_password_get_password_flags_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementProvidePassword" cname="tp_svc_channel_interface_password_implement_provide_password" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelInterfacePasswordClass*" name="klass" />
          <parameter type="tp_svc_channel_interface_password_provide_password_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcChannelTypeContactList" cname="TpSvcChannelTypeContactList">
      <method name="GetType" cname="tp_svc_channel_type_contact_list_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </interface>
    <interface name="SvcChannelTypeRoomList" cname="TpSvcChannelTypeRoomList">
      <method name="EmitListingRooms" cname="tp_svc_channel_type_room_list_emit_listing_rooms" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="gboolean" name="arg_listing" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_svc_channel_type_room_list_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementGetListingRooms" cname="tp_svc_channel_type_room_list_implement_get_listing_rooms" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeRoomListClass*" name="klass" />
          <parameter type="tp_svc_channel_type_room_list_get_listing_rooms_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementListRooms" cname="tp_svc_channel_type_room_list_implement_list_rooms" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeRoomListClass*" name="klass" />
          <parameter type="tp_svc_channel_type_room_list_list_rooms_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementStopListing" cname="tp_svc_channel_type_room_list_implement_stop_listing" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeRoomListClass*" name="klass" />
          <parameter type="tp_svc_channel_type_room_list_stop_listing_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcChannelTypeStreamedMedia" cname="TpSvcChannelTypeStreamedMedia">
      <method name="EmitStreamDirectionChanged" cname="tp_svc_channel_type_streamed_media_emit_stream_direction_changed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_stream_id" />
          <parameter type="guint" name="arg_stream_direction" />
          <parameter type="guint" name="arg_pending_flags" />
        </parameters>
      </method>
      <method name="EmitStreamError" cname="tp_svc_channel_type_streamed_media_emit_stream_error" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_stream_id" />
          <parameter type="guint" name="arg_errno" />
          <parameter type="const-gchar*" name="arg_message" />
        </parameters>
      </method>
      <method name="EmitStreamRemoved" cname="tp_svc_channel_type_streamed_media_emit_stream_removed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_stream_id" />
        </parameters>
      </method>
      <method name="EmitStreamStateChanged" cname="tp_svc_channel_type_streamed_media_emit_stream_state_changed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_stream_id" />
          <parameter type="guint" name="arg_stream_state" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_svc_channel_type_streamed_media_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementListStreams" cname="tp_svc_channel_type_streamed_media_implement_list_streams" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeStreamedMediaClass*" name="klass" />
          <parameter type="tp_svc_channel_type_streamed_media_list_streams_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRemoveStreams" cname="tp_svc_channel_type_streamed_media_implement_remove_streams" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeStreamedMediaClass*" name="klass" />
          <parameter type="tp_svc_channel_type_streamed_media_remove_streams_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRequestStreamDirection" cname="tp_svc_channel_type_streamed_media_implement_request_stream_direction" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeStreamedMediaClass*" name="klass" />
          <parameter type="tp_svc_channel_type_streamed_media_request_stream_direction_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRequestStreams" cname="tp_svc_channel_type_streamed_media_implement_request_streams" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeStreamedMediaClass*" name="klass" />
          <parameter type="tp_svc_channel_type_streamed_media_request_streams_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcChannelTypeText" cname="TpSvcChannelTypeText">
      <method name="EmitReceived" cname="tp_svc_channel_type_text_emit_received" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_id" />
          <parameter type="guint" name="arg_timestamp" />
          <parameter type="guint" name="arg_sender" />
          <parameter type="guint" name="arg_type" />
          <parameter type="guint" name="arg_flags" />
          <parameter type="const-gchar*" name="arg_text" />
        </parameters>
      </method>
      <method name="EmitSendError" cname="tp_svc_channel_type_text_emit_send_error" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_error" />
          <parameter type="guint" name="arg_timestamp" />
          <parameter type="guint" name="arg_type" />
          <parameter type="const-gchar*" name="arg_text" />
        </parameters>
      </method>
      <method name="EmitSent" cname="tp_svc_channel_type_text_emit_sent" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_timestamp" />
          <parameter type="guint" name="arg_type" />
          <parameter type="const-gchar*" name="arg_text" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_svc_channel_type_text_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementAcknowledgePendingMessages" cname="tp_svc_channel_type_text_implement_acknowledge_pending_messages" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTextClass*" name="klass" />
          <parameter type="tp_svc_channel_type_text_acknowledge_pending_messages_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetMessageTypes" cname="tp_svc_channel_type_text_implement_get_message_types" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTextClass*" name="klass" />
          <parameter type="tp_svc_channel_type_text_get_message_types_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementListPendingMessages" cname="tp_svc_channel_type_text_implement_list_pending_messages" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTextClass*" name="klass" />
          <parameter type="tp_svc_channel_type_text_list_pending_messages_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementSend" cname="tp_svc_channel_type_text_implement_send" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTextClass*" name="klass" />
          <parameter type="tp_svc_channel_type_text_send_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcChannelTypeTubes" cname="TpSvcChannelTypeTubes">
      <method name="EmitDBusNamesChanged" cname="tp_svc_channel_type_tubes_emit_d_bus_names_changed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_id" />
          <parameter type="const-GPtrArray*" name="arg_added" />
          <parameter type="const-GArray*" name="arg_removed" />
        </parameters>
      </method>
      <method name="EmitStreamTubeNewConnection" cname="tp_svc_channel_type_tubes_emit_stream_tube_new_connection" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_id" />
          <parameter type="guint" name="arg_handle" />
        </parameters>
      </method>
      <method name="EmitTubeClosed" cname="tp_svc_channel_type_tubes_emit_tube_closed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_id" />
        </parameters>
      </method>
      <method name="EmitTubeStateChanged" cname="tp_svc_channel_type_tubes_emit_tube_state_changed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_id" />
          <parameter type="guint" name="arg_state" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_svc_channel_type_tubes_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementAcceptDBusTube" cname="tp_svc_channel_type_tubes_implement_accept_d_bus_tube" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTubesClass*" name="klass" />
          <parameter type="tp_svc_channel_type_tubes_accept_d_bus_tube_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementAcceptStreamTube" cname="tp_svc_channel_type_tubes_implement_accept_stream_tube" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTubesClass*" name="klass" />
          <parameter type="tp_svc_channel_type_tubes_accept_stream_tube_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementCloseTube" cname="tp_svc_channel_type_tubes_implement_close_tube" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTubesClass*" name="klass" />
          <parameter type="tp_svc_channel_type_tubes_close_tube_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetAvailableStreamTubeTypes" cname="tp_svc_channel_type_tubes_implement_get_available_stream_tube_types" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTubesClass*" name="klass" />
          <parameter type="tp_svc_channel_type_tubes_get_available_stream_tube_types_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetAvailableTubeTypes" cname="tp_svc_channel_type_tubes_implement_get_available_tube_types" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTubesClass*" name="klass" />
          <parameter type="tp_svc_channel_type_tubes_get_available_tube_types_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetDBusNames" cname="tp_svc_channel_type_tubes_implement_get_d_bus_names" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTubesClass*" name="klass" />
          <parameter type="tp_svc_channel_type_tubes_get_d_bus_names_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetDBusTubeAddress" cname="tp_svc_channel_type_tubes_implement_get_d_bus_tube_address" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTubesClass*" name="klass" />
          <parameter type="tp_svc_channel_type_tubes_get_d_bus_tube_address_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetStreamTubeSocketAddress" cname="tp_svc_channel_type_tubes_implement_get_stream_tube_socket_address" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTubesClass*" name="klass" />
          <parameter type="tp_svc_channel_type_tubes_get_stream_tube_socket_address_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementListTubes" cname="tp_svc_channel_type_tubes_implement_list_tubes" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTubesClass*" name="klass" />
          <parameter type="tp_svc_channel_type_tubes_list_tubes_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementOfferDBusTube" cname="tp_svc_channel_type_tubes_implement_offer_d_bus_tube" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTubesClass*" name="klass" />
          <parameter type="tp_svc_channel_type_tubes_offer_d_bus_tube_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementOfferStreamTube" cname="tp_svc_channel_type_tubes_implement_offer_stream_tube" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcChannelTypeTubesClass*" name="klass" />
          <parameter type="tp_svc_channel_type_tubes_offer_stream_tube_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcConnection" cname="TpSvcConnection">
      <method name="EmitStatusChanged" cname="tp_svc_connection_emit_status_changed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_status" />
          <parameter type="guint" name="arg_reason" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_svc_connection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementConnect" cname="tp_svc_connection_implement_connect" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_connect_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementDisconnect" cname="tp_svc_connection_implement_disconnect" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_disconnect_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetInterfaces" cname="tp_svc_connection_implement_get_interfaces" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_get_interfaces_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetProtocol" cname="tp_svc_connection_implement_get_protocol" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_get_protocol_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetSelfHandle" cname="tp_svc_connection_implement_get_self_handle" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_get_self_handle_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetStatus" cname="tp_svc_connection_implement_get_status" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_get_status_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementHoldHandles" cname="tp_svc_connection_implement_hold_handles" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_hold_handles_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementInspectHandles" cname="tp_svc_connection_implement_inspect_handles" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_inspect_handles_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementListChannels" cname="tp_svc_connection_implement_list_channels" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_list_channels_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementReleaseHandles" cname="tp_svc_connection_implement_release_handles" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_release_handles_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRequestChannel" cname="tp_svc_connection_implement_request_channel" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_request_channel_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRequestHandles" cname="tp_svc_connection_implement_request_handles" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionClass*" name="klass" />
          <parameter type="tp_svc_connection_request_handles_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcConnectionInterfaceAliasing" cname="TpSvcConnectionInterfaceAliasing">
      <method name="GetType" cname="tp_svc_connection_interface_aliasing_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementGetAliasFlags" cname="tp_svc_connection_interface_aliasing_implement_get_alias_flags" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceAliasingClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_aliasing_get_alias_flags_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRequestAliases" cname="tp_svc_connection_interface_aliasing_implement_request_aliases" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceAliasingClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_aliasing_request_aliases_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementSetAliases" cname="tp_svc_connection_interface_aliasing_implement_set_aliases" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceAliasingClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_aliasing_set_aliases_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcConnectionInterfaceAvatars" cname="TpSvcConnectionInterfaceAvatars">
      <method name="EmitAvatarRetrieved" cname="tp_svc_connection_interface_avatars_emit_avatar_retrieved" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="arg_contact" />
          <parameter type="const-gchar*" name="arg_token" />
          <parameter type="const-GArray*" name="arg_avatar" />
          <parameter type="const-gchar*" name="arg_type" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_svc_connection_interface_avatars_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementClearAvatar" cname="tp_svc_connection_interface_avatars_implement_clear_avatar" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceAvatarsClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_avatars_clear_avatar_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetAvatarRequirements" cname="tp_svc_connection_interface_avatars_implement_get_avatar_requirements" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceAvatarsClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_avatars_get_avatar_requirements_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetAvatarTokens" cname="tp_svc_connection_interface_avatars_implement_get_avatar_tokens" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceAvatarsClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_avatars_get_avatar_tokens_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetKnownAvatarTokens" cname="tp_svc_connection_interface_avatars_implement_get_known_avatar_tokens" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceAvatarsClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRequestAvatar" cname="tp_svc_connection_interface_avatars_implement_request_avatar" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceAvatarsClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_avatars_request_avatar_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRequestAvatars" cname="tp_svc_connection_interface_avatars_implement_request_avatars" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceAvatarsClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_avatars_request_avatars_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementSetAvatar" cname="tp_svc_connection_interface_avatars_implement_set_avatar" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceAvatarsClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_avatars_set_avatar_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcConnectionInterfaceCapabilities" cname="TpSvcConnectionInterfaceCapabilities">
      <method name="GetType" cname="tp_svc_connection_interface_capabilities_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementAdvertiseCapabilities" cname="tp_svc_connection_interface_capabilities_implement_advertise_capabilities" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceCapabilitiesClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_capabilities_advertise_capabilities_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetCapabilities" cname="tp_svc_connection_interface_capabilities_implement_get_capabilities" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceCapabilitiesClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_capabilities_get_capabilities_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcConnectionInterfacePresence" cname="TpSvcConnectionInterfacePresence">
      <method name="GetType" cname="tp_svc_connection_interface_presence_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementAddStatus" cname="tp_svc_connection_interface_presence_implement_add_status" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfacePresenceClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_presence_add_status_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementClearStatus" cname="tp_svc_connection_interface_presence_implement_clear_status" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfacePresenceClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_presence_clear_status_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetPresence" cname="tp_svc_connection_interface_presence_implement_get_presence" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfacePresenceClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_presence_get_presence_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetStatuses" cname="tp_svc_connection_interface_presence_implement_get_statuses" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfacePresenceClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_presence_get_statuses_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRemoveStatus" cname="tp_svc_connection_interface_presence_implement_remove_status" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfacePresenceClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_presence_remove_status_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRequestPresence" cname="tp_svc_connection_interface_presence_implement_request_presence" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfacePresenceClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_presence_request_presence_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementSetLastActivityTime" cname="tp_svc_connection_interface_presence_implement_set_last_activity_time" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfacePresenceClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_presence_set_last_activity_time_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementSetStatus" cname="tp_svc_connection_interface_presence_implement_set_status" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfacePresenceClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_presence_set_status_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcConnectionInterfaceSimplePresence" cname="TpSvcConnectionInterfaceSimplePresence">
      <method name="GetType" cname="tp_svc_connection_interface_simple_presence_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementGetPresences" cname="tp_svc_connection_interface_simple_presence_implement_get_presences" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceSimplePresenceClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_simple_presence_get_presences_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementSetPresence" cname="tp_svc_connection_interface_simple_presence_implement_set_presence" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionInterfaceSimplePresenceClass*" name="klass" />
          <parameter type="tp_svc_connection_interface_simple_presence_set_presence_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcConnectionManager" cname="TpSvcConnectionManager">
      <method name="GetType" cname="tp_svc_connection_manager_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementGetParameters" cname="tp_svc_connection_manager_implement_get_parameters" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionManagerClass*" name="klass" />
          <parameter type="tp_svc_connection_manager_get_parameters_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementListProtocols" cname="tp_svc_connection_manager_implement_list_protocols" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionManagerClass*" name="klass" />
          <parameter type="tp_svc_connection_manager_list_protocols_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementRequestConnection" cname="tp_svc_connection_manager_implement_request_connection" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnectionManagerClass*" name="klass" />
          <parameter type="tp_svc_connection_manager_request_connection_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcDBusIntrospectable" cname="TpSvcDBusIntrospectable">
      <method name="GetType" cname="tp_svc_dbus_introspectable_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementIntrospect" cname="tp_svc_dbus_introspectable_implement_introspect" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcDBusIntrospectableClass*" name="klass" />
          <parameter type="tp_svc_dbus_introspectable_introspect_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcDBusProperties" cname="TpSvcDBusProperties">
      <method name="GetType" cname="tp_svc_dbus_properties_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementGet" cname="tp_svc_dbus_properties_implement_get" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcDBusPropertiesClass*" name="klass" />
          <parameter type="tp_svc_dbus_properties_get_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementGetAll" cname="tp_svc_dbus_properties_implement_get_all" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcDBusPropertiesClass*" name="klass" />
          <parameter type="tp_svc_dbus_properties_get_all_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementSet" cname="tp_svc_dbus_properties_implement_set" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcDBusPropertiesClass*" name="klass" />
          <parameter type="tp_svc_dbus_properties_set_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcMediaSessionHandler" cname="TpSvcMediaSessionHandler">
      <method name="GetType" cname="tp_svc_media_session_handler_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementError" cname="tp_svc_media_session_handler_implement_error" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaSessionHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_session_handler_error_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementReady" cname="tp_svc_media_session_handler_implement_ready" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaSessionHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_session_handler_ready_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcMediaStreamHandler" cname="TpSvcMediaStreamHandler">
      <method name="EmitClose" cname="tp_svc_media_stream_handler_emit_close" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
        </parameters>
      </method>
      <method name="EmitRemoveRemoteCandidate" cname="tp_svc_media_stream_handler_emit_remove_remote_candidate" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="const-gchar*" name="arg_candidate_id" />
        </parameters>
      </method>
      <method name="EmitSetActiveCandidatePair" cname="tp_svc_media_stream_handler_emit_set_active_candidate_pair" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="const-gchar*" name="arg_native_candidate_id" />
          <parameter type="const-gchar*" name="arg_remote_candidate_id" />
        </parameters>
      </method>
      <method name="EmitSetRemoteCandidateList" cname="tp_svc_media_stream_handler_emit_set_remote_candidate_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="const-GPtrArray*" name="arg_remote_candidates" />
        </parameters>
      </method>
      <method name="EmitSetRemoteCodecs" cname="tp_svc_media_stream_handler_emit_set_remote_codecs" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="const-GPtrArray*" name="arg_codecs" />
        </parameters>
      </method>
      <method name="EmitSetStreamHeld" cname="tp_svc_media_stream_handler_emit_set_stream_held" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="gboolean" name="arg_Held" />
        </parameters>
      </method>
      <method name="EmitSetStreamPlaying" cname="tp_svc_media_stream_handler_emit_set_stream_playing" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="gboolean" name="arg_playing" />
        </parameters>
      </method>
      <method name="EmitSetStreamSending" cname="tp_svc_media_stream_handler_emit_set_stream_sending" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="gboolean" name="arg_sending" />
        </parameters>
      </method>
      <method name="EmitStartTelephonyEvent" cname="tp_svc_media_stream_handler_emit_start_telephony_event" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guchar" name="arg_event" />
        </parameters>
      </method>
      <method name="EmitStopTelephonyEvent" cname="tp_svc_media_stream_handler_emit_stop_telephony_event" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_svc_media_stream_handler_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementCodecChoice" cname="tp_svc_media_stream_handler_implement_codec_choice" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaStreamHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_stream_handler_codec_choice_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementError" cname="tp_svc_media_stream_handler_implement_error" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaStreamHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_stream_handler_error_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementHoldState" cname="tp_svc_media_stream_handler_implement_hold_state" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaStreamHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_stream_handler_hold_state_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementNativeCandidatesPrepared" cname="tp_svc_media_stream_handler_implement_native_candidates_prepared" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaStreamHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_stream_handler_native_candidates_prepared_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementNewActiveCandidatePair" cname="tp_svc_media_stream_handler_implement_new_active_candidate_pair" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaStreamHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_stream_handler_new_active_candidate_pair_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementNewNativeCandidate" cname="tp_svc_media_stream_handler_implement_new_native_candidate" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaStreamHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_stream_handler_new_native_candidate_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementReady" cname="tp_svc_media_stream_handler_implement_ready" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaStreamHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_stream_handler_ready_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementSetLocalCodecs" cname="tp_svc_media_stream_handler_implement_set_local_codecs" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaStreamHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_stream_handler_set_local_codecs_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementStreamState" cname="tp_svc_media_stream_handler_implement_stream_state" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaStreamHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_stream_handler_stream_state_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementSupportedCodecs" cname="tp_svc_media_stream_handler_implement_supported_codecs" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaStreamHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_stream_handler_supported_codecs_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementUnholdFailure" cname="tp_svc_media_stream_handler_implement_unhold_failure" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcMediaStreamHandlerClass*" name="klass" />
          <parameter type="tp_svc_media_stream_handler_unhold_failure_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <interface name="SvcPropertiesInterface" cname="TpSvcPropertiesInterface">
      <method name="EmitPropertyFlagsChanged" cname="tp_svc_properties_interface_emit_property_flags_changed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="const-GPtrArray*" name="arg_properties" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_svc_properties_interface_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ImplementGetProperties" cname="tp_svc_properties_interface_implement_get_properties" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcPropertiesInterfaceClass*" name="klass" />
          <parameter type="tp_svc_properties_interface_get_properties_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementListProperties" cname="tp_svc_properties_interface_implement_list_properties" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcPropertiesInterfaceClass*" name="klass" />
          <parameter type="tp_svc_properties_interface_list_properties_impl" name="impl" />
        </parameters>
      </method>
      <method name="ImplementSetProperties" cname="tp_svc_properties_interface_implement_set_properties" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcPropertiesInterfaceClass*" name="klass" />
          <parameter type="tp_svc_properties_interface_set_properties_impl" name="impl" />
        </parameters>
      </method>
    </interface>
    <object name="BaseConnection" cname="TpBaseConnection" parent="GObject">
      <field name="BusName" cname="bus_name" type="gchar*" />
      <field name="ObjectPath" cname="object_path" type="gchar*" />
      <field name="Status" cname="status" type="TpConnectionStatus" />
      <field name="SelfHandle" cname="self_handle" type="TpHandle" />
      <field name="Future1" cname="_future1" type="gpointer" />
      <field name="Future2" cname="_future2" type="gpointer" />
      <field name="Future3" cname="_future3" type="gpointer" />
      <field name="Future4" cname="_future4" type="gpointer" />
      <field name="Priv" cname="priv" type="TpBaseConnectionPrivate*" />
      <property name="" cname="" type="class" />
      <signal name="ShutdownFinished" cname="shutdown-finished" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="TpBaseConnection*" />
        </parameters>
      </signal>
      <method name="AddInterfaces" cname="tp_base_connection_add_interfaces">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar**" name="interfaces" />
        </parameters>
      </method>
      <method name="ChangeStatus" cname="tp_base_connection_change_status">
        <return-type type="void" />
        <parameters>
          <parameter type="TpConnectionStatus" name="status" />
          <parameter type="TpConnectionStatusReason" name="reason" />
        </parameters>
      </method>
      <method name="DbusRequestHandles" cname="tp_base_connection_dbus_request_handles" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpSvcConnection*" name="iface" />
          <parameter type="guint" name="handle_type" />
          <parameter type="const-gchar**" name="names" />
          <parameter type="DBusGMethodInvocation*" name="context" />
        </parameters>
      </method>
      <method name="FinishShutdown" cname="tp_base_connection_finish_shutdown">
        <return-type type="void" />
      </method>
      <method name="GetHandles" cname="tp_base_connection_get_handles">
        <return-type type="TpHandleRepoIface*" />
        <parameters>
          <parameter type="TpHandleType" name="handle_type" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_base_connection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Register" cname="tp_base_connection_register">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="cm_name" />
          <parameter type="gchar**" name="bus_name" />
          <parameter type="gchar**" name="object_path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </object>
    <object name="BaseConnectionManager" cname="TpBaseConnectionManager" parent="GObject">
      <field name="Priv" cname="priv" type="gpointer" />
      <signal name="NoMoreConnections" cname="no-more-connections" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="TpBaseConnectionManager*" />
        </parameters>
      </signal>
      <method name="GetType" cname="tp_base_connection_manager_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Register" cname="tp_base_connection_manager_register">
        <return-type type="gboolean" />
      </method>
    </object>
    <object name="Channel" cname="TpChannel" parent="TpProxy">
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <implements>
        <interface cname="TpChannelIface" />
      </implements>
      <method name="CallWhenReady" cname="tp_channel_call_when_ready">
        <return-type type="void" />
        <parameters>
          <parameter type="TpChannelWhenReadyCb" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_channel_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InitKnownInterfaces" cname="tp_channel_init_known_interfaces" shared="true">
        <return-type type="void" />
      </method>
      <constructor cname="tp_channel_new">
        <parameters>
          <parameter type="TpConnection*" name="conn" />
          <parameter type="const-gchar*" name="object_path" />
          <parameter type="const-gchar*" name="optional_channel_type" />
          <parameter type="TpHandleType" name="optional_handle_type" />
          <parameter type="TpHandle" name="optional_handle" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <method name="RunUntilReady" cname="tp_channel_run_until_ready">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
    </object>
    <object name="Connection" cname="TpConnection" parent="TpProxy">
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <method name="CallWhenReady" cname="tp_connection_call_when_ready">
        <return-type type="void" />
        <parameters>
          <parameter type="TpConnectionWhenReadyCb" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_connection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InitKnownInterfaces" cname="tp_connection_init_known_interfaces" shared="true">
        <return-type type="void" />
      </method>
      <constructor cname="tp_connection_new">
        <parameters>
          <parameter type="TpDBusDaemon*" name="dbus" />
          <parameter type="const-gchar*" name="bus_name" />
          <parameter type="const-gchar*" name="object_path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <method name="RunUntilReady" cname="tp_connection_run_until_ready">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="connect" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
    </object>
    <object name="ConnectionManager" cname="TpConnectionManager" parent="TpProxy">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="Protocols" cname="protocols" type="const-TpConnectionManagerProtocol*" />
      <field name="Running" cname="running" bits="1" type="gboolean" />
      <field name="AlwaysIntrospect" cname="always_introspect" bits="1" type="gboolean" />
      <field name="InfoSource" cname="info_source" bits="2" type="TpCMInfoSource" />
      <field name="ReservedFlags" cname="reserved_flags" bits="28" type="guint" />
      <field name="Priv" cname="priv" type="TpConnectionManagerPrivate*" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <signal name="Activated" cname="activated" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="TpConnectionManager*" />
        </parameters>
      </signal>
      <signal name="Exited" cname="exited" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="TpConnectionManager*" />
        </parameters>
      </signal>
      <signal name="GotInfo" cname="got-info" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="TpConnectionManager*" />
          <parameter name="p0" type="guint32" />
        </parameters>
      </signal>
      <method name="Activate" cname="tp_connection_manager_activate">
        <return-type type="gboolean" />
      </method>
      <method name="CheckValidName" cname="tp_connection_manager_check_valid_name" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="CheckValidProtocolName" cname="tp_connection_manager_check_valid_protocol_name" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_connection_manager_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="tp_connection_manager_new">
        <parameters>
          <parameter type="TpDBusDaemon*" name="dbus" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="manager_filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
    </object>
    <object name="DBusDaemon" cname="TpDBusDaemon" parent="TpProxy">
      <method name="CancelNameOwnerWatch" cname="tp_dbus_daemon_cancel_name_owner_watch">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="TpDBusDaemonNameOwnerChangedCb" name="callback" />
          <parameter type="gconstpointer" name="user_data" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_dbus_daemon_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="tp_dbus_daemon_new">
        <parameters>
          <parameter type="DBusGConnection*" name="connection" />
        </parameters>
      </constructor>
      <method name="WatchNameOwner" cname="tp_dbus_daemon_watch_name_owner">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="TpDBusDaemonNameOwnerChangedCb" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
    </object>
    <object name="DynamicHandleRepo" cname="TpDynamicHandleRepo" parent="GObject">
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <implements>
        <interface cname="TpHandleRepoIface" />
      </implements>
      <method name="GetType" cname="tp_dynamic_handle_repo_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="LookupExact" cname="tp_dynamic_handle_repo_lookup_exact" shared="true">
        <return-type type="TpHandle" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="irepo" />
          <parameter type="const-char*" name="id" />
        </parameters>
      </method>
    </object>
    <object name="MediaSessionHandler" cname="TpMediaSessionHandler" parent="TpProxy">
      <method name="GetType" cname="tp_media_session_handler_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="tp_media_session_handler_new">
        <parameters>
          <parameter type="TpDBusDaemon*" name="dbus" />
          <parameter type="const-gchar*" name="unique_name" />
          <parameter type="const-gchar*" name="object_path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
    </object>
    <object name="MediaStreamHandler" cname="TpMediaStreamHandler" parent="TpProxy">
      <method name="GetType" cname="tp_media_stream_handler_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="tp_media_stream_handler_new">
        <parameters>
          <parameter type="TpDBusDaemon*" name="dbus" />
          <parameter type="const-gchar*" name="unique_name" />
          <parameter type="const-gchar*" name="object_path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
    </object>
    <object name="Proxy" cname="TpProxy" parent="GObject">
      <field name="DbusDaemon" cname="dbus_daemon" type="TpDBusDaemon*" />
      <field name="DbusConnection" cname="dbus_connection" type="DBusGConnection*" />
      <field name="BusName" cname="bus_name" type="gchar*" />
      <field name="ObjectPath" cname="object_path" type="gchar*" />
      <field name="Invalidated" cname="invalidated " type="GError*" />
      <field name="Priv" cname="priv" type="TpProxyPrivate*" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <property name="" cname="" type="class" />
      <signal name="InterfaceAdded" cname="interface-added" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="TpProxy*" />
          <parameter name="p0" type="guint32" />
          <parameter name="p1" type="DbusGProxy" />
        </parameters>
      </signal>
      <signal name="Invalidated" cname="invalidated" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="TpProxy*" />
          <parameter name="p0" type="guint32" />
          <parameter name="p1" type="gint32" />
          <parameter name="p2" type="gchar*" />
        </parameters>
      </signal>
      <method name="AddInterfaceById" cname="tp_proxy_add_interface_by_id">
        <return-type type="DBusGProxy*" />
        <parameters>
          <parameter type="GQuark" name="interface" />
        </parameters>
      </method>
      <method name="BorrowInterfaceById" cname="tp_proxy_borrow_interface_by_id">
        <return-type type="DBusGProxy*" />
        <parameters>
          <parameter type="GQuark" name="interface" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DbusGProxyClaimForSignalAdding" cname="tp_proxy_dbus_g_proxy_claim_for_signal_adding" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="DBusGProxy*" name="proxy" />
        </parameters>
      </method>
      <method name="GetType" cname="tp_proxy_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HasInterfaceById" cname="tp_proxy_has_interface_by_id" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gpointer" name="self" />
          <parameter type="GQuark" name="interface" />
        </parameters>
      </method>
      <method name="InitKnownInterfaces" cname="tp_proxy_init_known_interfaces" shared="true">
        <return-type type="void" />
      </method>
      <method name="Invalidate" cname="tp_proxy_invalidate">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GError*" name="error" />
        </parameters>
      </method>
      <method name="OrSubclassHookOnInterfaceAdd" cname="tp_proxy_or_subclass_hook_on_interface_add" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GType" name="proxy_or_subclass" />
          <parameter type="TpProxyInterfaceAddedCb" name="callback" />
        </parameters>
      </method>
      <method name="SubclassAddErrorMapping" cname="tp_proxy_subclass_add_error_mapping" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GType" name="proxy_subclass" />
          <parameter type="const-gchar*" name="static_prefix" />
          <parameter type="GQuark" name="domain" />
          <parameter type="GType" name="code_enum_type" />
        </parameters>
      </method>
    </object>
    <object name="StaticHandleRepo" cname="TpStaticHandleRepo" parent="GObject">
      <property name="" cname="" type="class" />
      <implements>
        <interface cname="TpHandleRepoIface" />
      </implements>
      <method name="GetType" cname="tp_static_handle_repo_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <struct name="CMParamSpec" cname="TpCMParamSpec">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="Dtype" cname="dtype" type="const-gchar*" />
      <field name="Gtype" cname="gtype" type="GType" />
      <field name="Flags" cname="flags" type="guint" />
      <field name="Def" cname="def" type="gconstpointer" />
      <field name="Offset" cname="offset" type="gsize" />
      <field name="Filter" cname="filter" type="TpCMParamFilter" />
      <field name="FilterData" cname="filter_data" type="gconstpointer" />
      <field name="SetterData" cname="setter_data" type="gconstpointer" />
      <field name="Future1" cname="_future1" type="gpointer" />
    </struct>
    <struct name="CMProtocolSpec" cname="TpCMProtocolSpec">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="Parameters" cname="parameters" type="const-TpCMParamSpec*" />
      <callback cname="params_new">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="void" name="arg1" />
        </parameters>
      </callback>
      <callback cname="params_free">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="arg1" />
        </parameters>
      </callback>
      <field name="SetParam" cname="set_param" type="TpCMParamSetter" />
      <field name="Future1" cname="_future1" type="gpointer" />
      <field name="Future2" cname="_future2" type="gpointer" />
      <field name="Future3" cname="_future3" type="gpointer" />
    </struct>
    <struct name="ConnectionManagerParam" cname="TpConnectionManagerParam">
      <field name="Name" cname="name" type="gchar*" />
      <field name="DbusSignature" cname="dbus_signature" type="gchar*" />
      <field name="DefaultValue" cname="default_value" type="GValue" />
      <field name="Flags" cname="flags" type="guint" />
      <field name="Priv" cname="priv" type="gpointer" />
    </struct>
    <struct name="ConnectionManagerProtocol" cname="TpConnectionManagerProtocol">
      <field name="Name" cname="name" type="gchar*" />
      <field name="Params" cname="params" type="TpConnectionManagerParam*" />
      <field name="Priv" cname="priv" type="gpointer" />
    </struct>
    <struct name="DBusPropertiesMixinClass" cname="TpDBusPropertiesMixinClass" opaque="true">
      <method name="Init" cname="tp_dbus_properties_mixin_class_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObjectClass*" name="cls" />
          <parameter type="gsize" name="offset" />
        </parameters>
      </method>
    </struct>
    <struct name="DBusPropertiesMixinIfaceInfo" cname="TpDBusPropertiesMixinIfaceInfo">
      <field name="DbusInterface" cname="dbus_interface" type="GQuark" />
      <field name="Props" cname="props" type="TpDBusPropertiesMixinPropInfo*" />
      <field name="1" cname="_1" type="GCallback" />
      <field name="Two" cname="_2" type="GCallback" />
    </struct>
    <struct name="DBusPropertiesMixinPropImpl" cname="TpDBusPropertiesMixinPropImpl">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="GetterData" cname="getter_data" type="gpointer" />
      <field name="SetterData" cname="setter_data" type="gpointer" />
      <field name="1" cname="_1" type="GCallback" />
      <field name="Two" cname="_2" type="GCallback" />
      <field name="MixinPriv" cname="mixin_priv" type="gpointer" />
    </struct>
    <struct name="DBusPropertiesMixinPropInfo" cname="TpDBusPropertiesMixinPropInfo">
      <field name="Name" cname="name" type="GQuark" />
      <field name="Flags" cname="flags" type="TpDBusPropertiesMixinFlags" />
      <field name="DbusSignature" cname="dbus_signature" type="gchar*" />
      <field name="Type" cname="type" type="GType" />
      <field name="1" cname="_1" type="GCallback" />
      <field name="Two" cname="_2" type="GCallback" />
    </struct>
    <struct name="DynamicHandleRepoClass" cname="TpDynamicHandleRepoClass" opaque="true" />
    <struct name="GroupMixin" cname="TpGroupMixin">
      <field name="HandleRepo" cname="handle_repo" type="TpHandleRepoIface*" />
      <field name="SelfHandle" cname="self_handle" type="TpHandle" />
      <field name="GroupFlags" cname="group_flags" type="TpChannelGroupFlags" />
      <field name="Members" cname="members" type="TpHandleSet*" />
      <field name="LocalPending" cname="local_pending" type="TpHandleSet*" />
      <field name="RemotePending" cname="remote_pending" type="TpHandleSet*" />
      <field name="Priv" cname="priv" type="TpGroupMixinPrivate*" />
      <method name="AddHandleOwner" cname="tp_group_mixin_add_handle_owner" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="TpHandle" name="local_handle" />
          <parameter type="TpHandle" name="owner_handle" />
        </parameters>
      </method>
      <method name="AddHandleOwners" cname="tp_group_mixin_add_handle_owners" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="GHashTable*" name="local_to_owner_handle" />
        </parameters>
      </method>
      <method name="AddMembers" cname="tp_group_mixin_add_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="const-GArray*" name="contacts" />
          <parameter type="const-gchar*" name="message" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChangeFlags" cname="tp_group_mixin_change_flags" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="TpChannelGroupFlags" name="add" />
          <parameter type="TpChannelGroupFlags" name="del" />
        </parameters>
      </method>
      <method name="ChangeMembers" cname="tp_group_mixin_change_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="const-gchar*" name="message" />
          <parameter type="TpIntSet*" name="add" />
          <parameter type="TpIntSet*" name="del" />
          <parameter type="TpIntSet*" name="add_local_pending" />
          <parameter type="TpIntSet*" name="add_remote_pending" />
          <parameter type="TpHandle" name="actor" />
          <parameter type="TpChannelGroupChangeReason" name="reason" />
        </parameters>
      </method>
      <method name="ChangeSelfHandle" cname="tp_group_mixin_change_self_handle" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="TpHandle" name="new_self_handle" />
        </parameters>
      </method>
      <method name="Finalize" cname="tp_group_mixin_finalize" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
        </parameters>
      </method>
      <method name="GetAllMembers" cname="tp_group_mixin_get_all_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="GArray**" name="members" />
          <parameter type="GArray**" name="local_pending" />
          <parameter type="GArray**" name="remote_pending" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetDbusProperty" cname="tp_group_mixin_get_dbus_property" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="object" />
          <parameter type="GQuark" name="interface" />
          <parameter type="GQuark" name="name" />
          <parameter type="GValue*" name="value" />
          <parameter type="gpointer" name="unused" />
        </parameters>
      </method>
      <method name="GetGroupFlags" cname="tp_group_mixin_get_group_flags" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="guint*" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetHandleOwners" cname="tp_group_mixin_get_handle_owners" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="const-GArray*" name="handles" />
          <parameter type="GArray**" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetLocalPendingMembers" cname="tp_group_mixin_get_local_pending_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="GArray**" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetLocalPendingMembersWithInfo" cname="tp_group_mixin_get_local_pending_members_with_info" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="GPtrArray**" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetMembers" cname="tp_group_mixin_get_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="GArray**" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetOffsetQuark" cname="tp_group_mixin_get_offset_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GetRemotePendingMembers" cname="tp_group_mixin_get_remote_pending_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="GArray**" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetSelfHandle" cname="tp_group_mixin_get_self_handle" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="guint*" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="IfaceInit" cname="tp_group_mixin_iface_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="g_iface" />
          <parameter type="gpointer" name="iface_data" />
        </parameters>
      </method>
      <method name="Init" cname="tp_group_mixin_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="glong" name="offset" />
          <parameter type="TpHandleRepoIface*" name="handle_repo" />
          <parameter type="TpHandle" name="self_handle" />
        </parameters>
      </method>
      <method name="InitDbusProperties" cname="tp_group_mixin_init_dbus_properties" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObjectClass*" name="cls" />
        </parameters>
      </method>
      <method name="RemoveMembers" cname="tp_group_mixin_remove_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="const-GArray*" name="contacts" />
          <parameter type="const-gchar*" name="message" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="RemoveMembersWithReason" cname="tp_group_mixin_remove_members_with_reason" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="const-GArray*" name="contacts" />
          <parameter type="const-gchar*" name="message" />
          <parameter type="guint" name="reason" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </struct>
    <struct name="GroupMixinClass" cname="TpGroupMixinClass">
      <field name="AddMember" cname="add_member" type="TpGroupMixinAddMemberFunc" />
      <field name="RemoveMember" cname="remove_member" type="TpGroupMixinRemMemberFunc" />
      <field name="Priv" cname="priv" type="TpGroupMixinClassPrivate*" />
      <method name="GetOffsetQuark" cname="tp_group_mixin_class_get_offset_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="Init" cname="tp_group_mixin_class_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObjectClass*" name="obj_cls" />
          <parameter type="glong" name="offset" />
          <parameter type="TpGroupMixinAddMemberFunc" name="add_func" />
          <parameter type="TpGroupMixinRemMemberFunc" name="rem_func" />
        </parameters>
      </method>
      <method name="SetRemoveWithReasonFunc" cname="tp_group_mixin_class_set_remove_with_reason_func" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObjectClass*" name="cls" />
          <parameter type="TpGroupMixinRemMemberWithReasonFunc" name="func" />
        </parameters>
      </method>
    </struct>
    <alias name="Handle" cname="TpHandle" type="guint" />
    <struct name="HandleSet" cname="TpHandleSet" opaque="true">
      <method name="Add" cname="tp_handle_set_add">
        <return-type type="void" />
        <parameters>
          <parameter type="TpHandle" name="handle" />
        </parameters>
      </method>
      <method name="Destroy" cname="tp_handle_set_destroy">
        <return-type type="void" />
      </method>
      <method name="DifferenceUpdate" cname="tp_handle_set_difference_update">
        <return-type type="TpIntSet*" />
        <parameters>
          <parameter type="const-TpIntSet*" name="remove" />
        </parameters>
      </method>
      <method name="Foreach" cname="tp_handle_set_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="TpHandleSetMemberFunc" name="func" />
          <parameter type="gpointer" name="userdata" />
        </parameters>
      </method>
      <method name="IsMember" cname="tp_handle_set_is_member">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpHandle" name="handle" />
        </parameters>
      </method>
      <constructor cname="tp_handle_set_new">
        <parameters>
          <parameter type="TpHandleRepoIface*" name="repo" />
        </parameters>
      </constructor>
      <method name="Peek" cname="tp_handle_set_peek">
        <return-type type="TpIntSet*" />
      </method>
      <method name="Qdata" cname="tp_handle_set_qdata" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="repo" />
          <parameter type="TpHandle" name="handle" />
          <parameter type="GQuark" name="key_id" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="Remove" cname="tp_handle_set_remove">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpHandle" name="handle" />
        </parameters>
      </method>
      <method name="Size" cname="tp_handle_set_size">
        <return-type type="int" />
      </method>
      <method name="ToArray" cname="tp_handle_set_to_array">
        <return-type type="GArray*" />
      </method>
      <method name="Update" cname="tp_handle_set_update">
        <return-type type="TpIntSet*" />
        <parameters>
          <parameter type="const-TpIntSet*" name="add" />
        </parameters>
      </method>
    </struct>
    <struct name="Heap" cname="TpHeap" opaque="true">
      <method name="Add" cname="tp_heap_add">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="element" />
        </parameters>
      </method>
      <method name="Clear" cname="tp_heap_clear">
        <return-type type="void" />
      </method>
      <method name="Destroy" cname="tp_heap_destroy">
        <return-type type="void" />
      </method>
      <method name="ExtractFirst" cname="tp_heap_extract_first">
        <return-type type="gpointer" />
      </method>
      <constructor cname="tp_heap_new">
        <parameters>
          <parameter type="GCompareFunc" name="comparator" />
          <parameter type="GDestroyNotify" name="destructor" />
        </parameters>
      </constructor>
      <method name="PeekFirst" cname="tp_heap_peek_first">
        <return-type type="gpointer" />
      </method>
      <method name="Remove" cname="tp_heap_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="element" />
        </parameters>
      </method>
      <method name="Size" cname="tp_heap_size">
        <return-type type="guint" />
      </method>
    </struct>
    <struct name="IntSet" cname="TpIntSet" opaque="true">
      <method name="Add" cname="tp_intset_add">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="element" />
        </parameters>
      </method>
      <method name="Clear" cname="tp_intset_clear">
        <return-type type="void" />
      </method>
      <method name="Copy" cname="tp_intset_copy">
        <return-type type="TpIntSet*" owned="true" />
      </method>
      <method name="Destroy" cname="tp_intset_destroy">
        <return-type type="void" />
      </method>
      <method name="Difference" cname="tp_intset_difference">
        <return-type type="TpIntSet*" />
        <parameters>
          <parameter type="const-TpIntSet*" name="right" />
        </parameters>
      </method>
      <method name="Dump" cname="tp_intset_dump">
        <return-type type="gchar*" />
      </method>
      <method name="Foreach" cname="tp_intset_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="TpIntFunc" name="func" />
          <parameter type="gpointer" name="userdata" />
        </parameters>
      </method>
      <method name="FromArray" cname="tp_intset_from_array" shared="true">
        <return-type type="TpIntSet*" />
        <parameters>
          <parameter type="const-GArray*" name="array" />
        </parameters>
      </method>
      <method name="Intersection" cname="tp_intset_intersection">
        <return-type type="TpIntSet*" />
        <parameters>
          <parameter type="const-TpIntSet*" name="right" />
        </parameters>
      </method>
      <method name="IsEqual" cname="tp_intset_is_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-TpIntSet*" name="right" />
        </parameters>
      </method>
      <method name="IsMember" cname="tp_intset_is_member">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="element" />
        </parameters>
      </method>
      <constructor cname="tp_intset_new" />
      <method name="Remove" cname="tp_intset_remove">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="element" />
        </parameters>
      </method>
      <method name="Size" cname="tp_intset_size">
        <return-type type="guint" />
      </method>
      <method name="SizedNew" cname="tp_intset_sized_new" shared="true">
        <return-type type="TpIntSet*" />
        <parameters>
          <parameter type="guint" name="size" />
        </parameters>
      </method>
      <method name="SymmetricDifference" cname="tp_intset_symmetric_difference">
        <return-type type="TpIntSet*" />
        <parameters>
          <parameter type="const-TpIntSet*" name="right" />
        </parameters>
      </method>
      <method name="ToArray" cname="tp_intset_to_array">
        <return-type type="GArray*" />
      </method>
      <method name="Union" cname="tp_intset_union">
        <return-type type="TpIntSet*" />
        <parameters>
          <parameter type="const-TpIntSet*" name="right" />
        </parameters>
      </method>
    </struct>
    <struct name="IntSetIter" cname="TpIntSetIter">
      <field name="Set" cname="set" type="const-TpIntSet*" />
      <field name="Element" cname="element" type="guint" />
    </struct>
    <struct name="PresenceMixin" cname="TpPresenceMixin">
      <field name="Priv" cname="priv" type="TpPresenceMixinPrivate*" />
      <method name="EmitOnePresenceUpdate" cname="tp_presence_mixin_emit_one_presence_update" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="TpHandle" name="handle" />
          <parameter type="const-TpPresenceStatus*" name="status" />
        </parameters>
      </method>
      <method name="EmitPresenceUpdate" cname="tp_presence_mixin_emit_presence_update" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="GHashTable*" name="contact_presences" />
        </parameters>
      </method>
      <method name="Finalize" cname="tp_presence_mixin_finalize" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
        </parameters>
      </method>
      <method name="GetOffsetQuark" cname="tp_presence_mixin_get_offset_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="IfaceInit" cname="tp_presence_mixin_iface_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="g_iface" />
          <parameter type="gpointer" name="iface_data" />
        </parameters>
      </method>
      <method name="Init" cname="tp_presence_mixin_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="glong" name="offset" />
        </parameters>
      </method>
    </struct>
    <struct name="PresenceMixinClass" cname="TpPresenceMixinClass">
      <field name="StatusAvailable" cname="status_available" type="TpPresenceMixinStatusAvailableFunc" />
      <field name="GetContactStatuses" cname="get_contact_statuses" type="TpPresenceMixinGetContactStatusesFunc" />
      <field name="SetOwnStatus" cname="set_own_status" type="TpPresenceMixinSetOwnStatusFunc" />
      <field name="Statuses" cname="statuses" type="const-TpPresenceStatusSpec*" />
      <field name="Priv" cname="priv" type="TpPresenceMixinClassPrivate*" />
      <field name="Future1" cname="_future1" type="gpointer" />
      <field name="Future2" cname="_future2" type="gpointer" />
      <field name="Future3" cname="_future3" type="gpointer" />
      <field name="Future4" cname="_future4" type="gpointer" />
      <method name="GetOffsetQuark" cname="tp_presence_mixin_class_get_offset_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="Init" cname="tp_presence_mixin_class_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObjectClass*" name="obj_cls" />
          <parameter type="glong" name="offset" />
          <parameter type="TpPresenceMixinStatusAvailableFunc" name="status_available" />
          <parameter type="TpPresenceMixinGetContactStatusesFunc" name="get_contact_statuses" />
          <parameter type="TpPresenceMixinSetOwnStatusFunc" name="set_own_status" />
          <parameter type="const-TpPresenceStatusSpec*" name="statuses" />
        </parameters>
      </method>
    </struct>
    <struct name="PresenceStatus" cname="TpPresenceStatus" opaque="true">
      <field name="Index" cname="index" type="guint" access="public" writeable="true" />
      <field name="OptionalArguments" cname="optional_arguments" type="GHashTable*" access="public" writeable="true" />
      <field name="Future1" cname="_future1" type="gpointer" access="public" writeable="true" />
      <field name="Future2" cname="_future2" type="gpointer" access="public" writeable="true" />
      <method name="Free" cname="tp_presence_status_free">
        <return-type type="void" />
      </method>
      <constructor cname="tp_presence_status_new">
        <parameters>
          <parameter type="guint" name="which" />
          <parameter type="GHashTable*" name="optional_arguments" />
        </parameters>
      </constructor>
    </struct>
    <struct name="PresenceStatusOptionalArgumentSpec" cname="TpPresenceStatusOptionalArgumentSpec">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="Dtype" cname="dtype" type="const-gchar*" />
      <field name="Future1" cname="_future1" type="gpointer" />
      <field name="Future2" cname="_future2" type="gpointer" />
    </struct>
    <struct name="PresenceStatusSpec" cname="TpPresenceStatusSpec">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="PresenceType" cname="presence_type" type="TpConnectionPresenceType" />
      <field name="Self" cname="self" type="gboolean" />
      <field name="OptionalArguments" cname="optional_arguments" type="const-TpPresenceStatusOptionalArgumentSpec*" />
      <field name="Future1" cname="_future1" type="gpointer" />
      <field name="Future2" cname="_future2" type="gpointer" />
    </struct>
    <struct name="PropertiesContext" cname="TpPropertiesContext" opaque="true">
      <method name="Get" cname="tp_properties_context_get">
        <return-type type="const-GValue*" />
        <parameters>
          <parameter type="guint" name="property" />
        </parameters>
      </method>
      <method name="GetValueCount" cname="tp_properties_context_get_value_count">
        <return-type type="guint" />
      </method>
      <method name="Has" cname="tp_properties_context_has">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="property" />
        </parameters>
      </method>
      <method name="HasOtherThan" cname="tp_properties_context_has_other_than">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="property" />
        </parameters>
      </method>
      <method name="Remove" cname="tp_properties_context_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="property" />
        </parameters>
      </method>
      <method name="Return" cname="tp_properties_context_return">
        <return-type type="void" />
        <parameters>
          <parameter type="GError*" name="error" />
        </parameters>
      </method>
      <method name="ReturnIfDone" cname="tp_properties_context_return_if_done">
        <return-type type="gboolean" />
      </method>
    </struct>
    <struct name="PropertiesMixin" cname="TpPropertiesMixin">
      <field name="Properties" cname="properties" type="TpProperty*" />
      <field name="Priv" cname="priv" type="TpPropertiesMixinPrivate*" />
      <method name="ChangeFlags" cname="tp_properties_mixin_change_flags" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="guint" name="prop_id" />
          <parameter type="TpPropertyFlags" name="add" />
          <parameter type="TpPropertyFlags" name="del" />
          <parameter type="TpIntSet*" name="props" />
        </parameters>
      </method>
      <method name="ChangeValue" cname="tp_properties_mixin_change_value" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="guint" name="prop_id" />
          <parameter type="const-GValue*" name="new_value" />
          <parameter type="TpIntSet*" name="props" />
        </parameters>
      </method>
      <method name="EmitChanged" cname="tp_properties_mixin_emit_changed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="const-TpIntSet*" name="props" />
        </parameters>
      </method>
      <method name="EmitFlags" cname="tp_properties_mixin_emit_flags" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="const-TpIntSet*" name="props" />
        </parameters>
      </method>
      <method name="Finalize" cname="tp_properties_mixin_finalize" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
        </parameters>
      </method>
      <method name="GetOffsetQuark" cname="tp_properties_mixin_get_offset_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GetProperties" cname="tp_properties_mixin_get_properties" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="const-GArray*" name="properties" />
          <parameter type="GPtrArray**" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="HasProperty" cname="tp_properties_mixin_has_property" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="guint*" name="property" />
        </parameters>
      </method>
      <method name="IfaceInit" cname="tp_properties_mixin_iface_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="g_iface" />
          <parameter type="gpointer" name="iface_data" />
        </parameters>
      </method>
      <method name="Init" cname="tp_properties_mixin_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="glong" name="offset" />
        </parameters>
      </method>
      <method name="IsReadable" cname="tp_properties_mixin_is_readable" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="guint" name="prop_id" />
        </parameters>
      </method>
      <method name="IsWritable" cname="tp_properties_mixin_is_writable" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="guint" name="prop_id" />
        </parameters>
      </method>
      <method name="ListProperties" cname="tp_properties_mixin_list_properties" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="GPtrArray**" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetProperties" cname="tp_properties_mixin_set_properties" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="const-GPtrArray*" name="properties" />
          <parameter type="DBusGMethodInvocation*" name="context" />
        </parameters>
      </method>
    </struct>
    <struct name="PropertiesMixinClass" cname="TpPropertiesMixinClass">
      <field name="Signatures" cname="signatures" type="const-TpPropertySignature*" />
      <field name="NumProps" cname="num_props" type="guint" />
      <field name="SetProperties" cname="set_properties" type="TpPropertiesSetFunc" />
      <field name="Priv" cname="priv" type="TpPropertiesMixinClassPrivate*" />
      <method name="GetOffsetQuark" cname="tp_properties_mixin_class_get_offset_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="Init" cname="tp_properties_mixin_class_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObjectClass*" name="obj_cls" />
          <parameter type="glong" name="offset" />
          <parameter type="const-TpPropertySignature*" name="signatures" />
          <parameter type="guint" name="num_properties" />
          <parameter type="TpPropertiesSetFunc" name="set_func" />
        </parameters>
      </method>
    </struct>
    <struct name="Property" cname="TpProperty">
      <field name="Value" cname="value" type="GValue*" />
      <field name="Flags" cname="flags" type="guint" />
    </struct>
    <struct name="PropertySignature" cname="TpPropertySignature">
      <field name="Name" cname="name" type="gchar*" />
      <field name="Type" cname="type" type="GType" />
    </struct>
    <struct name="ProxyPendingCall" cname="TpProxyPendingCall" opaque="true">
      <method name="Cancel" cname="tp_proxy_pending_call_cancel">
        <return-type type="void" />
      </method>
      <method name="V0Completed" cname="tp_proxy_pending_call_v0_completed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="p" />
        </parameters>
      </method>
      <method name="V0New" cname="tp_proxy_pending_call_v0_new" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpProxy*" name="self" />
          <parameter type="GQuark" name="interface" />
          <parameter type="const-gchar*" name="member" />
          <parameter type="DBusGProxy*" name="iface_proxy" />
          <parameter type="TpProxyInvokeFunc" name="invoke_callback" />
          <parameter type="GCallback" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="gboolean" name="cancel_must_raise" />
        </parameters>
      </method>
      <method name="V0TakePendingCall" cname="tp_proxy_pending_call_v0_take_pending_call">
        <return-type type="void" />
        <parameters>
          <parameter type="DBusGProxyCall*" name="pending_call" />
        </parameters>
      </method>
      <method name="V0TakeResults" cname="tp_proxy_pending_call_v0_take_results">
        <return-type type="void" />
        <parameters>
          <parameter type="GError*" name="error" />
          <parameter type="GValueArray*" name="args" />
        </parameters>
      </method>
    </struct>
    <struct name="ProxySignalConnection" cname="TpProxySignalConnection" opaque="true">
      <method name="Disconnect" cname="tp_proxy_signal_connection_disconnect">
        <return-type type="void" />
      </method>
      <method name="V0New" cname="tp_proxy_signal_connection_v0_new" shared="true">
        <return-type type="return" />
        <parameters>
          <parameter type="(TpProxy*" name=")" />
          <parameter type="TP_IFACE_QUARK_MEDIA_STREAM_HANDLER" name="arg2" />
          <parameter type="&quot;SetStreamHeld&quot;" name="arg3" />
          <parameter type="expected_types" name="arg4" />
          <parameter type="G_CALLBACK" name="(_tp_cli_media_stream_handler_collect_args_of_set_stream_held)" />
          <parameter type="_tp_cli_media_stream_handler_invoke_callback_for_set_stream_held" name="arg6" />
          <parameter type="G_CALLBACK" name="(callback)" />
          <parameter type="user_data" name="arg8" />
          <parameter type="destroy" name="arg9" />
          <parameter type="weak_object" name="arg10" />
          <parameter type="error" name="arg11" />
        </parameters>
      </method>
      <method name="V0TakeResults" cname="tp_proxy_signal_connection_v0_take_results">
        <return-type type="void" />
        <parameters>
          <parameter type="GValueArray*" name="args" />
        </parameters>
      </method>
    </struct>
    <struct name="StaticHandleRepoClass" cname="TpStaticHandleRepoClass" opaque="true" />
    <struct name="TextMixin" cname="TpTextMixin">
      <field name="Priv" cname="priv" type="TpTextMixinPrivate*" />
      <method name="AcknowledgePendingMessages" cname="tp_text_mixin_acknowledge_pending_messages" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="const-GArray*" name="ids" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="Clear" cname="tp_text_mixin_clear" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
        </parameters>
      </method>
      <method name="Finalize" cname="tp_text_mixin_finalize" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
        </parameters>
      </method>
      <method name="GetMessageTypes" cname="tp_text_mixin_get_message_types" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="GArray**" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetOffsetQuark" cname="tp_text_mixin_get_offset_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="IfaceInit" cname="tp_text_mixin_iface_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="g_iface" />
          <parameter type="gpointer" name="iface_data" />
        </parameters>
      </method>
      <method name="Init" cname="tp_text_mixin_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="glong" name="offset" />
          <parameter type="TpHandleRepoIface*" name="contacts_repo" />
        </parameters>
      </method>
      <method name="ListPendingMessages" cname="tp_text_mixin_list_pending_messages" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="gboolean" name="clear" />
          <parameter type="GPtrArray**" name="ret" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="Receive" cname="tp_text_mixin_receive" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="TpChannelTextMessageType" name="type" />
          <parameter type="TpHandle" name="sender" />
          <parameter type="time_t" name="timestamp" />
          <parameter type="const-char*" name="text" />
        </parameters>
      </method>
      <method name="SetMessageTypes" cname="tp_text_mixin_set_message_types" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
    </struct>
    <struct name="TextMixinClass" cname="TpTextMixinClass">
      <field name="Priv" cname="priv" type="TpTextMixinClassPrivate*" />
      <method name="GetOffsetQuark" cname="tp_text_mixin_class_get_offset_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="Init" cname="tp_text_mixin_class_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObjectClass*" name="obj_cls" />
          <parameter type="glong" name="offset" />
        </parameters>
      </method>
    </struct>
    <struct name="TpCliChannelInterfaceCallStateRunStateGetCallStates" cname="_tp_cli_channel_interface_call_state_run_state_get_call_states">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out_States" cname="out_States" type="GHashTable**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceChatStateRunStateSetChatState" cname="_tp_cli_channel_interface_chat_state_run_state_set_chat_state">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceDtmfRunStateStartTone" cname="_tp_cli_channel_interface_dtmf_run_state_start_tone">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceDtmfRunStateStopTone" cname="_tp_cli_channel_interface_dtmf_run_state_stop_tone">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceGroupRunStateAddMembers" cname="_tp_cli_channel_interface_group_run_state_add_members">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceGroupRunStateGetAllMembers" cname="_tp_cli_channel_interface_group_run_state_get_all_members">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GArray**" />
      <field name="Out1" cname="out1" type="GArray**" />
      <field name="Out2" cname="out2" type="GArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceGroupRunStateGetGroupFlags" cname="_tp_cli_channel_interface_group_run_state_get_group_flags">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceGroupRunStateGetHandleOwners" cname="_tp_cli_channel_interface_group_run_state_get_handle_owners">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceGroupRunStateGetLocalPendingMembers" cname="_tp_cli_channel_interface_group_run_state_get_local_pending_members">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceGroupRunStateGetLocalPendingMembersWithInfo" cname="_tp_cli_channel_interface_group_run_state_get_local_pending_members_with_info">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceGroupRunStateGetMembers" cname="_tp_cli_channel_interface_group_run_state_get_members">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceGroupRunStateGetRemotePendingMembers" cname="_tp_cli_channel_interface_group_run_state_get_remote_pending_members">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceGroupRunStateGetSelfHandle" cname="_tp_cli_channel_interface_group_run_state_get_self_handle">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceGroupRunStateRemoveMembers" cname="_tp_cli_channel_interface_group_run_state_remove_members">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceGroupRunStateRemoveMembersWithReason" cname="_tp_cli_channel_interface_group_run_state_remove_members_with_reason">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceHoldRunStateGetHoldState" cname="_tp_cli_channel_interface_hold_run_state_get_hold_state">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out_HoldState" cname="out_HoldState" type="guint*" />
      <field name="Out_Reason" cname="out_Reason" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceHoldRunStateRequestHold" cname="_tp_cli_channel_interface_hold_run_state_request_hold">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfaceMediaSignallingRunStateGetSessionHandlers" cname="_tp_cli_channel_interface_media_signalling_run_state_get_session_handlers">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfacePasswordRunStateGetPasswordFlags" cname="_tp_cli_channel_interface_password_run_state_get_password_flags">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelInterfacePasswordRunStateProvidePassword" cname="_tp_cli_channel_interface_password_run_state_provide_password">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gboolean*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelRunStateClose" cname="_tp_cli_channel_run_state_close">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelRunStateGetChannelType" cname="_tp_cli_channel_run_state_get_channel_type">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelRunStateGetHandle" cname="_tp_cli_channel_run_state_get_handle">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Out1" cname="out1" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelRunStateGetInterfaces" cname="_tp_cli_channel_run_state_get_interfaces">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar***" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeRoomListRunStateGetListingRooms" cname="_tp_cli_channel_type_room_list_run_state_get_listing_rooms">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gboolean*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeRoomListRunStateListRooms" cname="_tp_cli_channel_type_room_list_run_state_list_rooms">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeRoomListRunStateStopListing" cname="_tp_cli_channel_type_room_list_run_state_stop_listing">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeStreamedMediaRunStateListStreams" cname="_tp_cli_channel_type_streamed_media_run_state_list_streams">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeStreamedMediaRunStateRemoveStreams" cname="_tp_cli_channel_type_streamed_media_run_state_remove_streams">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeStreamedMediaRunStateRequestStreamDirection" cname="_tp_cli_channel_type_streamed_media_run_state_request_stream_direction">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeStreamedMediaRunStateRequestStreams" cname="_tp_cli_channel_type_streamed_media_run_state_request_streams">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTextRunStateAcknowledgePendingMessages" cname="_tp_cli_channel_type_text_run_state_acknowledge_pending_messages">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTextRunStateGetMessageTypes" cname="_tp_cli_channel_type_text_run_state_get_message_types">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTextRunStateListPendingMessages" cname="_tp_cli_channel_type_text_run_state_list_pending_messages">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTextRunStateSend" cname="_tp_cli_channel_type_text_run_state_send">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTubesRunStateAcceptDBusTube" cname="_tp_cli_channel_type_tubes_run_state_accept_d_bus_tube">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="OutAddress" cname="out_address" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTubesRunStateAcceptStreamTube" cname="_tp_cli_channel_type_tubes_run_state_accept_stream_tube">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="OutAddress" cname="out_address" type="GValue**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTubesRunStateCloseTube" cname="_tp_cli_channel_type_tubes_run_state_close_tube">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTubesRunStateGetAvailableStreamTubeTypes" cname="_tp_cli_channel_type_tubes_run_state_get_available_stream_tube_types">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GHashTable**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTubesRunStateGetAvailableTubeTypes" cname="_tp_cli_channel_type_tubes_run_state_get_available_tube_types">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTubesRunStateGetDBusNames" cname="_tp_cli_channel_type_tubes_run_state_get_d_bus_names">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTubesRunStateGetDBusTubeAddress" cname="_tp_cli_channel_type_tubes_run_state_get_d_bus_tube_address">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTubesRunStateGetStreamTubeSocketAddress" cname="_tp_cli_channel_type_tubes_run_state_get_stream_tube_socket_address">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="OutAddressType" cname="out_address_type" type="guint*" />
      <field name="OutAddress" cname="out_address" type="GValue**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTubesRunStateListTubes" cname="_tp_cli_channel_type_tubes_run_state_list_tubes">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTubesRunStateOfferDBusTube" cname="_tp_cli_channel_type_tubes_run_state_offer_d_bus_tube">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliChannelTypeTubesRunStateOfferStreamTube" cname="_tp_cli_channel_type_tubes_run_state_offer_stream_tube">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceAliasingRunStateGetAliasFlags" cname="_tp_cli_connection_interface_aliasing_run_state_get_alias_flags">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceAliasingRunStateRequestAliases" cname="_tp_cli_connection_interface_aliasing_run_state_request_aliases">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar***" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceAliasingRunStateSetAliases" cname="_tp_cli_connection_interface_aliasing_run_state_set_aliases">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceAvatarsRunStateClearAvatar" cname="_tp_cli_connection_interface_avatars_run_state_clear_avatar">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceAvatarsRunStateGetAvatarRequirements" cname="_tp_cli_connection_interface_avatars_run_state_get_avatar_requirements">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar***" />
      <field name="Out1" cname="out1" type="guint*" />
      <field name="Out2" cname="out2" type="guint*" />
      <field name="Out3" cname="out3" type="guint*" />
      <field name="Out4" cname="out4" type="guint*" />
      <field name="Out5" cname="out5" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceAvatarsRunStateGetAvatarTokens" cname="_tp_cli_connection_interface_avatars_run_state_get_avatar_tokens">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar***" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceAvatarsRunStateGetKnownAvatarTokens" cname="_tp_cli_connection_interface_avatars_run_state_get_known_avatar_tokens">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GHashTable**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceAvatarsRunStateRequestAvatar" cname="_tp_cli_connection_interface_avatars_run_state_request_avatar">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GArray**" />
      <field name="Out1" cname="out1" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceAvatarsRunStateRequestAvatars" cname="_tp_cli_connection_interface_avatars_run_state_request_avatars">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceAvatarsRunStateSetAvatar" cname="_tp_cli_connection_interface_avatars_run_state_set_avatar">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceCapabilitiesRunStateAdvertiseCapabilities" cname="_tp_cli_connection_interface_capabilities_run_state_advertise_capabilities">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceCapabilitiesRunStateGetCapabilities" cname="_tp_cli_connection_interface_capabilities_run_state_get_capabilities">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfacePresenceRunStateAddStatus" cname="_tp_cli_connection_interface_presence_run_state_add_status">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfacePresenceRunStateClearStatus" cname="_tp_cli_connection_interface_presence_run_state_clear_status">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfacePresenceRunStateGetPresence" cname="_tp_cli_connection_interface_presence_run_state_get_presence">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="OutPresence" cname="out_presence" type="GHashTable**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfacePresenceRunStateGetStatuses" cname="_tp_cli_connection_interface_presence_run_state_get_statuses">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GHashTable**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfacePresenceRunStateRemoveStatus" cname="_tp_cli_connection_interface_presence_run_state_remove_status">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfacePresenceRunStateRequestPresence" cname="_tp_cli_connection_interface_presence_run_state_request_presence">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfacePresenceRunStateSetLastActivityTime" cname="_tp_cli_connection_interface_presence_run_state_set_last_activity_time">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfacePresenceRunStateSetStatus" cname="_tp_cli_connection_interface_presence_run_state_set_status">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceSimplePresenceRunStateGetPresences" cname="_tp_cli_connection_interface_simple_presence_run_state_get_presences">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="OutPresence" cname="out_presence" type="GHashTable**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionInterfaceSimplePresenceRunStateSetPresence" cname="_tp_cli_connection_interface_simple_presence_run_state_set_presence">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionManagerRunStateGetParameters" cname="_tp_cli_connection_manager_run_state_get_parameters">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionManagerRunStateListProtocols" cname="_tp_cli_connection_manager_run_state_list_protocols">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar***" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionManagerRunStateRequestConnection" cname="_tp_cli_connection_manager_run_state_request_connection">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar**" />
      <field name="Out1" cname="out1" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateConnect" cname="_tp_cli_connection_run_state_connect">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateDisconnect" cname="_tp_cli_connection_run_state_disconnect">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateGetInterfaces" cname="_tp_cli_connection_run_state_get_interfaces">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar***" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateGetProtocol" cname="_tp_cli_connection_run_state_get_protocol">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateGetSelfHandle" cname="_tp_cli_connection_run_state_get_self_handle">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateGetStatus" cname="_tp_cli_connection_run_state_get_status">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateHoldHandles" cname="_tp_cli_connection_run_state_hold_handles">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateInspectHandles" cname="_tp_cli_connection_run_state_inspect_handles">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar***" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateListChannels" cname="_tp_cli_connection_run_state_list_channels">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateReleaseHandles" cname="_tp_cli_connection_run_state_release_handles">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateRequestChannel" cname="_tp_cli_connection_run_state_request_channel">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliConnectionRunStateRequestHandles" cname="_tp_cli_connection_run_state_request_handles">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateAddMatch" cname="_tp_cli_dbus_daemon_run_state_add_match">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateGetConnectionSeLinuxSecurityContext" cname="_tp_cli_dbus_daemon_run_state_get_connection_se_linux_security_context">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateGetConnectionUnixProcessId" cname="_tp_cli_dbus_daemon_run_state_get_connection_unix_process_id">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateGetConnectionUnixUser" cname="_tp_cli_dbus_daemon_run_state_get_connection_unix_user">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateGetId" cname="_tp_cli_dbus_daemon_run_state_get_id">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateGetNameOwner" cname="_tp_cli_dbus_daemon_run_state_get_name_owner">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateHello" cname="_tp_cli_dbus_daemon_run_state_hello">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateListActivatableNames" cname="_tp_cli_dbus_daemon_run_state_list_activatable_names">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar***" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateListNames" cname="_tp_cli_dbus_daemon_run_state_list_names">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar***" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateListQueuedOwners" cname="_tp_cli_dbus_daemon_run_state_list_queued_owners">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gchar***" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateNameHasOwner" cname="_tp_cli_dbus_daemon_run_state_name_has_owner">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="gboolean*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateReleaseName" cname="_tp_cli_dbus_daemon_run_state_release_name">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateReloadConfig" cname="_tp_cli_dbus_daemon_run_state_reload_config">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateRemoveMatch" cname="_tp_cli_dbus_daemon_run_state_remove_match">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateRequestName" cname="_tp_cli_dbus_daemon_run_state_request_name">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusDaemonRunStateStartServiceByName" cname="_tp_cli_dbus_daemon_run_state_start_service_by_name">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="guint*" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusIntrospectableRunStateIntrospect" cname="_tp_cli_dbus_introspectable_run_state_introspect">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out_XML_Data" cname="out_XML_Data" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusPeerRunStateGetMachineId" cname="_tp_cli_dbus_peer_run_state_get_machine_id">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out_Machine_UUID" cname="out_Machine_UUID" type="gchar**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusPeerRunStatePing" cname="_tp_cli_dbus_peer_run_state_ping">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusPropertiesRunStateGet" cname="_tp_cli_dbus_properties_run_state_get">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out_Value" cname="out_Value" type="GValue**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusPropertiesRunStateGetAll" cname="_tp_cli_dbus_properties_run_state_get_all">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out_Properties" cname="out_Properties" type="GHashTable**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliDbusPropertiesRunStateSet" cname="_tp_cli_dbus_properties_run_state_set">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaSessionHandlerRunStateError" cname="_tp_cli_media_session_handler_run_state_error">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaSessionHandlerRunStateReady" cname="_tp_cli_media_session_handler_run_state_ready">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaStreamHandlerRunStateCodecChoice" cname="_tp_cli_media_stream_handler_run_state_codec_choice">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaStreamHandlerRunStateError" cname="_tp_cli_media_stream_handler_run_state_error">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaStreamHandlerRunStateHoldState" cname="_tp_cli_media_stream_handler_run_state_hold_state">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaStreamHandlerRunStateNativeCandidatesPrepared" cname="_tp_cli_media_stream_handler_run_state_native_candidates_prepared">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaStreamHandlerRunStateNewActiveCandidatePair" cname="_tp_cli_media_stream_handler_run_state_new_active_candidate_pair">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaStreamHandlerRunStateNewNativeCandidate" cname="_tp_cli_media_stream_handler_run_state_new_native_candidate">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaStreamHandlerRunStateReady" cname="_tp_cli_media_stream_handler_run_state_ready">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaStreamHandlerRunStateSetLocalCodecs" cname="_tp_cli_media_stream_handler_run_state_set_local_codecs">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaStreamHandlerRunStateStreamState" cname="_tp_cli_media_stream_handler_run_state_stream_state">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaStreamHandlerRunStateSupportedCodecs" cname="_tp_cli_media_stream_handler_run_state_supported_codecs">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliMediaStreamHandlerRunStateUnholdFailure" cname="_tp_cli_media_stream_handler_run_state_unhold_failure">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliPropertiesInterfaceRunStateGetProperties" cname="_tp_cli_properties_interface_run_state_get_properties">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliPropertiesInterfaceRunStateListProperties" cname="_tp_cli_properties_interface_run_state_list_properties">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Out0" cname="out0" type="GPtrArray**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <struct name="TpCliPropertiesInterfaceRunStateSetProperties" cname="_tp_cli_properties_interface_run_state_set_properties">
      <field name="Loop" cname="loop" type="GMainLoop*" />
      <field name="Error" cname="error" type="GError**" />
      <field name="Success" cname="success" bits="1" type="gboolean" />
      <field name="Completed" cname="completed" bits="1" type="gboolean" />
    </struct>
    <class name="Asv" cname="TpAsv_">
      <method name="GetBoolean" cname="tp_asv_get_boolean" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
          <parameter type="gboolean*" name="valid" />
        </parameters>
      </method>
      <method name="GetBoxed" cname="tp_asv_get_boxed" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="GetBytes" cname="tp_asv_get_bytes" shared="true">
        <return-type type="const-GArray*" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetDouble" cname="tp_asv_get_double" shared="true">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
          <parameter type="gboolean*" name="valid" />
        </parameters>
      </method>
      <method name="GetInt32" cname="tp_asv_get_int32" shared="true">
        <return-type type="gint32" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
          <parameter type="gboolean*" name="valid" />
        </parameters>
      </method>
      <method name="GetInt64" cname="tp_asv_get_int64" shared="true">
        <return-type type="gint64" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
          <parameter type="gboolean*" name="valid" />
        </parameters>
      </method>
      <method name="GetObjectPath" cname="tp_asv_get_object_path" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetString" cname="tp_asv_get_string" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetStrv" cname="tp_asv_get_strv" shared="true">
        <return-type type="const-gchar**" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetUint32" cname="tp_asv_get_uint32" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
          <parameter type="gboolean*" name="valid" />
        </parameters>
      </method>
      <method name="GetUint64" cname="tp_asv_get_uint64" shared="true">
        <return-type type="guint64" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
          <parameter type="gboolean*" name="valid" />
        </parameters>
      </method>
      <method name="Lookup" cname="tp_asv_lookup" shared="true">
        <return-type type="const-GValue*" />
        <parameters>
          <parameter type="const-GHashTable*" name="asv" />
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
    </class>
    <class name="Cli" cname="TpCli_">
      <method name="ChannelCallClose" cname="tp_cli_channel_call_close" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_callback_for_close" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelCallGetChannelType" cname="tp_cli_channel_call_get_channel_type" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_callback_for_get_channel_type" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelCallGetHandle" cname="tp_cli_channel_call_get_handle" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_callback_for_get_handle" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelCallGetInterfaces" cname="tp_cli_channel_call_get_interfaces" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_callback_for_get_interfaces" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelConnectToClosed" cname="tp_cli_channel_connect_to_closed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_signal_callback_closed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelInterfaceCallStateCallGetCallStates" cname="tp_cli_channel_interface_call_state_call_get_call_states" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_interface_call_state_callback_for_get_call_states" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceCallStateConnectToCallStateChanged" cname="tp_cli_channel_interface_call_state_connect_to_call_state_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_interface_call_state_signal_callback_call_state_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelInterfaceCallStateRunGetCallStates" cname="tp_cli_channel_interface_call_state_run_get_call_states" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GHashTable**" name="out_States" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceChatStateCallSetChatState" cname="tp_cli_channel_interface_chat_state_call_set_chat_state" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_state" />
          <parameter type="tp_cli_channel_interface_chat_state_callback_for_set_chat_state" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceChatStateConnectToChatStateChanged" cname="tp_cli_channel_interface_chat_state_connect_to_chat_state_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_interface_chat_state_signal_callback_chat_state_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelInterfaceChatStateRunSetChatState" cname="tp_cli_channel_interface_chat_state_run_set_chat_state" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_state" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceDtmfCallStartTone" cname="tp_cli_channel_interface_dtmf_call_start_tone" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_stream_id" />
          <parameter type="guchar" name="in_event" />
          <parameter type="tp_cli_channel_interface_dtmf_callback_for_start_tone" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceDtmfCallStopTone" cname="tp_cli_channel_interface_dtmf_call_stop_tone" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_stream_id" />
          <parameter type="tp_cli_channel_interface_dtmf_callback_for_stop_tone" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceDtmfRunStartTone" cname="tp_cli_channel_interface_dtmf_run_start_tone" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_stream_id" />
          <parameter type="guchar" name="in_event" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceDtmfRunStopTone" cname="tp_cli_channel_interface_dtmf_run_stop_tone" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_stream_id" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupCallAddMembers" cname="tp_cli_channel_interface_group_call_add_members" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="const-gchar*" name="in_message" />
          <parameter type="tp_cli_channel_interface_group_callback_for_add_members" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupCallGetAllMembers" cname="tp_cli_channel_interface_group_call_get_all_members" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_interface_group_callback_for_get_all_members" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupCallGetGroupFlags" cname="tp_cli_channel_interface_group_call_get_group_flags" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_interface_group_callback_for_get_group_flags" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupCallGetHandleOwners" cname="tp_cli_channel_interface_group_call_get_handle_owners" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_handles" />
          <parameter type="tp_cli_channel_interface_group_callback_for_get_handle_owners" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupCallGetLocalPendingMembers" cname="tp_cli_channel_interface_group_call_get_local_pending_members" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_interface_group_callback_for_get_local_pending_members" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupCallGetLocalPendingMembersWithInfo" cname="tp_cli_channel_interface_group_call_get_local_pending_members_with_info" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_interface_group_callback_for_get_local_pending_members_with_info" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupCallGetMembers" cname="tp_cli_channel_interface_group_call_get_members" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_interface_group_callback_for_get_members" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupCallGetRemotePendingMembers" cname="tp_cli_channel_interface_group_call_get_remote_pending_members" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_interface_group_callback_for_get_remote_pending_members" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupCallGetSelfHandle" cname="tp_cli_channel_interface_group_call_get_self_handle" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_interface_group_callback_for_get_self_handle" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupCallRemoveMembers" cname="tp_cli_channel_interface_group_call_remove_members" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="const-gchar*" name="in_message" />
          <parameter type="tp_cli_channel_interface_group_callback_for_remove_members" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupCallRemoveMembersWithReason" cname="tp_cli_channel_interface_group_call_remove_members_with_reason" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="const-gchar*" name="in_message" />
          <parameter type="guint" name="in_reason" />
          <parameter type="tp_cli_channel_interface_group_callback_for_remove_members_with_reason" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupConnectToGroupFlagsChanged" cname="tp_cli_channel_interface_group_connect_to_group_flags_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_interface_group_signal_callback_group_flags_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupConnectToHandleOwnersChanged" cname="tp_cli_channel_interface_group_connect_to_handle_owners_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_interface_group_signal_callback_handle_owners_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupConnectToMembersChanged" cname="tp_cli_channel_interface_group_connect_to_members_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_interface_group_signal_callback_members_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupConnectToSelfHandleChanged" cname="tp_cli_channel_interface_group_connect_to_self_handle_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_interface_group_signal_callback_self_handle_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupRunAddMembers" cname="tp_cli_channel_interface_group_run_add_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="const-gchar*" name="in_message" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupRunGetAllMembers" cname="tp_cli_channel_interface_group_run_get_all_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GArray**" name="out0" />
          <parameter type="GArray**" name="out1" />
          <parameter type="GArray**" name="out2" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupRunGetGroupFlags" cname="tp_cli_channel_interface_group_run_get_group_flags" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupRunGetHandleOwners" cname="tp_cli_channel_interface_group_run_get_handle_owners" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_handles" />
          <parameter type="GArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupRunGetLocalPendingMembers" cname="tp_cli_channel_interface_group_run_get_local_pending_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupRunGetLocalPendingMembersWithInfo" cname="tp_cli_channel_interface_group_run_get_local_pending_members_with_info" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupRunGetMembers" cname="tp_cli_channel_interface_group_run_get_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupRunGetRemotePendingMembers" cname="tp_cli_channel_interface_group_run_get_remote_pending_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupRunGetSelfHandle" cname="tp_cli_channel_interface_group_run_get_self_handle" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupRunRemoveMembers" cname="tp_cli_channel_interface_group_run_remove_members" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="const-gchar*" name="in_message" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceGroupRunRemoveMembersWithReason" cname="tp_cli_channel_interface_group_run_remove_members_with_reason" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="const-gchar*" name="in_message" />
          <parameter type="guint" name="in_reason" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceHoldCallGetHoldState" cname="tp_cli_channel_interface_hold_call_get_hold_state" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_interface_hold_callback_for_get_hold_state" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceHoldCallRequestHold" cname="tp_cli_channel_interface_hold_call_request_hold" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gboolean" name="in_Hold" />
          <parameter type="tp_cli_channel_interface_hold_callback_for_request_hold" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceHoldConnectToHoldStateChanged" cname="tp_cli_channel_interface_hold_connect_to_hold_state_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_interface_hold_signal_callback_hold_state_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelInterfaceHoldRunGetHoldState" cname="tp_cli_channel_interface_hold_run_get_hold_state" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint*" name="out_HoldState" />
          <parameter type="guint*" name="out_Reason" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceHoldRunRequestHold" cname="tp_cli_channel_interface_hold_run_request_hold" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gboolean" name="in_Hold" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfaceMediaSignallingCallGetSessionHandlers" cname="tp_cli_channel_interface_media_signalling_call_get_session_handlers" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_interface_media_signalling_callback_for_get_session_handlers" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfaceMediaSignallingConnectToNewSessionHandler" cname="tp_cli_channel_interface_media_signalling_connect_to_new_session_handler" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_interface_media_signalling_signal_callback_new_session_handler" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelInterfaceMediaSignallingRunGetSessionHandlers" cname="tp_cli_channel_interface_media_signalling_run_get_session_handlers" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfacePasswordCallGetPasswordFlags" cname="tp_cli_channel_interface_password_call_get_password_flags" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_interface_password_callback_for_get_password_flags" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfacePasswordCallProvidePassword" cname="tp_cli_channel_interface_password_call_provide_password" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_password" />
          <parameter type="tp_cli_channel_interface_password_callback_for_provide_password" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelInterfacePasswordConnectToPasswordFlagsChanged" cname="tp_cli_channel_interface_password_connect_to_password_flags_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_interface_password_signal_callback_password_flags_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelInterfacePasswordRunGetPasswordFlags" cname="tp_cli_channel_interface_password_run_get_password_flags" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelInterfacePasswordRunProvidePassword" cname="tp_cli_channel_interface_password_run_provide_password" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_password" />
          <parameter type="gboolean*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelRunClose" cname="tp_cli_channel_run_close" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelRunGetChannelType" cname="tp_cli_channel_run_get_channel_type" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelRunGetHandle" cname="tp_cli_channel_run_get_handle" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint*" name="out0" />
          <parameter type="guint*" name="out1" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelRunGetInterfaces" cname="tp_cli_channel_run_get_interfaces" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar***" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeRoomListCallGetListingRooms" cname="tp_cli_channel_type_room_list_call_get_listing_rooms" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_type_room_list_callback_for_get_listing_rooms" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeRoomListCallListRooms" cname="tp_cli_channel_type_room_list_call_list_rooms" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_type_room_list_callback_for_list_rooms" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeRoomListCallStopListing" cname="tp_cli_channel_type_room_list_call_stop_listing" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_type_room_list_callback_for_stop_listing" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeRoomListConnectToGotRooms" cname="tp_cli_channel_type_room_list_connect_to_got_rooms" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_room_list_signal_callback_got_rooms" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeRoomListConnectToListingRooms" cname="tp_cli_channel_type_room_list_connect_to_listing_rooms" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_room_list_signal_callback_listing_rooms" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeRoomListRunGetListingRooms" cname="tp_cli_channel_type_room_list_run_get_listing_rooms" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gboolean*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeRoomListRunListRooms" cname="tp_cli_channel_type_room_list_run_list_rooms" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeRoomListRunStopListing" cname="tp_cli_channel_type_room_list_run_stop_listing" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaCallListStreams" cname="tp_cli_channel_type_streamed_media_call_list_streams" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_type_streamed_media_callback_for_list_streams" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaCallRemoveStreams" cname="tp_cli_channel_type_streamed_media_call_remove_streams" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_streams" />
          <parameter type="tp_cli_channel_type_streamed_media_callback_for_remove_streams" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaCallRequestStreamDirection" cname="tp_cli_channel_type_streamed_media_call_request_stream_direction" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_stream_id" />
          <parameter type="guint" name="in_stream_direction" />
          <parameter type="tp_cli_channel_type_streamed_media_callback_for_request_stream_direction" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaCallRequestStreams" cname="tp_cli_channel_type_streamed_media_call_request_streams" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_contact_handle" />
          <parameter type="const-GArray*" name="in_types" />
          <parameter type="tp_cli_channel_type_streamed_media_callback_for_request_streams" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaConnectToStreamAdded" cname="tp_cli_channel_type_streamed_media_connect_to_stream_added" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_streamed_media_signal_callback_stream_added" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaConnectToStreamDirectionChanged" cname="tp_cli_channel_type_streamed_media_connect_to_stream_direction_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_streamed_media_signal_callback_stream_direction_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaConnectToStreamError" cname="tp_cli_channel_type_streamed_media_connect_to_stream_error" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_streamed_media_signal_callback_stream_error" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaConnectToStreamRemoved" cname="tp_cli_channel_type_streamed_media_connect_to_stream_removed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_streamed_media_signal_callback_stream_removed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaConnectToStreamStateChanged" cname="tp_cli_channel_type_streamed_media_connect_to_stream_state_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_streamed_media_signal_callback_stream_state_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaRunListStreams" cname="tp_cli_channel_type_streamed_media_run_list_streams" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaRunRemoveStreams" cname="tp_cli_channel_type_streamed_media_run_remove_streams" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_streams" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaRunRequestStreamDirection" cname="tp_cli_channel_type_streamed_media_run_request_stream_direction" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_stream_id" />
          <parameter type="guint" name="in_stream_direction" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeStreamedMediaRunRequestStreams" cname="tp_cli_channel_type_streamed_media_run_request_streams" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_contact_handle" />
          <parameter type="const-GArray*" name="in_types" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTextCallAcknowledgePendingMessages" cname="tp_cli_channel_type_text_call_acknowledge_pending_messages" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_ids" />
          <parameter type="tp_cli_channel_type_text_callback_for_acknowledge_pending_messages" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTextCallGetMessageTypes" cname="tp_cli_channel_type_text_call_get_message_types" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_type_text_callback_for_get_message_types" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTextCallListPendingMessages" cname="tp_cli_channel_type_text_call_list_pending_messages" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gboolean" name="in_clear" />
          <parameter type="tp_cli_channel_type_text_callback_for_list_pending_messages" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTextCallSend" cname="tp_cli_channel_type_text_call_send" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_type" />
          <parameter type="const-gchar*" name="in_text" />
          <parameter type="tp_cli_channel_type_text_callback_for_send" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTextConnectToLostMessage" cname="tp_cli_channel_type_text_connect_to_lost_message" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_text_signal_callback_lost_message" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeTextConnectToReceived" cname="tp_cli_channel_type_text_connect_to_received" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_text_signal_callback_received" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeTextConnectToSendError" cname="tp_cli_channel_type_text_connect_to_send_error" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_text_signal_callback_send_error" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeTextConnectToSent" cname="tp_cli_channel_type_text_connect_to_sent" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_text_signal_callback_sent" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeTextRunAcknowledgePendingMessages" cname="tp_cli_channel_type_text_run_acknowledge_pending_messages" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_ids" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTextRunGetMessageTypes" cname="tp_cli_channel_type_text_run_get_message_types" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTextRunListPendingMessages" cname="tp_cli_channel_type_text_run_list_pending_messages" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gboolean" name="in_clear" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTextRunSend" cname="tp_cli_channel_type_text_run_send" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_type" />
          <parameter type="const-gchar*" name="in_text" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesCallAcceptDBusTube" cname="tp_cli_channel_type_tubes_call_accept_d_bus_tube" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="tp_cli_channel_type_tubes_callback_for_accept_d_bus_tube" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesCallAcceptStreamTube" cname="tp_cli_channel_type_tubes_call_accept_stream_tube" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="guint" name="in_address_type" />
          <parameter type="guint" name="in_access_control" />
          <parameter type="const-GValue*" name="in_access_control_param" />
          <parameter type="tp_cli_channel_type_tubes_callback_for_accept_stream_tube" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesCallCloseTube" cname="tp_cli_channel_type_tubes_call_close_tube" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="tp_cli_channel_type_tubes_callback_for_close_tube" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesCallGetAvailableStreamTubeTypes" cname="tp_cli_channel_type_tubes_call_get_available_stream_tube_types" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_type_tubes_callback_for_get_available_stream_tube_types" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesCallGetAvailableTubeTypes" cname="tp_cli_channel_type_tubes_call_get_available_tube_types" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_type_tubes_callback_for_get_available_tube_types" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesCallGetDBusNames" cname="tp_cli_channel_type_tubes_call_get_d_bus_names" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="tp_cli_channel_type_tubes_callback_for_get_d_bus_names" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesCallGetDBusTubeAddress" cname="tp_cli_channel_type_tubes_call_get_d_bus_tube_address" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="tp_cli_channel_type_tubes_callback_for_get_d_bus_tube_address" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesCallGetStreamTubeSocketAddress" cname="tp_cli_channel_type_tubes_call_get_stream_tube_socket_address" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="tp_cli_channel_type_tubes_callback_for_get_stream_tube_socket_address" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesCallListTubes" cname="tp_cli_channel_type_tubes_call_list_tubes" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_channel_type_tubes_callback_for_list_tubes" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesCallOfferDBusTube" cname="tp_cli_channel_type_tubes_call_offer_d_bus_tube" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_service" />
          <parameter type="GHashTable*" name="in_parameters" />
          <parameter type="tp_cli_channel_type_tubes_callback_for_offer_d_bus_tube" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesCallOfferStreamTube" cname="tp_cli_channel_type_tubes_call_offer_stream_tube" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_service" />
          <parameter type="GHashTable*" name="in_parameters" />
          <parameter type="guint" name="in_address_type" />
          <parameter type="const-GValue*" name="in_address" />
          <parameter type="guint" name="in_access_control" />
          <parameter type="const-GValue*" name="in_access_control_param" />
          <parameter type="tp_cli_channel_type_tubes_callback_for_offer_stream_tube" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesConnectToDBusNamesChanged" cname="tp_cli_channel_type_tubes_connect_to_d_bus_names_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_tubes_signal_callback_d_bus_names_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesConnectToNewTube" cname="tp_cli_channel_type_tubes_connect_to_new_tube" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_tubes_signal_callback_new_tube" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesConnectToStreamTubeNewConnection" cname="tp_cli_channel_type_tubes_connect_to_stream_tube_new_connection" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_tubes_signal_callback_stream_tube_new_connection" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesConnectToTubeClosed" cname="tp_cli_channel_type_tubes_connect_to_tube_closed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_tubes_signal_callback_tube_closed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesConnectToTubeStateChanged" cname="tp_cli_channel_type_tubes_connect_to_tube_state_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="tp_cli_channel_type_tubes_signal_callback_tube_state_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesRunAcceptDBusTube" cname="tp_cli_channel_type_tubes_run_accept_d_bus_tube" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="gchar**" name="out_address" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesRunAcceptStreamTube" cname="tp_cli_channel_type_tubes_run_accept_stream_tube" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="guint" name="in_address_type" />
          <parameter type="guint" name="in_access_control" />
          <parameter type="const-GValue*" name="in_access_control_param" />
          <parameter type="GValue**" name="out_address" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesRunCloseTube" cname="tp_cli_channel_type_tubes_run_close_tube" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesRunGetAvailableStreamTubeTypes" cname="tp_cli_channel_type_tubes_run_get_available_stream_tube_types" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GHashTable**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesRunGetAvailableTubeTypes" cname="tp_cli_channel_type_tubes_run_get_available_tube_types" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesRunGetDBusNames" cname="tp_cli_channel_type_tubes_run_get_d_bus_names" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesRunGetDBusTubeAddress" cname="tp_cli_channel_type_tubes_run_get_d_bus_tube_address" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="gchar**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesRunGetStreamTubeSocketAddress" cname="tp_cli_channel_type_tubes_run_get_stream_tube_socket_address" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_id" />
          <parameter type="guint*" name="out_address_type" />
          <parameter type="GValue**" name="out_address" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesRunListTubes" cname="tp_cli_channel_type_tubes_run_list_tubes" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesRunOfferDBusTube" cname="tp_cli_channel_type_tubes_run_offer_d_bus_tube" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_service" />
          <parameter type="GHashTable*" name="in_parameters" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ChannelTypeTubesRunOfferStreamTube" cname="tp_cli_channel_type_tubes_run_offer_stream_tube" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpChannel*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_service" />
          <parameter type="GHashTable*" name="in_parameters" />
          <parameter type="guint" name="in_address_type" />
          <parameter type="const-GValue*" name="in_address" />
          <parameter type="guint" name="in_access_control" />
          <parameter type="const-GValue*" name="in_access_control_param" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionCallConnect" cname="tp_cli_connection_call_connect" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_callback_for_connect" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionCallDisconnect" cname="tp_cli_connection_call_disconnect" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_callback_for_disconnect" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionCallGetInterfaces" cname="tp_cli_connection_call_get_interfaces" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_callback_for_get_interfaces" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionCallGetProtocol" cname="tp_cli_connection_call_get_protocol" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_callback_for_get_protocol" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionCallGetSelfHandle" cname="tp_cli_connection_call_get_self_handle" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_callback_for_get_self_handle" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionCallGetStatus" cname="tp_cli_connection_call_get_status" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_callback_for_get_status" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionCallHoldHandles" cname="tp_cli_connection_call_hold_handles" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_handle_type" />
          <parameter type="const-GArray*" name="in_handles" />
          <parameter type="tp_cli_connection_callback_for_hold_handles" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionCallInspectHandles" cname="tp_cli_connection_call_inspect_handles" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_handle_type" />
          <parameter type="const-GArray*" name="in_handles" />
          <parameter type="tp_cli_connection_callback_for_inspect_handles" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionCallListChannels" cname="tp_cli_connection_call_list_channels" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_callback_for_list_channels" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionCallReleaseHandles" cname="tp_cli_connection_call_release_handles" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_handle_type" />
          <parameter type="const-GArray*" name="in_handles" />
          <parameter type="tp_cli_connection_callback_for_release_handles" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionCallRequestChannel" cname="tp_cli_connection_call_request_channel" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_type" />
          <parameter type="guint" name="in_handle_type" />
          <parameter type="guint" name="in_handle" />
          <parameter type="gboolean" name="in_suppress_handler" />
          <parameter type="tp_cli_connection_callback_for_request_channel" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionCallRequestHandles" cname="tp_cli_connection_call_request_handles" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_handle_type" />
          <parameter type="const-gchar**" name="in_names" />
          <parameter type="tp_cli_connection_callback_for_request_handles" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionConnectToNewChannel" cname="tp_cli_connection_connect_to_new_channel" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="tp_cli_connection_signal_callback_new_channel" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ConnectionConnectToStatusChanged" cname="tp_cli_connection_connect_to_status_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="tp_cli_connection_signal_callback_status_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAliasingCallGetAliasFlags" cname="tp_cli_connection_interface_aliasing_call_get_alias_flags" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_interface_aliasing_callback_for_get_alias_flags" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAliasingCallRequestAliases" cname="tp_cli_connection_interface_aliasing_call_request_aliases" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="tp_cli_connection_interface_aliasing_callback_for_request_aliases" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAliasingCallSetAliases" cname="tp_cli_connection_interface_aliasing_call_set_aliases" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GHashTable*" name="in_aliases" />
          <parameter type="tp_cli_connection_interface_aliasing_callback_for_set_aliases" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAliasingConnectToAliasesChanged" cname="tp_cli_connection_interface_aliasing_connect_to_aliases_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="tp_cli_connection_interface_aliasing_signal_callback_aliases_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAliasingRunGetAliasFlags" cname="tp_cli_connection_interface_aliasing_run_get_alias_flags" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAliasingRunRequestAliases" cname="tp_cli_connection_interface_aliasing_run_request_aliases" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="gchar***" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAliasingRunSetAliases" cname="tp_cli_connection_interface_aliasing_run_set_aliases" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GHashTable*" name="in_aliases" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsCallClearAvatar" cname="tp_cli_connection_interface_avatars_call_clear_avatar" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_interface_avatars_callback_for_clear_avatar" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsCallGetAvatarRequirements" cname="tp_cli_connection_interface_avatars_call_get_avatar_requirements" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_interface_avatars_callback_for_get_avatar_requirements" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsCallGetAvatarTokens" cname="tp_cli_connection_interface_avatars_call_get_avatar_tokens" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="tp_cli_connection_interface_avatars_callback_for_get_avatar_tokens" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsCallGetKnownAvatarTokens" cname="tp_cli_connection_interface_avatars_call_get_known_avatar_tokens" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="tp_cli_connection_interface_avatars_callback_for_get_known_avatar_tokens" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsCallRequestAvatar" cname="tp_cli_connection_interface_avatars_call_request_avatar" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_contact" />
          <parameter type="tp_cli_connection_interface_avatars_callback_for_request_avatar" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsCallRequestAvatars" cname="tp_cli_connection_interface_avatars_call_request_avatars" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="tp_cli_connection_interface_avatars_callback_for_request_avatars" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsCallSetAvatar" cname="tp_cli_connection_interface_avatars_call_set_avatar" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_avatar" />
          <parameter type="const-gchar*" name="in_mime_type" />
          <parameter type="tp_cli_connection_interface_avatars_callback_for_set_avatar" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsConnectToAvatarRetrieved" cname="tp_cli_connection_interface_avatars_connect_to_avatar_retrieved" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="tp_cli_connection_interface_avatars_signal_callback_avatar_retrieved" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsConnectToAvatarUpdated" cname="tp_cli_connection_interface_avatars_connect_to_avatar_updated" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="tp_cli_connection_interface_avatars_signal_callback_avatar_updated" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsRunClearAvatar" cname="tp_cli_connection_interface_avatars_run_clear_avatar" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsRunGetAvatarRequirements" cname="tp_cli_connection_interface_avatars_run_get_avatar_requirements" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar***" name="out0" />
          <parameter type="guint*" name="out1" />
          <parameter type="guint*" name="out2" />
          <parameter type="guint*" name="out3" />
          <parameter type="guint*" name="out4" />
          <parameter type="guint*" name="out5" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsRunGetAvatarTokens" cname="tp_cli_connection_interface_avatars_run_get_avatar_tokens" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="gchar***" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsRunGetKnownAvatarTokens" cname="tp_cli_connection_interface_avatars_run_get_known_avatar_tokens" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="GHashTable**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsRunRequestAvatar" cname="tp_cli_connection_interface_avatars_run_request_avatar" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_contact" />
          <parameter type="GArray**" name="out0" />
          <parameter type="gchar**" name="out1" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsRunRequestAvatars" cname="tp_cli_connection_interface_avatars_run_request_avatars" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceAvatarsRunSetAvatar" cname="tp_cli_connection_interface_avatars_run_set_avatar" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_avatar" />
          <parameter type="const-gchar*" name="in_mime_type" />
          <parameter type="gchar**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceCapabilitiesCallAdvertiseCapabilities" cname="tp_cli_connection_interface_capabilities_call_advertise_capabilities" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GPtrArray*" name="in_add" />
          <parameter type="const-gchar**" name="in_remove" />
          <parameter type="tp_cli_connection_interface_capabilities_callback_for_advertise_capabilities" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceCapabilitiesCallGetCapabilities" cname="tp_cli_connection_interface_capabilities_call_get_capabilities" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_handles" />
          <parameter type="tp_cli_connection_interface_capabilities_callback_for_get_capabilities" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceCapabilitiesConnectToCapabilitiesChanged" cname="tp_cli_connection_interface_capabilities_connect_to_capabilities_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="tp_cli_connection_interface_capabilities_signal_callback_capabilities_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceCapabilitiesRunAdvertiseCapabilities" cname="tp_cli_connection_interface_capabilities_run_advertise_capabilities" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GPtrArray*" name="in_add" />
          <parameter type="const-gchar**" name="in_remove" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceCapabilitiesRunGetCapabilities" cname="tp_cli_connection_interface_capabilities_run_get_capabilities" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_handles" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceCallAddStatus" cname="tp_cli_connection_interface_presence_call_add_status" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_status" />
          <parameter type="GHashTable*" name="in_parms" />
          <parameter type="tp_cli_connection_interface_presence_callback_for_add_status" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceCallClearStatus" cname="tp_cli_connection_interface_presence_call_clear_status" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_interface_presence_callback_for_clear_status" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceCallGetPresence" cname="tp_cli_connection_interface_presence_call_get_presence" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="tp_cli_connection_interface_presence_callback_for_get_presence" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceCallGetStatuses" cname="tp_cli_connection_interface_presence_call_get_statuses" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_interface_presence_callback_for_get_statuses" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceCallRemoveStatus" cname="tp_cli_connection_interface_presence_call_remove_status" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_status" />
          <parameter type="tp_cli_connection_interface_presence_callback_for_remove_status" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceCallRequestPresence" cname="tp_cli_connection_interface_presence_call_request_presence" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="tp_cli_connection_interface_presence_callback_for_request_presence" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceCallSetLastActivityTime" cname="tp_cli_connection_interface_presence_call_set_last_activity_time" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_time" />
          <parameter type="tp_cli_connection_interface_presence_callback_for_set_last_activity_time" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceCallSetStatus" cname="tp_cli_connection_interface_presence_call_set_status" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GHashTable*" name="in_statuses" />
          <parameter type="tp_cli_connection_interface_presence_callback_for_set_status" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceConnectToPresenceUpdate" cname="tp_cli_connection_interface_presence_connect_to_presence_update" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="tp_cli_connection_interface_presence_signal_callback_presence_update" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceRunAddStatus" cname="tp_cli_connection_interface_presence_run_add_status" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_status" />
          <parameter type="GHashTable*" name="in_parms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceRunClearStatus" cname="tp_cli_connection_interface_presence_run_clear_status" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceRunGetPresence" cname="tp_cli_connection_interface_presence_run_get_presence" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="GHashTable**" name="out_presence" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceRunGetStatuses" cname="tp_cli_connection_interface_presence_run_get_statuses" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GHashTable**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceRunRemoveStatus" cname="tp_cli_connection_interface_presence_run_remove_status" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_status" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceRunRequestPresence" cname="tp_cli_connection_interface_presence_run_request_presence" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceRunSetLastActivityTime" cname="tp_cli_connection_interface_presence_run_set_last_activity_time" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_time" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfacePresenceRunSetStatus" cname="tp_cli_connection_interface_presence_run_set_status" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GHashTable*" name="in_statuses" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceSimplePresenceCallGetPresences" cname="tp_cli_connection_interface_simple_presence_call_get_presences" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="tp_cli_connection_interface_simple_presence_callback_for_get_presences" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceSimplePresenceCallSetPresence" cname="tp_cli_connection_interface_simple_presence_call_set_presence" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_status" />
          <parameter type="const-gchar*" name="in_status_message" />
          <parameter type="tp_cli_connection_interface_simple_presence_callback_for_set_presence" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceSimplePresenceConnectToPresencesChanged" cname="tp_cli_connection_interface_simple_presence_connect_to_presences_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="tp_cli_connection_interface_simple_presence_signal_callback_presences_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceSimplePresenceRunGetPresences" cname="tp_cli_connection_interface_simple_presence_run_get_presences" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_contacts" />
          <parameter type="GHashTable**" name="out_presence" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionInterfaceSimplePresenceRunSetPresence" cname="tp_cli_connection_interface_simple_presence_run_set_presence" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_status" />
          <parameter type="const-gchar*" name="in_status_message" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionManagerCallGetParameters" cname="tp_cli_connection_manager_call_get_parameters" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnectionManager*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_proto" />
          <parameter type="tp_cli_connection_manager_callback_for_get_parameters" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionManagerCallListProtocols" cname="tp_cli_connection_manager_call_list_protocols" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnectionManager*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_connection_manager_callback_for_list_protocols" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionManagerCallRequestConnection" cname="tp_cli_connection_manager_call_request_connection" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpConnectionManager*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_proto" />
          <parameter type="GHashTable*" name="in_parameters" />
          <parameter type="tp_cli_connection_manager_callback_for_request_connection" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionManagerConnectToNewConnection" cname="tp_cli_connection_manager_connect_to_new_connection" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpConnectionManager*" name="proxy" />
          <parameter type="tp_cli_connection_manager_signal_callback_new_connection" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ConnectionManagerRunGetParameters" cname="tp_cli_connection_manager_run_get_parameters" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnectionManager*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_proto" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionManagerRunListProtocols" cname="tp_cli_connection_manager_run_list_protocols" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnectionManager*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar***" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionManagerRunRequestConnection" cname="tp_cli_connection_manager_run_request_connection" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnectionManager*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_proto" />
          <parameter type="GHashTable*" name="in_parameters" />
          <parameter type="gchar**" name="out0" />
          <parameter type="gchar**" name="out1" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunConnect" cname="tp_cli_connection_run_connect" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunDisconnect" cname="tp_cli_connection_run_disconnect" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunGetInterfaces" cname="tp_cli_connection_run_get_interfaces" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar***" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunGetProtocol" cname="tp_cli_connection_run_get_protocol" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunGetSelfHandle" cname="tp_cli_connection_run_get_self_handle" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunGetStatus" cname="tp_cli_connection_run_get_status" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunHoldHandles" cname="tp_cli_connection_run_hold_handles" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_handle_type" />
          <parameter type="const-GArray*" name="in_handles" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunInspectHandles" cname="tp_cli_connection_run_inspect_handles" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_handle_type" />
          <parameter type="const-GArray*" name="in_handles" />
          <parameter type="gchar***" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunListChannels" cname="tp_cli_connection_run_list_channels" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunReleaseHandles" cname="tp_cli_connection_run_release_handles" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_handle_type" />
          <parameter type="const-GArray*" name="in_handles" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunRequestChannel" cname="tp_cli_connection_run_request_channel" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_type" />
          <parameter type="guint" name="in_handle_type" />
          <parameter type="guint" name="in_handle" />
          <parameter type="gboolean" name="in_suppress_handler" />
          <parameter type="gchar**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="ConnectionRunRequestHandles" cname="tp_cli_connection_run_request_handles" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpConnection*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_handle_type" />
          <parameter type="const-gchar**" name="in_names" />
          <parameter type="GArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonCallAddMatch" cname="tp_cli_dbus_daemon_call_add_match" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="tp_cli_dbus_daemon_callback_for_add_match" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallGetConnectionSeLinuxSecurityContext" cname="tp_cli_dbus_daemon_call_get_connection_se_linux_security_context" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="tp_cli_dbus_daemon_callback_for_get_connection_se_linux_security_context" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallGetConnectionUnixProcessId" cname="tp_cli_dbus_daemon_call_get_connection_unix_process_id" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="tp_cli_dbus_daemon_callback_for_get_connection_unix_process_id" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallGetConnectionUnixUser" cname="tp_cli_dbus_daemon_call_get_connection_unix_user" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="tp_cli_dbus_daemon_callback_for_get_connection_unix_user" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallGetId" cname="tp_cli_dbus_daemon_call_get_id" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_dbus_daemon_callback_for_get_id" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallGetNameOwner" cname="tp_cli_dbus_daemon_call_get_name_owner" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="tp_cli_dbus_daemon_callback_for_get_name_owner" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallHello" cname="tp_cli_dbus_daemon_call_hello" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_dbus_daemon_callback_for_hello" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallListActivatableNames" cname="tp_cli_dbus_daemon_call_list_activatable_names" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_dbus_daemon_callback_for_list_activatable_names" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallListNames" cname="tp_cli_dbus_daemon_call_list_names" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_dbus_daemon_callback_for_list_names" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallListQueuedOwners" cname="tp_cli_dbus_daemon_call_list_queued_owners" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="tp_cli_dbus_daemon_callback_for_list_queued_owners" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallNameHasOwner" cname="tp_cli_dbus_daemon_call_name_has_owner" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="tp_cli_dbus_daemon_callback_for_name_has_owner" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallReleaseName" cname="tp_cli_dbus_daemon_call_release_name" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="tp_cli_dbus_daemon_callback_for_release_name" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallReloadConfig" cname="tp_cli_dbus_daemon_call_reload_config" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_dbus_daemon_callback_for_reload_config" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallRemoveMatch" cname="tp_cli_dbus_daemon_call_remove_match" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="tp_cli_dbus_daemon_callback_for_remove_match" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallRequestName" cname="tp_cli_dbus_daemon_call_request_name" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="guint" name="in1" />
          <parameter type="tp_cli_dbus_daemon_callback_for_request_name" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonCallStartServiceByName" cname="tp_cli_dbus_daemon_call_start_service_by_name" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="guint" name="in1" />
          <parameter type="tp_cli_dbus_daemon_callback_for_start_service_by_name" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusDaemonConnectToNameAcquired" cname="tp_cli_dbus_daemon_connect_to_name_acquired" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="tp_cli_dbus_daemon_signal_callback_name_acquired" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DbusDaemonConnectToNameLost" cname="tp_cli_dbus_daemon_connect_to_name_lost" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="tp_cli_dbus_daemon_signal_callback_name_lost" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DbusDaemonConnectToNameOwnerChanged" cname="tp_cli_dbus_daemon_connect_to_name_owner_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="tp_cli_dbus_daemon_signal_callback_name_owner_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DbusDaemonRunAddMatch" cname="tp_cli_dbus_daemon_run_add_match" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunGetConnectionSeLinuxSecurityContext" cname="tp_cli_dbus_daemon_run_get_connection_se_linux_security_context" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="GArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunGetConnectionUnixProcessId" cname="tp_cli_dbus_daemon_run_get_connection_unix_process_id" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunGetConnectionUnixUser" cname="tp_cli_dbus_daemon_run_get_connection_unix_user" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunGetId" cname="tp_cli_dbus_daemon_run_get_id" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunGetNameOwner" cname="tp_cli_dbus_daemon_run_get_name_owner" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="gchar**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunHello" cname="tp_cli_dbus_daemon_run_hello" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunListActivatableNames" cname="tp_cli_dbus_daemon_run_list_activatable_names" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar***" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunListNames" cname="tp_cli_dbus_daemon_run_list_names" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar***" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunListQueuedOwners" cname="tp_cli_dbus_daemon_run_list_queued_owners" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="gchar***" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunNameHasOwner" cname="tp_cli_dbus_daemon_run_name_has_owner" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="gboolean*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunReleaseName" cname="tp_cli_dbus_daemon_run_release_name" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunReloadConfig" cname="tp_cli_dbus_daemon_run_reload_config" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunRemoveMatch" cname="tp_cli_dbus_daemon_run_remove_match" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunRequestName" cname="tp_cli_dbus_daemon_run_request_name" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="guint" name="in1" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusDaemonRunStartServiceByName" cname="tp_cli_dbus_daemon_run_start_service_by_name" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in0" />
          <parameter type="guint" name="in1" />
          <parameter type="guint*" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusIntrospectableCallIntrospect" cname="tp_cli_dbus_introspectable_call_introspect" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_dbus_introspectable_callback_for_introspect" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusIntrospectableRunIntrospect" cname="tp_cli_dbus_introspectable_run_introspect" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar**" name="out_XML_Data" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusPeerCallGetMachineId" cname="tp_cli_dbus_peer_call_get_machine_id" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_dbus_peer_callback_for_get_machine_id" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusPeerCallPing" cname="tp_cli_dbus_peer_call_ping" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_dbus_peer_callback_for_ping" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusPeerRunGetMachineId" cname="tp_cli_dbus_peer_run_get_machine_id" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gchar**" name="out_Machine_UUID" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusPeerRunPing" cname="tp_cli_dbus_peer_run_ping" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusPropertiesCallGet" cname="tp_cli_dbus_properties_call_get" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_Interface_Name" />
          <parameter type="const-gchar*" name="in_Property_Name" />
          <parameter type="tp_cli_dbus_properties_callback_for_get" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusPropertiesCallGetAll" cname="tp_cli_dbus_properties_call_get_all" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_Interface_Name" />
          <parameter type="tp_cli_dbus_properties_callback_for_get_all" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusPropertiesCallSet" cname="tp_cli_dbus_properties_call_set" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_Interface_Name" />
          <parameter type="const-gchar*" name="in_Property_Name" />
          <parameter type="const-GValue*" name="in_Value" />
          <parameter type="tp_cli_dbus_properties_callback_for_set" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="DbusPropertiesRunGet" cname="tp_cli_dbus_properties_run_get" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_Interface_Name" />
          <parameter type="const-gchar*" name="in_Property_Name" />
          <parameter type="GValue**" name="out_Value" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusPropertiesRunGetAll" cname="tp_cli_dbus_properties_run_get_all" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_Interface_Name" />
          <parameter type="GHashTable**" name="out_Properties" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="DbusPropertiesRunSet" cname="tp_cli_dbus_properties_run_set" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_Interface_Name" />
          <parameter type="const-gchar*" name="in_Property_Name" />
          <parameter type="const-GValue*" name="in_Value" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaSessionHandlerCallError" cname="tp_cli_media_session_handler_call_error" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaSessionHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_errno" />
          <parameter type="const-gchar*" name="in_message" />
          <parameter type="tp_cli_media_session_handler_callback_for_error" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaSessionHandlerCallReady" cname="tp_cli_media_session_handler_call_ready" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaSessionHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_media_session_handler_callback_for_ready" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaSessionHandlerConnectToNewStreamHandler" cname="tp_cli_media_session_handler_connect_to_new_stream_handler" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaSessionHandler*" name="proxy" />
          <parameter type="tp_cli_media_session_handler_signal_callback_new_stream_handler" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaSessionHandlerRunError" cname="tp_cli_media_session_handler_run_error" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaSessionHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_errno" />
          <parameter type="const-gchar*" name="in_message" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaSessionHandlerRunReady" cname="tp_cli_media_session_handler_run_ready" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaSessionHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerCallCodecChoice" cname="tp_cli_media_stream_handler_call_codec_choice" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_codec_id" />
          <parameter type="tp_cli_media_stream_handler_callback_for_codec_choice" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerCallError" cname="tp_cli_media_stream_handler_call_error" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_errno" />
          <parameter type="const-gchar*" name="in_message" />
          <parameter type="tp_cli_media_stream_handler_callback_for_error" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerCallHoldState" cname="tp_cli_media_stream_handler_call_hold_state" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gboolean" name="in_Held" />
          <parameter type="tp_cli_media_stream_handler_callback_for_hold_state" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerCallNativeCandidatesPrepared" cname="tp_cli_media_stream_handler_call_native_candidates_prepared" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_media_stream_handler_callback_for_native_candidates_prepared" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerCallNewActiveCandidatePair" cname="tp_cli_media_stream_handler_call_new_active_candidate_pair" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_native_candidate_id" />
          <parameter type="const-gchar*" name="in_remote_candidate_id" />
          <parameter type="tp_cli_media_stream_handler_callback_for_new_active_candidate_pair" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerCallNewNativeCandidate" cname="tp_cli_media_stream_handler_call_new_native_candidate" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_candidate_id" />
          <parameter type="const-GPtrArray*" name="in_transports" />
          <parameter type="tp_cli_media_stream_handler_callback_for_new_native_candidate" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerCallReady" cname="tp_cli_media_stream_handler_call_ready" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GPtrArray*" name="in_codecs" />
          <parameter type="tp_cli_media_stream_handler_callback_for_ready" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerCallSetLocalCodecs" cname="tp_cli_media_stream_handler_call_set_local_codecs" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GPtrArray*" name="in_codecs" />
          <parameter type="tp_cli_media_stream_handler_callback_for_set_local_codecs" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerCallStreamState" cname="tp_cli_media_stream_handler_call_stream_state" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_state" />
          <parameter type="tp_cli_media_stream_handler_callback_for_stream_state" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerCallSupportedCodecs" cname="tp_cli_media_stream_handler_call_supported_codecs" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GPtrArray*" name="in_codecs" />
          <parameter type="tp_cli_media_stream_handler_callback_for_supported_codecs" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerCallUnholdFailure" cname="tp_cli_media_stream_handler_call_unhold_failure" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_media_stream_handler_callback_for_unhold_failure" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerConnectToAddRemoteCandidate" cname="tp_cli_media_stream_handler_connect_to_add_remote_candidate" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="tp_cli_media_stream_handler_signal_callback_add_remote_candidate" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerConnectToClose" cname="tp_cli_media_stream_handler_connect_to_close" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="tp_cli_media_stream_handler_signal_callback_close" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerConnectToRemoveRemoteCandidate" cname="tp_cli_media_stream_handler_connect_to_remove_remote_candidate" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="tp_cli_media_stream_handler_signal_callback_remove_remote_candidate" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerConnectToSetActiveCandidatePair" cname="tp_cli_media_stream_handler_connect_to_set_active_candidate_pair" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="tp_cli_media_stream_handler_signal_callback_set_active_candidate_pair" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerConnectToSetRemoteCandidateList" cname="tp_cli_media_stream_handler_connect_to_set_remote_candidate_list" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="tp_cli_media_stream_handler_signal_callback_set_remote_candidate_list" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerConnectToSetRemoteCodecs" cname="tp_cli_media_stream_handler_connect_to_set_remote_codecs" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="tp_cli_media_stream_handler_signal_callback_set_remote_codecs" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerConnectToSetStreamHeld" cname="tp_cli_media_stream_handler_connect_to_set_stream_held" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="tp_cli_media_stream_handler_signal_callback_set_stream_held" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerConnectToSetStreamPlaying" cname="tp_cli_media_stream_handler_connect_to_set_stream_playing" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="tp_cli_media_stream_handler_signal_callback_set_stream_playing" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerConnectToSetStreamSending" cname="tp_cli_media_stream_handler_connect_to_set_stream_sending" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="tp_cli_media_stream_handler_signal_callback_set_stream_sending" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerConnectToStartTelephonyEvent" cname="tp_cli_media_stream_handler_connect_to_start_telephony_event" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="tp_cli_media_stream_handler_signal_callback_start_telephony_event" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerConnectToStopTelephonyEvent" cname="tp_cli_media_stream_handler_connect_to_stop_telephony_event" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="tp_cli_media_stream_handler_signal_callback_stop_telephony_event" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerRunCodecChoice" cname="tp_cli_media_stream_handler_run_codec_choice" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_codec_id" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerRunError" cname="tp_cli_media_stream_handler_run_error" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_errno" />
          <parameter type="const-gchar*" name="in_message" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerRunHoldState" cname="tp_cli_media_stream_handler_run_hold_state" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="gboolean" name="in_Held" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerRunNativeCandidatesPrepared" cname="tp_cli_media_stream_handler_run_native_candidates_prepared" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerRunNewActiveCandidatePair" cname="tp_cli_media_stream_handler_run_new_active_candidate_pair" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_native_candidate_id" />
          <parameter type="const-gchar*" name="in_remote_candidate_id" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerRunNewNativeCandidate" cname="tp_cli_media_stream_handler_run_new_native_candidate" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-gchar*" name="in_candidate_id" />
          <parameter type="const-GPtrArray*" name="in_transports" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerRunReady" cname="tp_cli_media_stream_handler_run_ready" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GPtrArray*" name="in_codecs" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerRunSetLocalCodecs" cname="tp_cli_media_stream_handler_run_set_local_codecs" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GPtrArray*" name="in_codecs" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerRunStreamState" cname="tp_cli_media_stream_handler_run_stream_state" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="guint" name="in_state" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerRunSupportedCodecs" cname="tp_cli_media_stream_handler_run_supported_codecs" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GPtrArray*" name="in_codecs" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="MediaStreamHandlerRunUnholdFailure" cname="tp_cli_media_stream_handler_run_unhold_failure" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpMediaStreamHandler*" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="PropertiesInterfaceCallGetProperties" cname="tp_cli_properties_interface_call_get_properties" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_properties" />
          <parameter type="tp_cli_properties_interface_callback_for_get_properties" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="PropertiesInterfaceCallListProperties" cname="tp_cli_properties_interface_call_list_properties" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="tp_cli_properties_interface_callback_for_list_properties" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="PropertiesInterfaceCallSetProperties" cname="tp_cli_properties_interface_call_set_properties" shared="true">
        <return-type type="TpProxyPendingCall*" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GPtrArray*" name="in_properties" />
          <parameter type="tp_cli_properties_interface_callback_for_set_properties" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="PropertiesInterfaceConnectToPropertiesChanged" cname="tp_cli_properties_interface_connect_to_properties_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="tp_cli_properties_interface_signal_callback_properties_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="PropertiesInterfaceConnectToPropertyFlagsChanged" cname="tp_cli_properties_interface_connect_to_property_flags_changed" shared="true">
        <return-type type="TpProxySignalConnection*" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="tp_cli_properties_interface_signal_callback_property_flags_changed" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="PropertiesInterfaceRunGetProperties" cname="tp_cli_properties_interface_run_get_properties" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GArray*" name="in_properties" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="PropertiesInterfaceRunListProperties" cname="tp_cli_properties_interface_run_list_properties" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="GPtrArray**" name="out0" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
      <method name="PropertiesInterfaceRunSetProperties" cname="tp_cli_properties_interface_run_set_properties" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gpointer" name="proxy" />
          <parameter type="gint" name="timeout_ms" />
          <parameter type="const-GPtrArray*" name="in_properties" />
          <parameter type="GError**" name="error" />
          <parameter type="GMainLoop**" name="loop" />
        </parameters>
      </method>
    </class>
    <class name="Cm" cname="TpCm_">
      <method name="ParamFilterStringNonempty" cname="tp_cm_param_filter_string_nonempty" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-TpCMParamSpec*" name="paramspec" />
          <parameter type="GValue*" name="value" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ParamFilterUintNonzero" cname="tp_cm_param_filter_uint_nonzero" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-TpCMParamSpec*" name="paramspec" />
          <parameter type="GValue*" name="value" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ParamSetterOffset" cname="tp_cm_param_setter_offset" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-TpCMParamSpec*" name="paramspec" />
          <parameter type="const-GValue*" name="value" />
          <parameter type="gpointer" name="params" />
        </parameters>
      </method>
    </class>
    <class name="Dbus" cname="TpDbus_">
      <method name="CheckValidBusName" cname="tp_dbus_check_valid_bus_name" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="TpDBusNameType" name="allow_types" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="CheckValidInterfaceName" cname="tp_dbus_check_valid_interface_name" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="CheckValidMemberName" cname="tp_dbus_check_valid_member_name" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="CheckValidObjectPath" cname="tp_dbus_check_valid_object_path" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ErrorsQuark" cname="tp_dbus_errors_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GMethodReturnNotImplemented" cname="tp_dbus_g_method_return_not_implemented" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="DBusGMethodInvocation*" name="context" />
        </parameters>
      </method>
      <method name="PropertiesMixinGetterGobjectProperties" cname="tp_dbus_properties_mixin_getter_gobject_properties" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="object" />
          <parameter type="GQuark" name="interface" />
          <parameter type="GQuark" name="name" />
          <parameter type="GValue*" name="value" />
          <parameter type="gpointer" name="getter_data" />
        </parameters>
      </method>
      <method name="PropertiesMixinIfaceInit" cname="tp_dbus_properties_mixin_iface_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="g_iface" />
          <parameter type="gpointer" name="iface_data" />
        </parameters>
      </method>
      <method name="PropertiesMixinImplementInterface" cname="tp_dbus_properties_mixin_implement_interface" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObjectClass*" name="cls" />
          <parameter type="GQuark" name="iface" />
          <parameter type="TpDBusPropertiesMixinGetter" name="getter" />
          <parameter type="TpDBusPropertiesMixinSetter" name="setter" />
          <parameter type="TpDBusPropertiesMixinPropImpl*" name="props" />
        </parameters>
      </method>
      <method name="PropertiesMixinSetterGobjectProperties" cname="tp_dbus_properties_mixin_setter_gobject_properties" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="object" />
          <parameter type="GQuark" name="interface" />
          <parameter type="GQuark" name="name" />
          <parameter type="const-GValue*" name="value" />
          <parameter type="gpointer" name="setter_data" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SpecializedValueSliceNew" cname="tp_dbus_specialized_value_slice_new" shared="true">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="GType" name="type" />
        </parameters>
      </method>
    </class>
    <class name="Debug" cname="TpDebug_">
      <method name="DivertMessages" cname="tp_debug_divert_messages" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetAllFlags" cname="tp_debug_set_all_flags" shared="true">
        <return-type type="void" />
      </method>
      <method name="SetFlags" cname="tp_debug_set_flags" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="flags_string" />
        </parameters>
      </method>
      <method name="SetFlagsFromEnv" cname="tp_debug_set_flags_from_env" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="var" />
        </parameters>
      </method>
      <method name="SetFlagsFromString" cname="tp_debug_set_flags_from_string" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="flags_string" />
        </parameters>
      </method>
      <method name="SetPersistent" cname="tp_debug_set_persistent" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="persistent" />
        </parameters>
      </method>
      <method name="TimestampedLogHandler" cname="tp_debug_timestamped_log_handler" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="log_domain" />
          <parameter type="GLogLevelFlags" name="log_level" />
          <parameter type="const-gchar*" name="message" />
          <parameter type="gpointer" name="ignored" />
        </parameters>
      </method>
    </class>
    <class name="Errors" cname="TpErrors_">
      <method name="DisconnectedQuark" cname="tp_errors_disconnected_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="Quark" cname="tp_errors_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="RemovedFromGroupQuark" cname="tp_errors_removed_from_group_quark" shared="true">
        <return-type type="GQuark" />
      </method>
    </class>
    <class name="Global" cname="TpGlobal">
      <method name="EscapeAsIdentifier" cname="tp_escape_as_identifier" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="GetBus" cname="tp_get_bus" shared="true">
        <return-type type="DBusGConnection*" />
      </method>
      <method name="GetBusProxy" cname="tp_get_bus_proxy" shared="true">
        <return-type type="DBusGProxy*" />
      </method>
      <method name="MixinOffsetCast" cname="tp_mixin_offset_cast" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="gpointer" name="instance" />
          <parameter type="guint" name="offset" />
        </parameters>
      </method>
      <method name="RunConnectionManager" cname="tp_run_connection_manager" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="const-char*" name="prog_name" />
          <parameter type="const-char*" name="version" />
          <parameter type="RunConnectionManagerConstructCm" name="construct_cm" />
          <parameter type="int" name="argc" />
          <parameter type="char**" name="argv" />
        </parameters>
      </method>
      <method name="SvcInterfaceSetDbusPropertiesInfo" cname="tp_svc_interface_set_dbus_properties_info" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GType" name="g_interface" />
          <parameter type="TpDBusPropertiesMixinIfaceInfo*" name="info" />
        </parameters>
      </method>
      <method name="TypeDbusHashU28uss29" cname="tp_type_dbus_hash_u_28uss_29" shared="true">
        <return-type type="GType" />
      </method>
    </class>
    <class name="External" cname="TpExternal_">
      <method name="GroupMixinFinalize" cname="tp_external_group_mixin_finalize" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
        </parameters>
      </method>
      <method name="GroupMixinGetDbusProperty" cname="tp_external_group_mixin_get_dbus_property" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="object" />
          <parameter type="GQuark" name="interface" />
          <parameter type="GQuark" name="name" />
          <parameter type="GValue*" name="value" />
          <parameter type="gpointer" name="unused" />
        </parameters>
      </method>
      <method name="GroupMixinIfaceInit" cname="tp_external_group_mixin_iface_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="g_iface" />
          <parameter type="gpointer" name="iface_data" />
        </parameters>
      </method>
      <method name="GroupMixinInit" cname="tp_external_group_mixin_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
          <parameter type="GObject*" name="obj_with_mixin" />
        </parameters>
      </method>
      <method name="GroupMixinInitDbusProperties" cname="tp_external_group_mixin_init_dbus_properties" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObjectClass*" name="cls" />
        </parameters>
      </method>
    </class>
    <class name="G" cname="TpG_">
      <method name="HashTableUpdate" cname="tp_g_hash_table_update" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GHashTable*" name="target" />
          <parameter type="GHashTable*" name="source" />
          <parameter type="GBoxedCopyFunc" name="key_dup" />
          <parameter type="GBoxedCopyFunc" name="value_dup" />
        </parameters>
      </method>
      <method name="PtrArrayContains" cname="tp_g_ptr_array_contains" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GPtrArray*" name="haystack" />
          <parameter type="gpointer" name="needle" />
        </parameters>
      </method>
      <method name="SetErrorInvalidHandleType" cname="tp_g_set_error_invalid_handle_type" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="type" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetErrorUnsupportedHandleType" cname="tp_g_set_error_unsupported_handle_type" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="type" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ValueSliceDup" cname="tp_g_value_slice_dup" shared="true">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="ValueSliceFree" cname="tp_g_value_slice_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="ValueSliceNew" cname="tp_g_value_slice_new" shared="true">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="GType" name="type" />
        </parameters>
      </method>
    </class>
    <class name="Handle" cname="TpHandle_">
      <method name="ClientHold" cname="tp_handle_client_hold" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-gchar*" name="client" />
          <parameter type="TpHandle" name="handle" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ClientRelease" cname="tp_handle_client_release" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-gchar*" name="client" />
          <parameter type="TpHandle" name="handle" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="Ensure" cname="tp_handle_ensure" shared="true">
        <return-type type="TpHandle" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-gchar*" name="id" />
          <parameter type="gpointer" name="context" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetQdata" cname="tp_handle_get_qdata" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="repo" />
          <parameter type="TpHandle" name="handle" />
          <parameter type="GQuark" name="key_id" />
        </parameters>
      </method>
      <method name="Inspect" cname="tp_handle_inspect" shared="true">
        <return-type type="const-char*" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="TpHandle" name="handle" />
        </parameters>
      </method>
      <method name="IsValid" cname="tp_handle_is_valid" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="TpHandle" name="handle" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="Lookup" cname="tp_handle_lookup" shared="true">
        <return-type type="TpHandle" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-gchar*" name="id" />
          <parameter type="gpointer" name="context" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="Ref" cname="tp_handle_ref" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="TpHandle" name="handle" />
        </parameters>
      </method>
      <method name="Unref" cname="tp_handle_unref" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="TpHandle" name="handle" />
        </parameters>
      </method>
    </class>
    <class name="Handles" cname="TpHandles_">
      <method name="AreValid" cname="tp_handles_are_valid" shared="true">
        <return-type type="return" />
        <parameters>
          <parameter type="repos[handle_type]" name="arg1" />
          <parameter type="handles" name="arg2" />
          <parameter type="allow_zero" name="arg3" />
          <parameter type="error" name="arg4" />
        </parameters>
      </method>
      <method name="ClientHold" cname="tp_handles_client_hold" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-gchar*" name="client" />
          <parameter type="const-GArray*" name="handles" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ClientRelease" cname="tp_handles_client_release" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-gchar*" name="client" />
          <parameter type="const-GArray*" name="handles" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="Ref" cname="tp_handles_ref" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-GArray*" name="handles" />
        </parameters>
      </method>
      <method name="Unref" cname="tp_handles_unref" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpHandleRepoIface*" name="self" />
          <parameter type="const-GArray*" name="handles" />
        </parameters>
      </method>
    </class>
    <class name="Iface" cname="TpIface_">
      <method name="QuarkChannel" cname="tp_iface_quark_channel" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelInterfaceCallState" cname="tp_iface_quark_channel_interface_call_state" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelInterfaceChatState" cname="tp_iface_quark_channel_interface_chat_state" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelInterfaceDtmf" cname="tp_iface_quark_channel_interface_dtmf" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelInterfaceGroup" cname="tp_iface_quark_channel_interface_group" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelInterfaceHold" cname="tp_iface_quark_channel_interface_hold" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelInterfaceMediaSignalling" cname="tp_iface_quark_channel_interface_media_signalling" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelInterfacePassword" cname="tp_iface_quark_channel_interface_password" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelTypeContactList" cname="tp_iface_quark_channel_type_contact_list" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelTypeRoomList" cname="tp_iface_quark_channel_type_room_list" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelTypeStreamedMedia" cname="tp_iface_quark_channel_type_streamed_media" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelTypeText" cname="tp_iface_quark_channel_type_text" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkChannelTypeTubes" cname="tp_iface_quark_channel_type_tubes" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkConnection" cname="tp_iface_quark_connection" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkConnectionInterfaceAliasing" cname="tp_iface_quark_connection_interface_aliasing" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkConnectionInterfaceAvatars" cname="tp_iface_quark_connection_interface_avatars" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkConnectionInterfaceCapabilities" cname="tp_iface_quark_connection_interface_capabilities" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkConnectionInterfacePresence" cname="tp_iface_quark_connection_interface_presence" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkConnectionInterfaceSimplePresence" cname="tp_iface_quark_connection_interface_simple_presence" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkConnectionManager" cname="tp_iface_quark_connection_manager" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkDbusDaemon" cname="tp_iface_quark_dbus_daemon" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkDbusIntrospectable" cname="tp_iface_quark_dbus_introspectable" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkDbusPeer" cname="tp_iface_quark_dbus_peer" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkDbusProperties" cname="tp_iface_quark_dbus_properties" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkMediaSessionHandler" cname="tp_iface_quark_media_session_handler" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkMediaStreamHandler" cname="tp_iface_quark_media_stream_handler" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="QuarkPropertiesInterface" cname="tp_iface_quark_properties_interface" shared="true">
        <return-type type="GQuark" />
      </method>
    </class>
    <class name="List" cname="TpList_">
      <method name="ConnectionManagers" cname="tp_list_connection_managers" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="bus_daemon" />
          <parameter type="TpConnectionManagerListCb" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
      <method name="ConnectionNames" cname="tp_list_connection_names" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="TpDBusDaemon*" name="bus_daemon" />
          <parameter type="TpConnectionNameListCb" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
          <parameter type="GObject*" name="weak_object" />
        </parameters>
      </method>
    </class>
    <callback name="RunConnectionManagerConstructCm" cname="RunConnectionManagerConstructCm">
      <return-type type="TpBaseConnectionManager*" />
    </callback>
  </namespace>
</api>